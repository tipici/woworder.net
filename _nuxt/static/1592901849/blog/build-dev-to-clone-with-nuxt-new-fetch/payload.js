__NUXT_JSONP__("/blog/build-dev-to-clone-with-nuxt-new-fetch", {data:[{path:"\u002Fvi\u002Fblog\u002Fbuild-dev-to-clone-with-nuxt-new-fetch",post:{path:"vi\u002Fblog\u002Fbuild-dev-to-clone-with-nuxt-new-fetch.md",slug:"build-dev-to-clone-with-nuxt-new-fetch",readtime:{text:"22 min read",minutes:21.1,time:1266000,words:4220},title:"Build a DEV.TO clone with Nuxt new fetch",description:"Let’s build a blazing fast articles and tutorials app using Nuxt, Dev.to API, with lazy loading, placeholders, caching and trendy neumorphic design UI.",imgUrl:"blog\u002Fbuild-dev-to-clone-with-nuxt-new-fetch\u002Fmain.png",date:"2020-04-08T00:00:00.000Z",authors:[{name:"Sergey Bedritsky",avatarUrl:"https:\u002F\u002Fpbs.twimg.com\u002Fprofile_images\u002F1244291720566669315\u002FpGg6Xn-M_400x400.jpg",link:"https:\u002F\u002Ftwitter.com\u002Fsergeybedritsky"},{name:"Sebastien Chopin",avatarUrl:"https:\u002F\u002Fpbs.twimg.com\u002Fprofile_images\u002F1042510623962275840\u002F1Iw_Mvud_400x400.jpg",link:"https:\u002F\u002Ftwitter.com\u002FAtinux"}],tags:["Nuxt","Fetch","Asynchronous Data Fetching","API"],body:"\u003Cp\u003E\u003Cem\u003ELet’s build a blazing fast articles and tutorials app using Nuxt, Dev.to API, with lazy loading, placeholders, caching and trendy neumorphic design UI.\u003C\u002Fem\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cvideo src=\"\u002Fblog\u002Fbuild-dev-to-clone-with-nuxt-new-fetch\u002Fdev-clone-nuxt.mp4\" autoplay loop playsinline controls\u003E\u003C\u002Fvideo\u003E\u003C\u002Fp\u003E\n\u003Cp align=\"center\"\u003E\n  \u003Ca href=\"https:\u002F\u002Fdev-clone.nuxtjs.app\" target=\"_blank\" rel=\"noopener nofollow\"\u003EView demo\u003C\u002Fa\u003E \u002F \n  \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fbdrtsky\u002Fnuxt-dev-to-clone\" target=\"_blank\" rel=\"noopener nofollow\"\u003ESource\u003C\u002Fa\u003E\n\u003C\u002Fp\u003E\n\n\u003Cp\u003EThis article is intended to demonstrate use cases and awesomeness of new NuxtJS \u003Ccode\u003Efetch\u003C\u002Fcode\u003E functionality  \u003Ca href=\"https:\u002F\u002Fnuxtjs.org\u002Fapi\u002Fpages-fetch#nuxt-gt-2-12\"\u003Eintroduced in release v2.12\u003C\u002Fa\u003E, and show you how to apply its power in your own projects. For in-depth technical analysis and details of the new \u003Ccode\u003Efetch\u003C\u002Fcode\u003E you can check \u003Ca href=\"https:\u002F\u002Fnuxtjs.org\u002Fblog\u002Funderstanding-how-fetch-works-in-nuxt-2-12\"\u003EKrutie Patel’s article\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\n\u003Cp\u003EHere’s the high-level outline of how we will build our dev.to clone using \u003Ccode\u003Efetch\u003C\u002Fcode\u003E hook. We will:\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003Euse \u003Ccode\u003E$fetchState\u003C\u002Fcode\u003E for showing nice placeholders while data is fetching on the client side\u003C\u002Fli\u003E\n\u003Cli\u003Euse \u003Ccode\u003Ekeep-alive\u003C\u002Fcode\u003E and \u003Ccode\u003Eactivated\u003C\u002Fcode\u003E hook to efficiently cache API requests on pages that have already been visited\u003C\u002Fli\u003E\n\u003Cli\u003Ereuse the \u003Ccode\u003Efetch\u003C\u002Fcode\u003E hook with \u003Ccode\u003Ethis.$fetch()\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003Cli\u003Eset \u003Ccode\u003EfetchOnServer\u003C\u002Fcode\u003E value to control when we need to render our data on the server side or not\u003C\u002Fli\u003E\n\u003Cli\u003Efind a way to handle errors from \u003Ccode\u003Efetch\u003C\u002Fcode\u003E hook.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Ch2 id=\"table-of-contents\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#table-of-contents\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ETable of Contents\u003C\u002Fh2\u003E\u003Col\u003E\n\u003Cli\u003E\u003Ca href=\"#dev-to-api\"\u003EDEV.TO API\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#setting-up-the-project\"\u003ESetting up the Project\u003C\u002Fa\u003E\u003Col\u003E\n\u003Cli\u003E\u003Ca href=\"#css-styles\"\u003ECSS Styles\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#ui-design\"\u003EUI Design\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#svg-icons\"\u003ESVG icons\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#dependencies\"\u003EDependencies\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#developing-the-application\"\u003EDeveloping the Application\u003C\u002Fa\u003E\u003Col\u003E\n\u003Cli\u003E\u003Ca href=\"#url-structure\"\u003EURL structure\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#caching-requests-with-code-keep-alive-code-and-code-activated-code-hook\"\u003ECaching requests with \u003Ccode\u003Ekeep-alive\u003C\u002Fcode\u003E and \u003Ccode\u003Eactivated\u003C\u002Fcode\u003E hook\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#using-code-fetch-code-in-page-components\"\u003EUsing \u003Ccode\u003Efetch\u003C\u002Fcode\u003E in page components\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#reuse-code-fetch-code-with-code-this-fetch-code-\"\u003EReuse \u003Ccode\u003Efetch\u003C\u002Fcode\u003E with \u003Ccode\u003Ethis.$fetch()\u003C\u002Fcode\u003E\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#applying-placeholders-with-code-fetchstate-code-\"\u003EApplying placeholders with \u003Ccode\u003E$fetchState\u003C\u002Fcode\u003E\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#using-code-fetch-code-in-any-other-component-\"\u003EUsing \u003Ccode\u003Efetch\u003C\u002Fcode\u003E in any other component  🔥\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#error-handling\"\u003EError handling\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#conclusion\"\u003EConclusion\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Ch2 id=\"dev-to-api\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#dev-to-api\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EDEV.TO API\u003C\u002Fh2\u003E\u003Cp\u003EIn September 2019 DEV.TO  \u003Ca href=\"https:\u002F\u002Ftwitter.com\u002Fbendhalpern\u002Fstatus\u002F1176663688742395904\"\u003Eopened\u003C\u002Fa\u003E  their public API that we can now use to access articles, users and other resources data. \u003Cem\u003EPlease note that it’s still Beta, so it could change in future or some things might not work as expected.\u003C\u002Fem\u003E\u003C\u002Fp\u003E\n\u003Cp\u003EFor creating our DEV.TO clone we are interested in such API endpoints:\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fdocs.dev.to\u002Fapi\u002F#operation\u002FgetArticles\"\u003EgetArticles\u003C\u002Fa\u003E: to access a list of articles, filtered by the \u003Ccode\u003Etag\u003C\u002Fcode\u003E, \u003Ccode\u003Estate\u003C\u002Fcode\u003E, \u003Ccode\u003Etop\u003C\u002Fcode\u003E, \u003Ccode\u003Eusername\u003C\u002Fcode\u003E and paginated with \u003Ccode\u003Epage\u003C\u002Fcode\u003E parameters\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fdocs.dev.to\u002Fapi\u002F#operation\u002FgetArticleById\"\u003EgetArticleById\u003C\u002Fa\u003E: to access an article content\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fdocs.dev.to\u002Fapi\u002F#operation\u002FgetUser\"\u003EgetUser\u003C\u002Fa\u003E: to access user data \u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fdocs.dev.to\u002Fapi\u002F#operation\u002FgetCommentsByArticleId\"\u003EgetCommentsByArticleId\u003C\u002Fa\u003E: to fetch comments related to the article\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003ETo keep it simple, for communication with DEV.TO API we will use native Javascript  \u003Ca href=\"https:\u002F\u002Fdeveloper.mozilla.org\u002Fen-US\u002Fdocs\u002FWeb\u002FAPI\u002FFetch_API\"\u003EFetch API\u003C\u002Fa\u003E .\u003C\u002Fp\u003E\n\u003Ch2 id=\"setting-up-the-project\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#setting-up-the-project\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ESetting up the Project\u003C\u002Fh2\u003E\u003Cp\u003EIf you are an experienced developer you can skip this part and \u003Ca href=\"#developing-the-application\"\u003Eget straight to the point\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\n\u003Cp\u003EMake sure you have Node and npm installed. We will use \u003Ccode\u003Ecreate-nuxt-app\u003C\u002Fcode\u003E to  \u003Ca href=\"\u002Fguide\u002Finstallation#using-code-create-nuxt-app-code-\"\u003Einitialize\u003C\u002Fa\u003E  the project, so just type the following command in terminal:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs \"\u003Enpx create-nuxt-app nuxt-dev-to-clone\n# leave the default answers for each question\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003ENow \u003Ccode\u003Ecd nuxt-dev-to-clone\u002F\u003C\u002Fcode\u003E and run \u003Ccode\u003Enpm run dev\u003C\u002Fcode\u003E. Congrats, your Nuxt app is running on \u003Ca href=\"http:\u002F\u002Flocalhost:3000\u002F\"\u003Ehttp:\u002F\u002Flocalhost:3000\u003C\u002Fa\u003E!\u003C\u002Fp\u003E\n\u003Cp\u003ELet’s install necessary packages and discuss how we will build our app next.\u003C\u002Fp\u003E\n\u003Ch3 id=\"css-styles\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#css-styles\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ECSS Styles\u003C\u002Fh3\u003E\u003Cp\u003EFor styling we will use the most common CSS preprocessor Sass\u002FSCSS and leverage Vue.js \u003Ca href=\"https:\u002F\u002Fvue-loader.vuejs.org\u002Fguide\u002Fscoped-css.html\"\u003EScoped CSS\u003C\u002Fa\u003E feature, to keep our components styles incapsulated. To \u003Ca href=\"\u002Ffaq\u002Fpre-processors\"\u003Euse Sass\u002FSCSS with Nuxt\u003C\u002Fa\u003E run:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs \"\u003Enpm i -D sass sass-loader\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EWe also will use \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt-community\u002Fstyle-resources-module\"\u003E@nuxtjs\u002Fstyle-resources\u003C\u002Fa\u003E module that will help us to use our design tokens defined in SCSS variables in any Vue file without the necessity of using \u003Ccode\u003E@import\u003C\u002Fcode\u003E statements in each file.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs \"\u003Enpm i -D @nuxtjs\u002Fstyle-resources\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003ENow tell Nuxt to use it by adding this code to \u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003EbuildModules: [\n  \u003Cspan class=\"hljs-string\"\u003E'@nuxtjs\u002Fstyle-resources'\u003C\u002Fspan\u003E\n]\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003ERead more about this module \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt-community\u002Fstyle-resources-module#scss-example\"\u003Ehere\u003C\u002Fa\u003E, regarding \u003Ccode\u003EbuildModules\u003C\u002Fcode\u003E, you can learn more on it in the \u003Ca href=\"\u002Fapi\u002Fconfiguration-modules#-code-buildmodules-code-\"\u003Emodules vs buildModules\u003C\u002Fa\u003E section of the documentation.\u003C\u002Fp\u003E\n\u003Cp\u003ELet’s define our design tokens as SCSS variables, put them in \u003Ccode\u003E~\u002Fassets\u002Fstyles\u002Ftokens.scss\u003C\u002Fcode\u003E and tell \u003Ccode\u003E@nuxtjs\u002Fstyle-resources\u003C\u002Fcode\u003E to load them by adding to \u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003EstyleResources: {\n  \u003Cspan class=\"hljs-attr\"\u003Escss\u003C\u002Fspan\u003E: [\u003Cspan class=\"hljs-string\"\u003E'~\u002Fassets\u002Fstyles\u002Ftokens.scss'\u003C\u002Fspan\u003E]\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EOur design tokens are now available through SCSS variables in every Vue component.\u003C\u002Fp\u003E\n\u003Ch3 id=\"ui-design\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#ui-design\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EUI Design\u003C\u002Fh3\u003E\u003Cp\u003EIt will be kinda boring just to copy existing DEV.TO design and layout, so why don’t we experiment a little bit. You have probably already heard of the new UI trend — neumorphism. If you missed it somehow, read more about it \u003Ca href=\"https:\u002F\u002Fuxdesign.cc\u002Fneumorphism-in-user-interfaces-b47cef3bf3a6\"\u003Ehere\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\n\u003Cp\u003EWe can find a lot of \u003Ca href=\"https:\u002F\u002Fdribbble.com\u002Ftags\u002Fneumorphism\"\u003Edribbble shots\u003C\u002Fa\u003E (from where this trend came from), but still only a few examples of real-world web apps built with neumorphism style interface, so we just can’t miss the chance to recreate it with CSS and Vue.js. It’s simple, clean and fresh.\u003C\u002Fp\u003E\n\u003Cp\u003EI am not going to describe the styling aspect of this application in detail, but if you are interested, you can check this awesome article from  \u003Ca href=\"https:\u002F\u002Fcss-tricks.com\u002Fneumorphism-and-css\u002F\"\u003ECSS Tricks\u003C\u002Fa\u003E about neumorphism and CSS.\u003C\u002Fp\u003E\n\u003Ch3 id=\"svg-icons\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#svg-icons\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ESVG icons\u003C\u002Fh3\u003E\u003Cp\u003EFor SVG icons lets use \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt-community\u002Fsvg-module\"\u003E@nuxt\u002Fsvg\u003C\u002Fa\u003E. This module allows us to import \u003Ccode\u003E.svg\u003C\u002Fcode\u003E files as inline SVG, while keeping SVG sources in single place and not polluting Vue template markup with loads of SVG code.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs \"\u003Enpm i -D @nuxtjs\u002Fsvg\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003EbuildModules: [\n  \u003Cspan class=\"hljs-string\"\u003E'@nuxtjs\u002Fsvg'\u003C\u002Fspan\u003E,\n  \u003Cspan class=\"hljs-string\"\u003E'@nuxtjs\u002Fstyle-resources'\u003C\u002Fspan\u003E\n]\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"dependencies\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#dependencies\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EDependencies\u003C\u002Fh3\u003E\u003Cp\u003ETo keep front-end app fast and simple we will use only two dependencies, both from Vue.js core members:\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fgithub.com\u002FAkryum\u002Fvue-observe-visibility\"\u003Evue-observe-visibility\u003C\u002Fa\u003E by \u003Ca href=\"https:\u002F\u002Ftwitter.com\u002FAkryum\"\u003EGuillaume Chau\u003C\u002Fa\u003E, for effective detecting elements in viewport with IntersectionObserver and trigger lazy loading. Only 1.6kB gzipped\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fmichalsnik\u002Fvue-content-placeholders\"\u003Evue-content-placeholders\u003C\u002Fa\u003E by \u003Ca href=\"https:\u002F\u002Ftwitter.com\u002Fmichalsnik\"\u003EMichał Sajnóg\u003C\u002Fa\u003E, for showing nicely animated placeholders for UI elements while content is fetching. Only 650B gzipped.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003ELet’s add them as Nuxt \u003Ca href=\"https:\u002F\u002Fnuxtjs.org\u002Fapi\u002Fconfiguration-plugins#__layout\"\u003Eplugins\u003C\u002Fa\u003E, by creating two files.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Evue-observe-visibility.client.js\u003C\u002Fcode\u003E:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E Vue \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E'vue'\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E VueObserveVisibility \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E'vue-observe-visibility'\u003C\u002Fspan\u003E\n\nVue.use(VueObserveVisibility)\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003Ccode\u003Evue-placeholders.js\u003C\u002Fcode\u003E:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E Vue \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E'vue'\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E VueContentPlaceholders \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E'vue-content-placeholders'\u003C\u002Fspan\u003E\n\nVue.use(VueContentPlaceholders)\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EAnd add them to \u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003Eplugins: [\n  \u003Cspan class=\"hljs-string\"\u003E'~\u002Fplugins\u002Fvue-placeholders.js'\u003C\u002Fspan\u003E,\n  \u003Cspan class=\"hljs-string\"\u003E'~\u002Fplugins\u002Fvue-observe-visibility.client.js'\u003C\u002Fspan\u003E\n]\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch2 id=\"developing-the-application\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#developing-the-application\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EDeveloping the Application\u003C\u002Fh2\u003E\u003Cp\u003ENow we finally can start developing our DEV.TO clone powered by Nuxt and \u003Ca href=\"\u002Fapi\u002Fpages-fetch\"\u003Enew fetch\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\n\u003Ch3 id=\"url-structure\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#url-structure\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EURL structure\u003C\u002Fh3\u003E\u003Cp\u003ELet’s imitate DEV.TO URL structure for our simple app. Our \u003Ca href=\"https:\u002F\u002Fnuxtjs.org\u002Fguide\u002Fviews#pages\"\u003Epages\u003C\u002Fa\u003E folder should look like this:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs \"\u003E├── index.vue\n├── t\n│   └── _tag.vue\n├── top.vue\n└── _username\n    ├── _article.vue\n    └── index.vue\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EWe will have 2 \u003Ca href=\"https:\u002F\u002Fnuxtjs.org\u002Fguide\u002Frouting#basic-routes\"\u003Estatic pages\u003C\u002Fa\u003E:\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E\u003Ccode\u003Eindex.vue\u003C\u002Fcode\u003E: latest articles about Nuxt.js will be listed\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003Etop.vue\u003C\u002Fcode\u003E: most popular articles for last year period.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003EFor the rest of the app URL’s we will use convenient Nuxt file based \u003Ca href=\"https:\u002F\u002Fnuxtjs.org\u002Fguide\u002Frouting#dynamic-routes\"\u003Edynamic routes\u003C\u002Fa\u003E feature to scaffold necessary pages by creating such file structure:\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E\u003Ccode\u003E_username\u002Findex.vue\u003C\u002Fcode\u003E - user profile page with list of his published articles\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003E_username\u002F_article.vue\u003C\u002Fcode\u003E - this is where article, author profile and comments will be rendered\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003Et\u002F_tag.vue\u003C\u002Fcode\u003E - list of best articles by any tag that exist on DEV.TO\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003EThat’s all. Pretty simple, right?\u003C\u002Fp\u003E\n\u003Ch3 id=\"caching-requests-with-code-keep-alive-code-and-code-activated-code-hook\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#caching-requests-with-code-keep-alive-code-and-code-activated-code-hook\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ECaching requests with \u003Ccode\u003Ekeep-alive\u003C\u002Fcode\u003E and \u003Ccode\u003Eactivated\u003C\u002Fcode\u003E hook\u003C\u002Fh3\u003E\u003Cp\u003EOne of the coolest practical features of the new \u003Ccode\u003Efetch\u003C\u002Fcode\u003E is its ability to work with \u003Ccode\u003Ekeep-alive\u003C\u002Fcode\u003E directive to save \u003Ccode\u003Efetch\u003C\u002Fcode\u003E calls on pages you have already visited. Let’s apply this feature in \u003Ccode\u003Elayouts\u002Fdefault.vue\u003C\u002Fcode\u003E layout like this.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Enuxt\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ekeep-alive\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EWith this directive \u003Ccode\u003Efetch\u003C\u002Fcode\u003E will trigger only on the first page visit, after that Nuxt will save rendered components in memory, and on every subsequent visit it will be just reused from the cache. Could it be simpler than that?\u003C\u002Fp\u003E\n\u003Cp\u003EMoreover, Nuxt gives us fine grained control over \u003Ccode\u003Ekeep-alive\u003C\u002Fcode\u003E with the \u003Ccode\u003Ekeep-alive-props\u003C\u002Fcode\u003E property where you can set the number of components which you want to cache, and \u003Ccode\u003Eactivated\u003C\u002Fcode\u003E hook, where you can control TTL (time to live) of the cache. We will use the latest one in our app in the next sections.\u003C\u002Fp\u003E\n\u003Ch3 id=\"using-code-fetch-code-in-page-components\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#using-code-fetch-code-in-page-components\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EUsing \u003Ccode\u003Efetch\u003C\u002Fcode\u003E in page components\u003C\u002Fh3\u003E\u003Cp\u003ELet’s dive into the \u003Ccode\u003Efetch\u003C\u002Fcode\u003E feature itself. \u003C\u002Fp\u003E\n\u003Cp\u003ECurrently as you can see from the \u003Ca href=\"https:\u002F\u002Fdev-clone.nuxtjs.app\u002F\"\u003Efinal result\u003C\u002Fa\u003E we have 3 page components that basically reuse the same code — it’s the \u003Ccode\u003Eindex.vue\u003C\u002Fcode\u003E, \u003Ccode\u003Etop.vue\u003C\u002Fcode\u003E and \u003Ccode\u003Et\u002F_tag.vue\u003C\u002Fcode\u003E page components. They simply render a list of article preview cards.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Eindex.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"page-wrapper\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"article-cards-wrapper\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Earticle-card-block\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-attr\"\u003Ev-for\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"(article, i) in articles\"\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-attr\"\u003E:key\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"article.id\"\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-attr\"\u003E:article\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"article\"\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"article-card-block\"\u003C\u002Fspan\u003E\n        \u002F&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"javascript\"\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E ArticleCardBlock \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E'@\u002Fcomponents\u002Fblocks\u002FArticleCardBlock'\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003Ecomponents\u003C\u002Fspan\u003E: {\n    ArticleCardBlock\n  },\n  data() {\n    \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E {\n      \u003Cspan class=\"hljs-attr\"\u003EcurrentPage\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E1\u003C\u002Fspan\u003E,\n      \u003Cspan class=\"hljs-attr\"\u003Earticles\u003C\u002Fspan\u003E: []\n    }\n  },\n  \u003Cspan class=\"hljs-keyword\"\u003Easync\u003C\u002Fspan\u003E fetch() {\n    \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E articles = \u003Cspan class=\"hljs-keyword\"\u003Eawait\u003C\u002Fspan\u003E fetch(\u003Cspan class=\"hljs-string\"\u003E`https:\u002F\u002Fdev.to\u002Fapi\u002Farticles?tag=nuxt&amp;state=rising&amp;page=\u003Cspan class=\"hljs-subst\"\u003E${\u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.currentPage}\u003C\u002Fspan\u003E`\u003C\u002Fspan\u003E).then(\u003Cspan class=\"hljs-function\"\u003E(\u003Cspan class=\"hljs-params\"\u003Eres\u003C\u002Fspan\u003E) =&gt;\u003C\u002Fspan\u003E res.json())\n\n    \u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.articles = \u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.articles.concat(articles)\n  }\n}\n\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EPay attention to this code block:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Easync\u003C\u002Fspan\u003E fetch() {\n  \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E articles = \u003Cspan class=\"hljs-keyword\"\u003Eawait\u003C\u002Fspan\u003E fetch(\u003Cspan class=\"hljs-string\"\u003E`https:\u002F\u002Fdev.to\u002Fapi\u002Farticles?tag=nuxt&amp;state=rising&amp;page=\u003Cspan class=\"hljs-subst\"\u003E${\u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.currentPage}\u003C\u002Fspan\u003E`\u003C\u002Fspan\u003E).then(\u003Cspan class=\"hljs-function\"\u003E(\u003Cspan class=\"hljs-params\"\u003Eres\u003C\u002Fspan\u003E) =&gt;\u003C\u002Fspan\u003E res.json())\n\n  \u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.articles = \u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.articles.concat(articles)\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EHere we are making a request to DEV.TO \u003Ccode\u003E\u002Farticles\u003C\u002Fcode\u003E endpoint, with query parameters that API understands. Don’t confuse \u003Ccode\u003Efetch\u003C\u002Fcode\u003E hook with the Javascript \u003Ca href=\"https:\u002F\u002Fdeveloper.mozilla.org\u002Fen-US\u002Fdocs\u002FWeb\u002FAPI\u002FFetch_API\"\u003Efetch\u003C\u002Fa\u003E interface which simply helps us to send a request to DEV.TO API, and then parse the response with \u003Ccode\u003Eres.json()\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\n\u003Cp\u003EAlso notice that the new \u003Ccode\u003Efetch\u003C\u002Fcode\u003E hook doesn’t serve just to dispatch Vuex store action or committing mutation to set state, now it has access to \u003Ccode\u003Ethis\u003C\u002Fcode\u003E context, and is able to mutate component’s data directly. This is a very important new feature, and you can \u003Ca href=\"\u002Fblog\u002Funderstanding-how-fetch-works-in-nuxt-2-12\"\u003Eread more\u003C\u002Fa\u003E about it in the previous article about \u003Ccode\u003Efetch\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\n\u003Cp\u003ENow let’s markup the \u003Ccode\u003E&lt;article-card-block&gt;\u003C\u002Fcode\u003E component which receives \u003Ccode\u003Earticle\u003C\u002Fcode\u003E prop and renders its data nicely.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003EArticleCardBlock.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Enuxt-link\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:to\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"{ name: 'username-article', params: { username: article.user.username, article: article.id } }\"\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Etag\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"article\"\u003C\u002Fspan\u003E &gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"image-wrapper\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eimg\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ev-if\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"article.cover_image\"\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:src\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"article.cover_image\"\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:alt\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"article.title\"\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eimg\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ev-else\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:src\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"article.social_image\"\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:alt\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"article.title\"\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"content\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Enuxt-link\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:to\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"{name: 'username-article', params: { username: article.user.username, article: article.id } }\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eh1\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E{{ article.title }}\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Eh1\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Enuxt-link\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"tags\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Enuxt-link\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ev-for\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"tag in article.tag_list\"\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:key\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"tag\"\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:to\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"{ name: 't-tag', params: { tag } }\"\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"tag\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n          #{{ tag }}\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Enuxt-link\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"meta\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"scl\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Espan\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n            \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eheart-icon\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n            {{ article.positive_reactions_count }}\n          \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Espan\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Espan\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n            \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ecomments-icon\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n            {{ article.comments_count }}\n          \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Espan\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etime\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E{{ article.readable_publish_date }}\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etime\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Enuxt-link\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"javascript\"\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E HeartIcon \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E'@\u002Fassets\u002Ficons\u002Fheart.svg?inline'\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E CommentsIcon \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E'@\u002Fassets\u002Ficons\u002Fcomments.svg?inline'\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003Ecomponents\u003C\u002Fspan\u003E: {\n    HeartIcon,\n    CommentsIcon\n  },\n  \u003Cspan class=\"hljs-attr\"\u003Eprops\u003C\u002Fspan\u003E: {\n    \u003Cspan class=\"hljs-attr\"\u003Earticle\u003C\u002Fspan\u003E: {\n      \u003Cspan class=\"hljs-attr\"\u003Etype\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003EObject\u003C\u002Fspan\u003E,\n      \u003Cspan class=\"hljs-attr\"\u003Edefault\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-literal\"\u003Enull\u003C\u002Fspan\u003E\n    }\n  }\n}\n\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"reuse-code-fetch-code-with-code-this-fetch-code-\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#reuse-code-fetch-code-with-code-this-fetch-code-\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EReuse \u003Ccode\u003Efetch\u003C\u002Fcode\u003E with \u003Ccode\u003Ethis.$fetch()\u003C\u002Fcode\u003E\u003C\u002Fh3\u003E\u003Cp\u003EIt already should display a list of articles fetched from DEV.TO but it feels like we are not making a full use of this API. Let’s add lazy loading to articles list, and use the pagination parameter provided by this API. So when we scroll to the bottom of the page a new chunk of articles will be fetched and rendered.\u003C\u002Fp\u003E\n\u003Cp\u003ETo efficiently detect when to fetch the next page it’s better to use \u003Ca href=\"https:\u002F\u002Fdeveloper.mozilla.org\u002Fen-US\u002Fdocs\u002FWeb\u002FAPI\u002FIntersection_Observer_API\"\u003EIntersection Observer API\u003C\u002Fa\u003E. For that we will use a previously installed Vue plugin called \u003Ccode\u003Evue-observe-visibility\u003C\u002Fcode\u003E which is basically a wrapper around this API and it will detect when an element is becoming visible or hidden on the page. This plugin provides us a possibility to use \u003Ccode\u003Ev-observe-visibility\u003C\u002Fcode\u003E directive on any element, so let’s add it to last \u003Ccode\u003E&lt;article-card-block&gt;\u003C\u002Fcode\u003E component:\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Eindex.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Earticle-card-block\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-attr\"\u003Ev-for\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"(article, i) in articles\"\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-attr\"\u003E:key\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"article.id\"\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-attr\"\u003Ev-observe-visibility\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"\n    i === articles.length - 1 ? lazyLoadArticles : false\n  \"\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-attr\"\u003E:article\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"article\"\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"article-card-block\"\u003C\u002Fspan\u003E\n\u002F&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EAs you can guess from the code above, when the last \u003Ccode\u003E&lt;article-card-block&gt;\u003C\u002Fcode\u003E appears in viewport \u003Ccode\u003ElazyLoadArticles\u003C\u002Fcode\u003E will be fired. Let’s look at it:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003ElazyLoadArticles(isVisible) {\n  \u003Cspan class=\"hljs-keyword\"\u003Eif\u003C\u002Fspan\u003E (isVisible) {\n    \u003Cspan class=\"hljs-keyword\"\u003Eif\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.currentPage &lt; \u003Cspan class=\"hljs-number\"\u003E5\u003C\u002Fspan\u003E) {\n      \u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.currentPage++\n      \u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.$fetch()\n    }\n  }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EAnd here we see the power of the new \u003Ccode\u003Efetch\u003C\u002Fcode\u003E hook. We can just reuse \u003Ccode\u003E$fetch\u003C\u002Fcode\u003E as a method and fetch the next page when lazy loading is triggered.\u003C\u002Fp\u003E\n\u003Ch3 id=\"applying-placeholders-with-code-fetchstate-code-\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#applying-placeholders-with-code-fetchstate-code-\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EApplying placeholders with \u003Ccode\u003E$fetchState\u003C\u002Fcode\u003E\u003C\u002Fh3\u003E\u003Cp\u003EIf you already applied code from the previous section and tried client-side navigation between \u003Ccode\u003Eindex.vue\u003C\u002Fcode\u003E, \u003Ccode\u003Etop.vue\u003C\u002Fcode\u003E and \u003Ccode\u003Et\u002F_tag.vue\u003C\u002Fcode\u003E page components you probably noticed that it shows an empty page for the moment, while it’s waiting for the API request to complete. This is intended behavior, and it’s different from the old \u003Ccode\u003Efetch\u003C\u002Fcode\u003E and \u003Ccode\u003EasyncData\u003C\u002Fcode\u003E hooks that triggered before page navigation.\u003C\u002Fp\u003E\n\u003Cp\u003EThanks to \u003Ccode\u003E$fetchState.pending\u003C\u002Fcode\u003E wisely provided by the \u003Ccode\u003Efetch\u003C\u002Fcode\u003E hook we can use this flag to display a placeholder when fetch is being called on client-side. \u003Ccode\u003Evue-content-placeholders\u003C\u002Fcode\u003E plugin will be used as a placeholder.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Eindex.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"page-wrapper\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ev-if\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"$fetchState.pending\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"article-cards-wrapper\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Econtent-placeholders\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-attr\"\u003Ev-for\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"p in 30\"\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-attr\"\u003E:key\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"p\"\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-attr\"\u003Erounded\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"article-card-block\"\u003C\u002Fspan\u003E\n        &gt;\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Econtent-placeholders-img\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Econtent-placeholders-text\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:lines\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"3\"\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Econtent-placeholders\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ev-else-if\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"$fetchState.error\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E{{ $fetchState.error.message }}\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ev-else\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"article-cards-wrapper\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Earticle-card-block\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-attr\"\u003Ev-for\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"(article, i) in articles\"\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-attr\"\u003E:key\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"article.id\"\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-attr\"\u003Ev-observe-visibility\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"\n            i === articles.length - 1 ? lazyLoadArticles : false\n          \"\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-attr\"\u003E:article\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"article\"\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"article-card-block\"\u003C\u002Fspan\u003E\n        \u002F&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EWe imitate how \u003Ccode\u003E&lt;article-card-block&gt;\u003C\u002Fcode\u003E looks with \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fmichalsnik\u002Fvue-content-placeholders#available-components-and-properties\"\u003Evue-content-placeholders components\u003C\u002Fa\u003E, and as you could see in source code it will be used in almost every component that uses the \u003Ccode\u003Efetch\u003C\u002Fcode\u003E hook, so let’s not pay attention on those parts of code anymore (they are basically the same in each component).\u003C\u002Fp\u003E\n\u003Ch3 id=\"using-code-fetch-code-in-any-other-component-\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#using-code-fetch-code-in-any-other-component-\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EUsing \u003Ccode\u003Efetch\u003C\u002Fcode\u003E in any other component  🔥\u003C\u002Fh3\u003E\u003Cp\u003EThis is probably the most interesting feature of the new \u003Ccode\u003Efetch\u003C\u002Fcode\u003E hook. \u003Cstrong\u003EWe can now use the \u003Ccode\u003Efetch\u003C\u002Fcode\u003E hook in any Vue component without worrying about breaking SSR!\u003C\u002Fstrong\u003E This means far less headache about how to structure your async API calls and components.\u003C\u002Fp\u003E\n\u003Cp\u003ETo explore this great functionality let’s move to \u003Ccode\u003E_username\u002F_article.vue\u003C\u002Fcode\u003E page component.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"page-wrapper\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"article-content-wrapper\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Earticle-block\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"article-block\"\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"aside-username-wrapper\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Easide-username-block\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"aside-username-block\"\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ecomments-block\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"comments-block\"\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"javascript\"\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E ArticleBlock \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E'@\u002Fcomponents\u002Fblocks\u002FArticleBlock'\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E CommentsBlock \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E'@\u002Fcomponents\u002Fblocks\u002FCommentsBlock'\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E AsideUsernameBlock \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E'@\u002Fcomponents\u002Fblocks\u002FAsideUsernameBlock'\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003Ecomponents\u003C\u002Fspan\u003E: {\n    ArticleBlock,\n    CommentsBlock,\n    AsideUsernameBlock\n  }\n}\n\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EHere we see no data fetching at all, only a template layout consisting of 3 components: \u003Ccode\u003E&lt;article-block\u002F&gt;\u003C\u002Fcode\u003E, \u003Ccode\u003E&lt;aside-username-block\u002F&gt;\u003C\u002Fcode\u003E, \u003Ccode\u003E&lt;comments-block\u002F&gt;\u003C\u002Fcode\u003E. And each of those components has its own \u003Ccode\u003Efetch\u003C\u002Fcode\u003E hook. With old \u003Ccode\u003Efetch\u003C\u002Fcode\u003E or current \u003Ccode\u003EasyncData\u003C\u002Fcode\u003E earlier we would have to make all three requests to three different DEV.TO endpoints and then pass them to each component as a prop. But now those components are completely encapsulated.\u003C\u002Fp\u003E\n\u003Cp\u003EIn \u003Ccode\u003E&lt;article-block\u002F&gt;\u003C\u002Fcode\u003E we use \u003Ccode\u003Efetch\u003C\u002Fcode\u003E just like we’d use it in a page component. \u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Easync\u003C\u002Fspan\u003E fetch() {\n  \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E article = \u003Cspan class=\"hljs-keyword\"\u003Eawait\u003C\u002Fspan\u003E fetch(\n    \u003Cspan class=\"hljs-string\"\u003E`https:\u002F\u002Fdev.to\u002Fapi\u002Farticles\u002F\u003Cspan class=\"hljs-subst\"\u003E${\u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.$route.params.article}\u003C\u002Fspan\u003E`\u003C\u002Fspan\u003E\n  ).then(\u003Cspan class=\"hljs-function\"\u003E(\u003Cspan class=\"hljs-params\"\u003Eres\u003C\u002Fspan\u003E) =&gt;\u003C\u002Fspan\u003E res.json())\n\n  \u003Cspan class=\"hljs-keyword\"\u003Eif\u003C\u002Fspan\u003E (article.id &amp;&amp; article.user.username === \u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.$route.params.username) {\n    \u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.article = article\n    \u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.$store.commit(\u003Cspan class=\"hljs-string\"\u003E'SET_CURRENT_ARTICLE'\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.article)\n  } \u003Cspan class=\"hljs-keyword\"\u003Eelse\u003C\u002Fspan\u003E {\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F set status code on server\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-keyword\"\u003Eif\u003C\u002Fspan\u003E (process.server) {\n      \u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.$nuxt.context.res.statusCode = \u003Cspan class=\"hljs-number\"\u003E404\u003C\u002Fspan\u003E\n    }\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F throwing an error will set $fetchState.error\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-keyword\"\u003Ethrow\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-built_in\"\u003EError\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E'Article not found'\u003C\u002Fspan\u003E)\n  }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003ENow, remember in the section about caching I mentioned that there’s an \u003Ccode\u003Eactivated\u003C\u002Fcode\u003E hook that can be used for managing TTL of \u003Ccode\u003Efetch\u003C\u002Fcode\u003E? This is example of such usage:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003Eactivated() {\n    \u003Cspan class=\"hljs-keyword\"\u003Eif\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.$fetchState.timestamp &lt;= \u003Cspan class=\"hljs-built_in\"\u003EDate\u003C\u002Fspan\u003E.now() - \u003Cspan class=\"hljs-number\"\u003E60000\u003C\u002Fspan\u003E) {\n      \u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.$fetch()\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EWith this code in place we will call fetch again if last fetch was more than 60 sec ago. All other requests within this period will be cached.\u003C\u002Fp\u003E\n\u003Cp\u003EThere’s also interesting usage of another \u003Ccode\u003Efetch\u003C\u002Fcode\u003E feature called \u003Ccode\u003EfetchOnServer\u003C\u002Fcode\u003E in the \u003Ccode\u003E&lt;comments-block&gt;\u003C\u002Fcode\u003E component. We don’t really want to render this content on the server side, because comments are user generated and could be irrelevant or spammy. We don’t need any SEO for this content block. Now, with the help of mentioned \u003Ccode\u003EfetchOnServer\u003C\u002Fcode\u003E we have such control:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Easync\u003C\u002Fspan\u003E fetch() {\n  \u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.comments = \u003Cspan class=\"hljs-keyword\"\u003Eawait\u003C\u002Fspan\u003E fetch(\n    \u003Cspan class=\"hljs-string\"\u003E`https:\u002F\u002Fdev.to\u002Fapi\u002Fcomments?a_id=\u003Cspan class=\"hljs-subst\"\u003E${\u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.$route.params.article}\u003C\u002Fspan\u003E`\u003C\u002Fspan\u003E\n  ).then(\u003Cspan class=\"hljs-function\"\u003E(\u003Cspan class=\"hljs-params\"\u003Eres\u003C\u002Fspan\u003E) =&gt;\u003C\u002Fspan\u003E res.json())\n},\n\u003Cspan class=\"hljs-attr\"\u003EfetchOnServer\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-literal\"\u003Efalse\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"error-handling\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#error-handling\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EError handling\u003C\u002Fh3\u003E\u003Cp\u003ELast thing that should be mentioned is error handling. You probably already saw that we used error handling above, but let’s pay more attention to this important topic.\u003C\u002Fp\u003E\n\u003Cp\u003EAs you know, \u003Ccode\u003Efetch\u003C\u002Fcode\u003E is handled at the \u003Cstrong\u003Ecomponent level\u003C\u002Fstrong\u003E, when doing server-side rendering, the parent (virtual) dom tree is already rendered when rendering the component, so we cannot change it by calling \u003Ccode\u003E$nuxt.error(...)\u003C\u002Fcode\u003E, instead we have to \u003Cstrong\u003Ehandle the error at the component level\u003C\u002Fstrong\u003E.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003E$fetchState.error\u003C\u002Fcode\u003E is set if an error is thrown in the \u003Ccode\u003Efetch\u003C\u002Fcode\u003E hook, so we can use it in our template to display an error message:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E“page-wrapper”\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ev-if\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"$fetchState.pending\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003E!—\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eplaceholders\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Egoes\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ehere\u003C\u002Fspan\u003E —&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ev-else-if\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E“$fetchState.error\u003C\u002Fspan\u003E\"&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E{{ $fetchState.error.message }}\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ev-else\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003E!—\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Efetched\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Econtent\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Egoes\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ehere\u003C\u002Fspan\u003E —&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EThen, in our \u003Ccode\u003Efetch\u003C\u002Fcode\u003E hook, we will throw the error if we don&#39;t find the article corresponding for the defined author:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Easync\u003C\u002Fspan\u003E fetch() {\n  \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E article = \u003Cspan class=\"hljs-keyword\"\u003Eawait\u003C\u002Fspan\u003E fetch(\n    \u003Cspan class=\"hljs-string\"\u003E`https:\u002F\u002Fdev.to\u002Fapi\u002Farticles\u002F\u003Cspan class=\"hljs-subst\"\u003E${\u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.$route.params.article}\u003C\u002Fspan\u003E`\u003C\u002Fspan\u003E\n  ).then(\u003Cspan class=\"hljs-function\"\u003E(\u003Cspan class=\"hljs-params\"\u003Eres\u003C\u002Fspan\u003E) =&gt;\u003C\u002Fspan\u003E res.json())\n\n  \u003Cspan class=\"hljs-keyword\"\u003Eif\u003C\u002Fspan\u003E (article.id &amp;&amp; article.user.username === \u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.$route.params.username) {\n    \u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.article = article\n  } \u003Cspan class=\"hljs-keyword\"\u003Eelse\u003C\u002Fspan\u003E {\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F set status code on server\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-keyword\"\u003Eif\u003C\u002Fspan\u003E (process.server) {\n      \u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.$nuxt.context.res.statusCode = \u003Cspan class=\"hljs-number\"\u003E404\u003C\u002Fspan\u003E\n    }\n    \u003Cspan class=\"hljs-keyword\"\u003Ethrow\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-built_in\"\u003EError\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E'Article not found'\u003C\u002Fspan\u003E)\n  }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003ENote here that we wrap \u003Ccode\u003Ethis.$nuxt.context.res.statusCode = 404\u003C\u002Fcode\u003E around \u003Ccode\u003Eprocess.server\u003C\u002Fcode\u003E, this is used to set the HTTP status code on the server-side for correct SEO.\u003C\u002Fp\u003E\n\u003Ch2 id=\"conclusion\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#conclusion\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EConclusion\u003C\u002Fh2\u003E\u003Cp\u003EIn this article we explored Nuxt.js new \u003Ccode\u003Efetch\u003C\u002Fcode\u003E and built an app with basic DEV.TO content features and structure using only this \u003Ccode\u003Efetch\u003C\u002Fcode\u003E hook. I hope you got some inspiration to build your own version of DEV.TO. Don’t forget to check out the \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fbdrtsky\u002Fnuxt-dev-to-clone\"\u003Esource code\u003C\u002Fa\u003E for a more complete example and functionality.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EWhat to do next:\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003ERead \u003Ca href=\"\u002Fblog\u002Funderstanding-how-fetch-works-in-nuxt-2-12\"\u003EKrutie Patel article\u003C\u002Fa\u003E with in-depth analysis of how new \u003Ccode\u003Efetch\u003C\u002Fcode\u003E hook works\u003C\u002Fli\u003E\n\u003Cli\u003ECheck \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt\u002Fhackernews\"\u003Enuxt-hackernews\u003C\u002Fa\u003E for similar usage of \u003Ca href=\"https:\u002F\u002Fgithub.com\u002FHackerNews\u002FAPI\"\u003EHacker News API\u003C\u002Fa\u003E \u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#subscribe-to-newsletter\"\u003ESubscribe\u003C\u002Fa\u003E to the newsletter to not miss the upcoming articles and resources, I plan to write an article about How to create your personal blog with Nuxt and Dev.to as CMS.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n",links:{previous:{title:"Announcing Nuxt's $2M seed round",slug:"seed-round"},next:{title:"Understanding how fetch works in Nuxt 2.12",slug:"understanding-how-fetch-works-in-nuxt-2-12"}}}}],fetch:[],mutations:[]});