__NUXT_JSONP__("/blog", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){return {data:[{posts:[{path:"vi\u002Fblog\u002Fgoing-dark-with-nuxtjs-color-mode.md",slug:l,readtime:{text:"18 min read",minutes:17.91,time:1074600,words:3582},title:m,description:"The @nuxtjs\u002Fcolor-mode module is a cool way of adding dark mode to your site. But not only does it switch from dark to light but also any color theme (eg. sepia mode). It even has auto detection so that it will choose the right mode depending on your system appearance.",imgUrl:"blog\u002Fgoing-dark-with-nuxtjs-color-mode\u002Fmain.png",date:"2020-05-19T00:00:00.000Z",authors:[{name:"Debbie O'Brien",avatarUrl:"https:\u002F\u002Fpbs.twimg.com\u002Fprofile_images\u002F1252900852156772352\u002FJLIVJ-TC_400x400.jpg",link:"https:\u002F\u002Ftwitter.com\u002Fdebs_obrien"}],tags:[a,"Color mode"],body:"\u003Cp align=\"center\"\u003E\n  \u003Ca href=\"https:\u002F\u002Fcolor-mode.nuxtjs.app\u002F\" target=\"_blank\" rel=\"noopener nofollow\"\u003EView demo\u003C\u002Fa\u003E \u002F \n  \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt-community\u002Fcolor-mode-module\" target=\"_blank\" rel=\"noopener nofollow\"\u003ESource\u003C\u002Fa\u003E\n\u003C\u002Fp\u003E\n\n\u003Cp\u003EThe \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt-community\u002Fcolor-mode-module\"\u003E@nuxtjs\u002Fcolor-mode module\u003C\u002Fa\u003E is a cool way of adding dark mode to your site. But not only does it switch from dark to light but also any color theme (eg: sepia mode). It even has auto detection so that it will choose the right mode depending on your system appearance.\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E\u003Ca href=\"#how-does-it-work\"\u003EHow does it work\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#let-39-s-get-started\"\u003ELet&#39;s get started\u003C\u002Fa\u003E\u003Cul\u003E\n\u003Cli\u003E\u003Ca href=\"#install-the-color-mode-module\"\u003EInstall the color-mode module\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#adding-your-colour-styles\"\u003EAdding your colour styles\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#inspecting-the-html\"\u003EInspecting the HTML\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#creating-a-color-mode-switcher\"\u003ECreating a color-mode switcher\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#importing-our-component\"\u003EImporting our component\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#adding-a-click-event-to-change-our-colours\"\u003EAdding a click event to change our colours\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#adding-some-icons\"\u003EAdding some icons\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#importing-the-svgs-as-components\"\u003EImporting the svgs as components\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#adding-a-dynamic-component\"\u003EAdding a dynamic component\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#styling-our-icons\"\u003EStyling our icons\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#creating-a-method-to-show-our-preferred-class\"\u003ECreating a method to show our preferred class\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#adding-some-text-using-the-colorscheme-component\"\u003EAdding some text using the ColorScheme component\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#adding-a-text-when-system-is-chosen\"\u003EAdding a text when system is chosen\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#tidying-up-our-styles\"\u003ETidying up our styles\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#conclusion\"\u003EConclusion\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#what-to-do-next\"\u003EWhat to do next\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Ch2 id=\"how-does-it-work\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#how-does-it-work\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EHow does it work\u003C\u002Fh2\u003E\u003Cp\u003EThe \u003Ccode\u003E@nuxtjs\u002Fcolor-mode\u003C\u002Fcode\u003E adds a \u003Ccode\u003E.${color}-mode\u003C\u002Fcode\u003E class to the \u003Ccode\u003E&lt;html&gt;\u003C\u002Fcode\u003E tag. It works with any NuxtJS target, either static or server and universal or client-side rendering. It auto detects the system color-mode so that you don&#39;t have to manually change the colour. \u003C\u002Fp\u003E\n\u003Cp\u003EIt injects a \u003Ccode\u003E$colorMode\u003C\u002Fcode\u003E helper with:\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E\u003Ccode\u003Epreference\u003C\u002Fcode\u003E: Actual color-mode selected (can be \u003Ccode\u003E&#39;system&#39;\u003C\u002Fcode\u003E), update it to change the user preferred colour mode\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003Evalue\u003C\u002Fcode\u003E: Useful to know what color mode has been detected when \u003Ccode\u003E$colorMode === &#39;system&#39;\u003C\u002Fcode\u003E, you should not update it\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003Eunknown\u003C\u002Fcode\u003E: Useful to know if, during SSR or static generation, we need to render a placeholder\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Ch2 id=\"let-39-s-get-started\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#let-39-s-get-started\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ELet&#39;s get started\u003C\u002Fh2\u003E\u003Cp\u003EYou can work on an already created project or start a new one. For this example I have created a new project and added some dummy text to the index.vue file in the pages folder.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eh1\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003ETesting color mode\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Eh1\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"install-the-color-mode-module\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#install-the-color-mode-module\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EInstall the color-mode module\u003C\u002Fh3\u003E\u003Cp\u003EFirst of all you need to install the module as a dependency to your Nuxt.js project. \u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs bash\"\u003Eyarn add --dev @nuxtjs\u002Fcolor-mode\n\u003Cspan class=\"hljs-comment\"\u003E# OR npm install --save-dev @nuxtjs\u002Fcolor-mode\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EThen you need to add the module to the \u003Ccode\u003EbuildModules\u003C\u002Fcode\u003E section of your nuxt.config.js file. \u003C\u002Fp\u003E\n\u003Cdiv class=\"Alert Alert--nuxt-green\"\u003E\n\n\u003Cp\u003E\u003Cb\u003EInfo:\u003C\u002Fb\u003E If you don&#39;t have a nuxt.config.js file already you can create one in the root directory and add the code below.\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\n\u003Cp\u003E\u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs javascript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003EbuildModules\u003C\u002Fspan\u003E: [\n    \u003Cspan class=\"hljs-string\"\u003E'@nuxtjs\u002Fcolor-mode'\u003C\u002Fspan\u003E\n  ]\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EIf you using a version of Nuxt.js lower than 2.9.0 you will need to add it to the \u003Ccode\u003Emodules\u003C\u002Fcode\u003E property instead of \u003Ccode\u003EbuildModules\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\n\u003Cdiv class=\"Alert Alert--nuxt-green\"\u003E\n\n\u003Cp\u003E\u003Cb\u003EInfo:\u003C\u002Fb\u003E To check what version of Nuxt.js you have you can run \u003Ccode\u003Eyarn nuxt -v\u003C\u002Fcode\u003E or \u003Ccode\u003Enpm run nuxt -v\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\n\u003Ch3 id=\"adding-your-colour-styles\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#adding-your-colour-styles\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EAdding your colour styles\u003C\u002Fh3\u003E\u003Cp\u003ENow you need to add some styles to your mode classes. Let&#39;s add a \u003Ccode\u003Emain.css\u003C\u002Fcode\u003E file in our assets folder. We will use CSS variables to set the root colour which will be light mode and then set the colours for dark and sepia mode. Then we can add some styles to our body and link tags.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Eassets\u002Fmain.css\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs css\"\u003E\u003Cspan class=\"hljs-selector-pseudo\"\u003E:root\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attribute\"\u003E--color\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E#243746\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003E--color-primary\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E#158876\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003E--color-secondary\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E#0e2233\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003E--bg\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E#f3f5f4\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003E--bg-secondary\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E#fff\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003E--border-color\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E#ddd\u003C\u002Fspan\u003E;\n}\n\n\u003Cspan class=\"hljs-selector-class\"\u003E.dark-mode\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attribute\"\u003E--color\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E#ebf4f1\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003E--color-primary\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E#41b38a\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003E--color-secondary\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E#fdf9f3\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003E--bg\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E#091a28\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003E--bg-secondary\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E#071521\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003E--border-color\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E#0d2538\u003C\u002Fspan\u003E;\n}\n\u003Cspan class=\"hljs-selector-class\"\u003E.sepia-mode\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attribute\"\u003E--color\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E#433422\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003E--color-secondary\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E#504231\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003E--bg\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E#f1e7d0\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003E--bg-secondary\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E#eae0c9\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003E--border-color\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E#ded0bf\u003C\u002Fspan\u003E;\n}\n\n\u003Cspan class=\"hljs-selector-tag\"\u003Ebody\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attribute\"\u003Efont-family\u003C\u002Fspan\u003E: -apple-system, BlinkMacSystemFont, \u003Cspan class=\"hljs-string\"\u003E'Segoe UI'\u003C\u002Fspan\u003E, Roboto, Oxygen, Ubuntu, Cantarell, \u003Cspan class=\"hljs-string\"\u003E'Open Sans'\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-string\"\u003E'Helvetica Neue'\u003C\u002Fspan\u003E, sans-seriff;\n  \u003Cspan class=\"hljs-attribute\"\u003Ebackground-color\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Evar\u003C\u002Fspan\u003E(--bg);\n  \u003Cspan class=\"hljs-attribute\"\u003Ecolor\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Evar\u003C\u002Fspan\u003E(--color);\n  \u003Cspan class=\"hljs-attribute\"\u003Etransition\u003C\u002Fspan\u003E: background-color .\u003Cspan class=\"hljs-number\"\u003E3s\u003C\u002Fspan\u003E;\n}\n\u003Cspan class=\"hljs-selector-tag\"\u003Ea\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attribute\"\u003Ecolor\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Evar\u003C\u002Fspan\u003E(--color-primary)\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EIn order to use this CSS file in our application we need to register it. We do this by adding a css property to our configuration file and adding the css file that we have just created.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003Ecss: [\u003Cspan class=\"hljs-string\"\u003E'@\u002Fassets\u002Fmain.css'\u003C\u002Fspan\u003E]\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"inspecting-the-html\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#inspecting-the-html\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EInspecting the HTML\u003C\u002Fh3\u003E\u003Cp\u003ENow if you launch your site with \u003Ccode\u003Enpm run dev\u003C\u002Fcode\u003E or \u003Ccode\u003Enpx nuxt dev\u003C\u002Fcode\u003E you should see dark mode if your system is already set to dark mode and if you inspect the code you will see the class added to your html tag. \n\u003Cvideo src=\"\u002Fblog\u002Fgoing-dark-with-nuxtjs-color-mode\u002Ftesting-html.mp4\" autoplay loop playsinline controls\u003E\u003C\u002Fvideo\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ehtml\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"dark-mode\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E \u002F\u002F you might have light-mode here\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EUsing the dev tools change the mode to sepia-mode and light-mode to see the effects.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ehtml\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"sepia-mode\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-comment\"\u003E&lt;!-- or --&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ehtml\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"light-mode\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-comment\"\u003E&lt;!-- or dark mode if you have already seen the light --&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EYou can also change the colour in the console by typing:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E$nuxt.$colorMode.preference = \u003Cspan class=\"hljs-string\"\u003E\"sepia\"\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003Cvideo src=\"\u002Fblog\u002Fgoing-dark-with-nuxtjs-color-mode\u002Ftesting-console.mp4\" autoplay loop playsinline controls\u003E\u003C\u002Fvideo\u003E\u003C\u002Fp\u003E\n\u003Ch3 id=\"creating-a-color-mode-switcher\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#creating-a-color-mode-switcher\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ECreating a color-mode switcher\u003C\u002Fh3\u003E\u003Cp\u003EObviously changing the mode in the dev tools is not what we want so let&#39;s create a color-mode switcher so our users can quickly change from one colour to another.\u003C\u002Fp\u003E\n\u003Cp\u003ELet&#39;s create a component called \u003Ccode\u003EColorModePicker\u003C\u002Fcode\u003E and we can add a list of colors. For now we can just print out the color from our v-for.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Ecomponents\u002FColorModePicker.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eul\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eli\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ev-for\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"color of colors\"\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:key\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"color\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n        {{color}}\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Eli\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Eul\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EAnd in our data property let&#39;s return an array of colors for each mode. \u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Ecomponents\u002FColorModePicker.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"javascript\"\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  data () {\n    \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E {\n      \u003Cspan class=\"hljs-attr\"\u003Ecolors\u003C\u002Fspan\u003E: [\u003Cspan class=\"hljs-string\"\u003E'system'\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-string\"\u003E'light'\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-string\"\u003E'dark'\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-string\"\u003E'sepia'\u003C\u002Fspan\u003E]\n    }\n  }\n}\n\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"importing-our-component\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#importing-our-component\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EImporting our component\u003C\u002Fh3\u003E\u003Cp\u003ELet&#39;s import our component into our index.vue page so we can see what is happening.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Epages\u002Findex.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003EColorModePicker\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"javascript\"\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E ColorModePicker \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E'@\u002Fcomponents\u002FColorModePicker'\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003Ecomponents\u003C\u002Fspan\u003E:{\n    ColorModePicker\n  }\n}\n\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EAnd in our browser under \u003Ccode\u003Ehttp:\u002F\u002Flocalhost:3000\u003C\u002Fcode\u003E you will see our list of colours.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"\u002Fblog\u002Fgoing-dark-with-nuxtjs-color-mode\u002Flist-of-colors.png\" alt=\"list of colours\"\u003E\u003C\u002Fp\u003E\n\u003Ch3 id=\"adding-a-click-event-to-change-our-colours\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#adding-a-click-event-to-change-our-colours\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EAdding a click event to change our colours\u003C\u002Fh3\u003E\u003Cp\u003EThen in our template we can add a click event that will make the \u003Ccode\u003E$colorMode.preference\u003C\u002Fcode\u003E equal to the color which comes from our data.\u003C\u002Fp\u003E\n\u003Cp\u003EWe can use our \u003Ccode\u003E$colorMode\u003C\u002Fcode\u003E helper that we get with the color-mode module. When the user clicks the \u003Ccode\u003E$colorMode.preference\u003C\u002Fcode\u003E will be set to the color coming from our data. \u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Ecomponents\u002FColorModePicker.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eli\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ev-for\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"color of colors\"\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:key\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"color\"\u003C\u002Fspan\u003E @\u003Cspan class=\"hljs-attr\"\u003Eclick\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"$colorMode.preference = color\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EThis is actually all you need in order for it to work. If you check in your browser you will see that by clicking on any of the colors the background is changing. It probably won&#39;t have a pointer cursor so if you think it doesn&#39;t work it probably does just you are used to seeing the cursor.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cvideo src=\"\u002Fblog\u002Fgoing-dark-with-nuxtjs-color-mode\u002Fcolor-changing-text-only.mp4\" autoplay loop playsinline controls\u003E\u003C\u002Fvideo\u003E\u003C\u002Fp\u003E\n\u003Cp\u003EAnd if we check in the broswer we can see it works but this is super ugly. Let&#39;s tidy it up a bit.\u003C\u002Fp\u003E\n\u003Ch3 id=\"adding-some-icons\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#adding-some-icons\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EAdding some icons\u003C\u002Fh3\u003E\u003Cp\u003ELet&#39;s add some icons. you can copy the icons \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt-community\u002Fcolor-mode-module\u002Ftree\u002Fmaster\u002Fexample\u002Fassets\u002Ficons\"\u003Efrom here\u003C\u002Fa\u003E and place them in your assets folder in a new folder called icons.\u003C\u002Fp\u003E\n\u003Cp\u003EWe are going to use our icons as a component and in order to do that we will use the \u003Ca href=\"https:\u002F\u002Fwww.npmjs.com\u002Fpackage\u002F@nuxtjs\u002Fsvg\"\u003E@nuxtjs\u002Fsvg\u003C\u002Fa\u003E module which allows you to import .svg files in multiple ways depending on the resource query you provide.\u003C\u002Fp\u003E\n\u003Cp\u003EFirst you will need to install it\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs bash\"\u003Eyarn add --dev @nuxtjs\u002Fsvg\n\u003Cspan class=\"hljs-comment\"\u003E# OR npm install --save-dev @nuxtjs\u002Fsvg\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EThen we need to add it to your \u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003E in the buildModules section which should already have the \u003Ccode\u003E@nuxtjs\u002Fcolor-mode\u003C\u002Fcode\u003E module.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003EbuildModules: [\n  \u003Cspan class=\"hljs-string\"\u003E'@nuxtjs\u002Fsvg'\u003C\u002Fspan\u003E,\n  \u003Cspan class=\"hljs-string\"\u003E'@nuxtjs\u002Fcolor-mode'\u003C\u002Fspan\u003E\n]\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"importing-the-svgs-as-components\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#importing-the-svgs-as-components\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EImporting the svgs as components\u003C\u002Fh3\u003E\u003Cp\u003EWe can now import these svg icons as components using the \u003Ccode\u003E?inline\u003C\u002Fcode\u003E query so that they are imported as inline svgs.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Ecomponents\u002FColorModePicker.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"javascript\"\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E IconSystem \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E'@\u002Fassets\u002Ficons\u002Fsystem.svg?inline'\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E IconLight \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E'@\u002Fassets\u002Ficons\u002Flight.svg?inline'\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E IconDark \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E'@\u002Fassets\u002Ficons\u002Fdark.svg?inline'\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E IconSepia \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E'@\u002Fassets\u002Ficons\u002Fsepia.svg?inline'\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003Ecomponents\u003C\u002Fspan\u003E: {\n    IconSystem,\n    IconLight,\n    IconDark,\n    IconSepia\n  },\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F ... data property will be here\u003C\u002Fspan\u003E\n\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"adding-a-dynamic-component\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#adding-a-dynamic-component\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EAdding a dynamic component\u003C\u002Fh3\u003E\u003Cp\u003ENow we can use a dynamic component which will check which icon to add depending on the colours in our data array. Lets replace the \u003Ccode\u003E{{color}}\u003C\u002Fcode\u003E text with this new component inside our \u003Ccode\u003E&lt;li&gt;\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Ecomponents\u002FColorModePicker.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ecomponent\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:is\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"`icon-${color}`\"\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003ELet&#39;s move our click event from our \u003Ccode\u003E&lt;li&gt;\u003C\u002Fcode\u003E to our icon component. \u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Ecomponents\u002FColorModePicker.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ecomponent\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:is\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"`icon-${color}`\"\u003C\u002Fspan\u003E @\u003Cspan class=\"hljs-attr\"\u003Eclick\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"$colorMode.preference = color\"\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"styling-our-icons\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#styling-our-icons\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EStyling our icons\u003C\u002Fh3\u003E\u003Cp\u003EAnd let&#39;s add some styles so we can see our icons. We will use scoped styling and use the class feather. If you look into your svg files you will see that our svgs have the class of feather so we can use this class to style it. We will also add a preferred and selected class so we know which one has been selected and what is the preferred one.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Ecomponents\u002FColorModePicker.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Estyle\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Escoped\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"css\"\u003E\n\u003Cspan class=\"hljs-selector-class\"\u003E.feather\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attribute\"\u003Eposition\u003C\u002Fspan\u003E: relative;\n  \u003Cspan class=\"hljs-attribute\"\u003Etop\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E0px\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003Ecursor\u003C\u002Fspan\u003E: pointer;\n  \u003Cspan class=\"hljs-attribute\"\u003Epadding\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E7px\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003Ebackground-color\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Evar\u003C\u002Fspan\u003E(--bg-secondary);\n  \u003Cspan class=\"hljs-attribute\"\u003Eborder\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E2px\u003C\u002Fspan\u003E solid \u003Cspan class=\"hljs-built_in\"\u003Evar\u003C\u002Fspan\u003E(--border-color);\n  \u003Cspan class=\"hljs-attribute\"\u003Emargin\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E0\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003Eborder-radius\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E5px\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003Etransition\u003C\u002Fspan\u003E: all \u003Cspan class=\"hljs-number\"\u003E0.1s\u003C\u002Fspan\u003E ease;\n}\n\u003Cspan class=\"hljs-selector-class\"\u003E.feather\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-selector-pseudo\"\u003E:hover\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attribute\"\u003Etop\u003C\u002Fspan\u003E: -\u003Cspan class=\"hljs-number\"\u003E3px\u003C\u002Fspan\u003E;\n}\n\u003Cspan class=\"hljs-selector-class\"\u003E.feather\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-selector-class\"\u003E.preferred\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attribute\"\u003Eborder-color\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Evar\u003C\u002Fspan\u003E(--color-primary);\n  \u003Cspan class=\"hljs-attribute\"\u003Etop\u003C\u002Fspan\u003E: -\u003Cspan class=\"hljs-number\"\u003E3px\u003C\u002Fspan\u003E;\n}\n\u003Cspan class=\"hljs-selector-class\"\u003E.feather\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-selector-class\"\u003E.selected\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attribute\"\u003Ecolor\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Evar\u003C\u002Fspan\u003E(--color-primary);\n}\n\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Estyle\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EYou won&#39;t see much difference right now except that the icons look a bit nicer but now we need to show a different class for our preferred icon which comes from our system preference and one for our selected icon which is for when we use the click event to change the color.\u003C\u002Fp\u003E\n\u003Ch3 id=\"creating-a-method-to-show-our-preferred-class\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#creating-a-method-to-show-our-preferred-class\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ECreating a method to show our preferred class\u003C\u002Fh3\u003E\u003Cp\u003ETo do this we can create a method that will return the class we want. We can call our method \u003Ccode\u003EgetClasses\u003C\u002Fcode\u003E and pass in the color as the parameter The two classes we want to return are preferred and selected. The preferred color should be equal to the \u003Ccode\u003E$colorMode.preference\u003C\u002Fcode\u003E and the selected color should be equal to the \u003Ccode\u003E$colorMode.value\u003C\u002Fcode\u003E. If the colorMode is unknown we can return an empty object. \u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Ecomponents\u002FColorModePicker.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003Edata () {\n  \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E {\n    \u003Cspan class=\"hljs-attr\"\u003Ecolors\u003C\u002Fspan\u003E: [\u003Cspan class=\"hljs-string\"\u003E'system'\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-string\"\u003E'light'\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-string\"\u003E'dark'\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-string\"\u003E'sepia'\u003C\u002Fspan\u003E]\n  }\n},\n\u003Cspan class=\"hljs-attr\"\u003Emethods\u003C\u002Fspan\u003E: {\n  getClasses (color) {\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Does not set classes on ssr when preference is system (because we don't know the preference until client-side)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-keyword\"\u003Eif\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.$colorMode.unknown) {\n      \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E {}\n    }\n    \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E {\n      \u003Cspan class=\"hljs-attr\"\u003Epreferred\u003C\u002Fspan\u003E: color === \u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.$colorMode.preference,\n      \u003Cspan class=\"hljs-attr\"\u003Eselected\u003C\u002Fspan\u003E: color === \u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.$colorMode.value\n    }\n  }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EWe can now add this class to our icon component. The class will call the getClasses method passing in the color we receive when we use the click event.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Ecomponents\u002FColorModePicker.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ecomponent\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:is\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"`icon-${color}`\"\u003C\u002Fspan\u003E @\u003Cspan class=\"hljs-attr\"\u003Eclick\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"$colorMode.preference = color\"\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:class\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"getClasses(color)\"\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EAnd you will see in the browser the colours are being applied just as we wanted. But it is not very clear when we click the system icon what is going on.\u003C\u002Fp\u003E\n\u003Ch3 id=\"adding-some-text-using-the-colorscheme-component\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#adding-some-text-using-the-colorscheme-component\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EAdding some text using the ColorScheme component\u003C\u002Fh3\u003E\u003Cp\u003ELet&#39;s add something that can help the user understand it.\u003C\u002Fp\u003E\n\u003Cp\u003EIf you are doing SSR (\u003Ccode\u003Enuxt start\u003C\u002Fcode\u003E or \u003Ccode\u003Enuxt generate\u003C\u002Fcode\u003E) and if \u003Ccode\u003E$colorMode.preference\u003C\u002Fcode\u003E is set to \u003Ccode\u003E&#39;system&#39;\u003C\u002Fcode\u003E, using \u003Ccode\u003E$colorMode\u003C\u002Fcode\u003E in your Vue template will lead to a flash. This is due to the fact that we cannot know the user preferences when pre-rendering the page since they are detected on client-side.\u003C\u002Fp\u003E\n\u003Cp\u003ETo avoid the flash, we have to guard any rendering path which depends on \u003Ccode\u003E$colorMode\u003C\u002Fcode\u003E with \u003Ccode\u003E$colorMode.unknown\u003C\u002Fcode\u003E to render a placeholder or use our \u003Ccode\u003E&lt;ColorScheme&gt;\u003C\u002Fcode\u003E component.\u003C\u002Fp\u003E\n\u003Cp\u003ELet&#39;s create a ColorScheme component under our \u003Ccode\u003E&lt;ul&gt;\u003C\u002Fcode\u003E with a placeholder and a tag of \u003Ccode\u003Espan\u003C\u002Fcode\u003E. Inside it we can add some text and display the \u003Ccode\u003E$colorMode.preference\u003C\u002Fcode\u003E which we receive from the color-mode module.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Ecomponents\u002FColorModePicker.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003EColorScheme\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eplaceholder\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"...\"\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Etag\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"span\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  Color mode: \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eb\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E{{ $colorMode.preference }}\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Eb\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003EColorScheme\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EYou will now see in the browser that if you change the icon the text will appear that corresponds to the icon clicked.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cvideo src=\"\u002Fblog\u002Fgoing-dark-with-nuxtjs-color-mode\u002Fcolor-mode-text-icons.mp4\" autoplay loop playsinline controls\u003E\u003C\u002Fvideo\u003E\u003C\u002Fp\u003E\n\u003Ch3 id=\"adding-a-text-when-system-is-chosen\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#adding-a-text-when-system-is-chosen\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EAdding a text when system is chosen\u003C\u002Fh3\u003E\u003Cp\u003EWe can improve this further by seeing when the preference is the system and adding another message that shows which value was detected.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Ecomponents\u002FColorModePicker.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003EColorScheme\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eplaceholder\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"...\"\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Etag\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"span\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  Color mode: \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eb\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E{{ $colorMode.preference }}\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Eb\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Espan\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ev-if\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"$colorMode.preference === 'system'\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ei\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E{{ $colorMode.value }}\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ei\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E mode detected)\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Espan\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003EColorScheme\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EIf you test it out in the browser you will see it&#39;s looking pretty good and we are almost there.\u003C\u002Fp\u003E\n\u003Ch3 id=\"tidying-up-our-styles\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#tidying-up-our-styles\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ETidying up our styles\u003C\u002Fh3\u003E\u003Cp\u003EWe now just have to tidy up a few styles. Let&#39;s get rid of the dots from the \u003Ccode\u003E&lt;ul&gt;\u003C\u002Fcode\u003E and add some spacing and some style to our \u003Ccode\u003E&lt;p&gt;\u003C\u002Fcode\u003E tag.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Ecomponents\u002FColorModePicker.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs css\"\u003E\u003Cspan class=\"hljs-selector-tag\"\u003Eul\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attribute\"\u003Elist-style\u003C\u002Fspan\u003E: none;\n  \u003Cspan class=\"hljs-attribute\"\u003Epadding\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E0\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003Emargin\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E0\u003C\u002Fspan\u003E;\n}\n\u003Cspan class=\"hljs-selector-tag\"\u003Eul\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-selector-tag\"\u003Eli\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attribute\"\u003Edisplay\u003C\u002Fspan\u003E: inline-block;\n  \u003Cspan class=\"hljs-attribute\"\u003Epadding\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E5px\u003C\u002Fspan\u003E;\n}\n\u003Cspan class=\"hljs-selector-tag\"\u003Ep\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attribute\"\u003Emargin\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E0\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003Epadding-top\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E5px\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003Epadding-bottom\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E20px\u003C\u002Fspan\u003E;\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EAnd in order to centre it we can wrap our ColorModePicker component in a div with the class of container.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Epages\u002Findex.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"container\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003EColorModePicker\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EAnd add the styles to the container class in our styles\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Epages\u002Findex.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Estyle\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Escoped\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"css\"\u003E\n\u003Cspan class=\"hljs-selector-class\"\u003E.container\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attribute\"\u003Etext-align\u003C\u002Fspan\u003E: center;\n  \u003Cspan class=\"hljs-attribute\"\u003Epadding\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E50px\u003C\u002Fspan\u003E;\n}\n\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Estyle\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"conclusion\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#conclusion\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EConclusion\u003C\u002Fh3\u003E\u003Cp\u003EAnd there you have your beautiful and fully working color-mode component. Feel free to have some more fun by changing the icons or adding more colors or modifying the color scheme. Have fun.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cvideo src=\"\u002Fblog\u002Fgoing-dark-with-nuxtjs-color-mode\u002Ffinal-working-version.mp4\" autoplay loop playsinline controls\u003E\u003C\u002Fvideo\u003E\u003C\u002Fp\u003E\n\u003Ch3 id=\"what-to-do-next\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#what-to-do-next\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EWhat to do next\u003C\u002Fh3\u003E\u003Cul\u003E\n\u003Cli\u003ETo learn more about using the color-mode with Tailwind check out \u003Ca href=\"https:\u002F\u002Fmedium.com\u002F@fayazara\u002Fquick-way-to-implement-darkmode-in-nuxt-js-tailwindcss-corona-virus-tracker-712d004a0846\"\u003Ethis article\u003C\u002Fa\u003E.\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#subscribe-to-newsletter\"\u003ESubscribe to the newsletter\u003C\u002Fa\u003E to not miss the upcoming articles and resources.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n",links:{previous:{title:b,slug:b},next:{title:c,slug:d}}},{path:"vi\u002Fblog\u002Fseed-round.md",slug:d,readtime:{text:"14 min read",minutes:13.215,time:792900,words:2643},title:c,description:"Three years ago, my brother Sébastien and I were open sourcing our code to build Vue.js application server side rendered easily. Today, we are incredibly excited to announce that NuxtJS has raised $2M in seed funding.",imgUrl:"blog\u002Fseed-round\u002Fmain.png",date:"2020-05-01T00:00:00.000Z",authors:[{name:"Alexandre Chopin",avatarUrl:"https:\u002F\u002Fpbs.twimg.com\u002Fprofile_images\u002F1255027239458091009\u002FqMp_q8vy_400x400.jpg",link:"https:\u002F\u002Ftwitter.com\u002FIamNuxt"}],tags:[a,"Company"],body:"\u003Cp\u003EThree years ago, my brother Sébastien and I were \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt\u002Fnuxt.js\"\u003Eopen sourcing our code\u003C\u002Fa\u003E to build Vue.js applications with server side rendering. Today, we are incredibly excited to announce that NuxtJS has raised $2M in seed funding led by \u003Ca href=\"https:\u002F\u002Fwww.firstminute.capital\u002F\"\u003Efirstminute capital\u003C\u002Fa\u003E with participation from \u003Ca href=\"https:\u002F\u002Fwww.kimaventures.com\"\u003EKima Ventures\u003C\u002Fa\u003E, \u003Ca href=\"https:\u002F\u002Fwww.linkedin.com\u002Fin\u002Feduardoronzano\u002F\"\u003EEduardo Ronzano\u003C\u002Fa\u003E (founder &amp; CEO, KelDoc), \u003Ca href=\"https:\u002F\u002Fwww.linkedin.com\u002Fin\u002Fthibaud-elziere-a787913\u002F\"\u003EThibaud Elzière\u003C\u002Fa\u003E (founder &amp; CEO, Fotolia), \u003Ca href=\"https:\u002F\u002Fwww.linkedin.com\u002Fin\u002Fsteegmann\u002F\"\u003ENicolas Steegmann\u003C\u002Fa\u003E (founder of Stupeflix), and \u003Ca href=\"https:\u002F\u002Fwww.linkedin.com\u002Fin\u002Frenaudvisage\u002F\"\u003ERenaud Visage\u003C\u002Fa\u003E (Co-founder &amp; CTO, Eventbrite). \u003C\u002Fp\u003E\n\u003Ch2 id=\"from-a-boilerplate-to-a-web-framework-\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#from-a-boilerplate-to-a-web-framework-\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EFrom a boilerplate to a web framework.\u003C\u002Fh2\u003E\u003Ch3 id=\"happy-quot-nuxtday-quot-\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#happy-quot-nuxtday-quot-\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EHappy &quot;NuxtDay&quot;\u003C\u002Fh3\u003E\u003Cp\u003ESébastien (\u003Ca href=\"https:\u002F\u002Ftwitter.com\u002FAtinux\"\u003E@Atinux\u003C\u002Fa\u003E) made his first commit for Nuxt.js on Github on October 26th 2016. The code base was born after we refactored an e-commerce website with modern open source web technologies: Vue 2, Node.js and Webpack. At the time, there was no documentation for server-side rendering Vue.js applications - we learnt through the \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fvuejs\u002Fvue-hackernews-2.0\"\u003EHacker News example\u003C\u002Fa\u003E published by \u003Ca href=\"https:\u002F\u002Ftwitter.com\u002Fyouyuxi\"\u003EEvan You\u003C\u002Fa\u003E (Creator of Vue.js). The idea of creating a boilerplate and reusing the code base for other projects became clear once we discovered \u003Ca href=\"https:\u002F\u002Ftwitter.com\u002Frauchg\"\u003EGuillermo Rauch\u003C\u002Fa\u003E’s \u003Ca href=\"https:\u002F\u002Fvercel.com\u002Fblog\u002Fnext\"\u003Eintroduction of Next.js\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\n\u003Ch3 id=\"why-the-nuxt-name-\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#why-the-nuxt-name-\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EWhy the NUXT name?\u003C\u002Fh3\u003E\u003Cp\u003EOnce we had created the repository on Github to open source our code, we had our first challenge: find a name for our project! We tried couples of names on NPM who were already taken. In the end we landed on NUXT which was short and explicit. rEact ⇒ nExt made us realise that vUe ⇒ nUxt was a natural fit for us. It is like Next.js but for Vue.js.\u003C\u002Fp\u003E\n\u003Ch3 id=\"performance-modularity-and-developers-happiness\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#performance-modularity-and-developers-happiness\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EPerformance, Modularity and Developers Happiness\u003C\u002Fh3\u003E\u003Cp\u003EThe core mission at NuxtJS is to provide front-end developers with an open source framework to build fast and high performing websites and applications based on Vue.js with as little friction as possible. Our credo is “Convention over Configuration” to help solve some of the difficulties involved in Vue.js application development. Automatic vue-router configuration based on file system detection is the first and most popular feature of the framework. With the efforts of our community and contributors around the world, over time our framework became ready for production. Every feature and bug fix since has been made with the sole purpose of improving the performance and experience for all our users. Our ultimate vision is to be a modular solution and extend the possibilities of the framework usage. These are endless! \u003C\u002Fp\u003E\n\u003Ch2 id=\"from-a-passion-to-a-company-\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#from-a-passion-to-a-company-\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EFrom a passion to a company.\u003C\u002Fh2\u003E\u003Ch3 id=\"the-pyrenees-mountains\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#the-pyrenees-mountains\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EThe Pyrenees Mountains\u003C\u002Fh3\u003E\u003Cp\u003ESébastien and I discovered our passion for computers and web development deep within the Pyrenees Mountains (our heritage reflected in the NuxtJS logo if you haven’t noticed!). We taught ourselves how to code as kids and designed websites at night, weekends and during school holidays. We worked on our first external project together, creating a browser game website built with PHP, HTML, CSS and jQuery - this fortunately covered part of our college studies! We both had the entrepreneurial bug at this point. \u003C\u002Fp\u003E\n\u003Ch3 id=\"the-nuxtjs-company\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#the-nuxtjs-company\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EThe NuxtJS Company\u003C\u002Fh3\u003E\u003Cp\u003EBefore NuxtJS we were originally called ORION, which was established in 2017. At the time we wanted to create a number of different open source projects (ORION is a constellation of stars) and sell our services on the side whilst we had full-time jobs. However, we didn’t realise that what would ultimately become the Nuxt.js framework was going to take off so quickly and be so well-received by the developers community. After receiving amazing feedback at conferences, meet-ups and workshops we decided to go full-time on the Nuxt.js framework in January 2018. A year later we decided to rename our company NuxtJS to focus our efforts on the framework.\u003C\u002Fp\u003E\n\u003Ch3 id=\"open-source-is-everywhere\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#open-source-is-everywhere\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EOpen source is everywhere\u003C\u002Fh3\u003E\u003Cp\u003EAs developers ourselves, we believe in the importance and power of open source. Innovation in technology belongs to open source authors that have changed the path of companies - indeed many of our careers have depended on them - Languages, Operating Systems, Frameworks and many more. Like most other open source projects, we never had the expectation of making it a commercial product. However, after two years working full-time for NuxtJS, we were struggling to generate sustainable and scalable revenues whilst developing the framework at the same time. Our time was taken up by consulting and workshops to keep the lights on! This was difficult for us given the usage by large corporates such as Adobe, Ubisoft, Voodoo, Nespresso, Ozon, Rakuten and many others. We therefore believed the moment arrived to receive funding from partners with experience in open source projects and scaling teams and products. \u003C\u002Fp\u003E\n\u003Ch3 id=\"the-nuxtjs-company-the-nuxt-js-framework\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#the-nuxtjs-company-the-nuxt-js-framework\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EThe NuxtJS Company !== The Nuxt.js Framework\u003C\u002Fh3\u003E\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Ftwitter.com\u002Fdomangerer\"\u003EDominik Angerer\u003C\u002Fa\u003E (Co-founder &amp; CEO of \u003Ca href=\"https:\u002F\u002Fwww.storyblok.com\"\u003EStoryblok\u003C\u002Fa\u003E and our sponsor since July 2018) introduced us with Sam Endacott and Arek Wylegalski from firstminute capital in October 2019. They understood our concerns around developing the commercial side of the business whilst staying true to the community which has helped build Nuxt.js into what it is today. We took our time with the fundraising process and made sure to evaluate the pros and cons before making the decision. After spending many weeks with the team (+ a few dinners and drinks) we decided to close a $2m seed round for the NuxtJS company. \u003Cstrong\u003EThe Nuxt.js framework is and will always be open source and community-driven.\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Ch2 id=\"from-an-idea-to-a-website\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#from-an-idea-to-a-website\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EFrom an idea to a website\u003C\u002Fh2\u003E\u003Ch3 id=\"the-intuitive-web-framework\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#the-intuitive-web-framework\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EThe intuitive Web Framework\u003C\u002Fh3\u003E\u003Cp\u003EWe love to create websites with Vue, but we are too lazy to configure everything over and over. Nuxt.js provides a simple and intuitive developper experience to prototype blazing fast modern web application. The goal is to decrease the number of decisions the programmer has to make and eliminate the complexity of having to configure all and each of the areas of application development. The immediate result is that you can create many more things in less time. Building a production ready website from an idea has never been so simple. \nIf you follow the established conventions, you can develop a Nuxt.js application in much less time and with many fewer lines of code than you would need developing a similar web application in Vue.js. If, on the other hand, you want to ignore conventions, you can always replace them with your own code. However, since conventions are not arbitrary, but have been established by a community of high level programmers, it rarely does make sense to waste time overwriting them.\u003C\u002Fp\u003E\n\u003Ch3 id=\"modularity\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#modularity\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EModularity\u003C\u002Fh3\u003E\u003Cp\u003EBy keeping the core light and extensible with hooks, we opened a new range of possibilities: Nuxt Modules.\nYou can use \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt-community\u002Fanalytics-module\"\u003Eanalytics\u003C\u002Fa\u003E, \u003Ca href=\"https:\u002F\u002Fauth.nuxtjs.org\"\u003Eauthentication\u003C\u002Fa\u003E, send \u003Ca href=\"https:\u002F\u002Fhttp.nuxtjs.org\u002F\"\u003EHTTP requests\u003C\u002Fa\u003E, use your favourite \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt-community\u002Ftailwindcss-module\"\u003EUI framework\u003C\u002Fa\u003E, support \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt-community\u002Fcolor-mode-module\"\u003Edark mode\u003C\u002Fa\u003E, \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Faceforth\u002Fnuxt-optimized-images\"\u003Eoptimizes your images\u003C\u002Fa\u003E, make a \u003Ca href=\"https:\u002F\u002Fpwa.nuxtjs.org\"\u003EPWA\u003C\u002Fa\u003E and \u003Ca href=\"https:\u002F\u002Fawesomejs.dev\u002Ffor\u002Fnuxt\u002F\"\u003Emuch more\u003C\u002Fa\u003E with only one line in your config file.\u003C\u002Fp\u003E\n\u003Ch3 id=\"performances\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#performances\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EPerformances\u003C\u002Fh3\u003E\u003Cp\u003EPerformances has a huge impact on how visitors see and interact with your website. Since the beginning, performances has been in the heart of the Nuxt.js framework, allowing you to ship efficient and performant web application \u003Cstrong\u003Eby default\u003C\u002Fstrong\u003E. We provide more than \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt\u002Fnuxt.js\u002Fissues\u002F6467\"\u003E20 optimizations\u003C\u002Fa\u003E and have more in our roadmap: reducing the baseline bundle costs of the minimal app (coming with Nuxt 3 and Vue 3), image bloat reduction (lazy-loading and automatic optimisation) and smarter server-side rendering using SWR (stale-while-revalidate).\u003C\u002Fp\u003E\n\u003Ch2 id=\"nuxtify-the-world\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#nuxtify-the-world\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ENuxtify the world\u003C\u002Fh2\u003E\u003Ch3 id=\"discovery\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#discovery\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EDiscovery\u003C\u002Fh3\u003E\u003Cp\u003EConcepts and new features can sometimes be more difficult to explain, instead of using them. Feedback subjects since the last 3 years has been mostly about our lack of explanation and marketing. That&#39;s true. It&#39;s difficult to explain a framework that can do static site generation (SSG) or dynamic rendering (SSR) as well as optional server-side rendering with convention over configuration in \u003Cstrong\u003Ea simple sentence\u003C\u002Fstrong\u003E. Good news, we are working on a brand new website full of Nuxt.js informations and features explanations. \u003C\u002Fp\u003E\n\u003Ch3 id=\"academy\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#academy\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EAcademy\u003C\u002Fh3\u003E\u003Cp\u003EThe Nuxt.js documentation is key. Our main efforts are toward on new learning resources, including a richer documentation and educational materials (tutorials, videos courses and sandboxes). Additionally, we are developing official workshops and certification programs for developers with partners teachers\u002Fcompanies around the world.\u003C\u002Fp\u003E\n\u003Ch3 id=\"community\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#community\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ECommunity\u003C\u002Fh3\u003E\u003Cp\u003ECommunity based materials and events (meetups, conferences and live streams) will be displayed on the new website. We plan to organise online events in the future.\nYou can always chat with the community on our \u003Ca href=\"https:\u002F\u002Fdiscord.nuxtjs.org\"\u003EDiscord server\u003C\u002Fa\u003E, follow the Nuxt.js feed on our \u003Ca href=\"https:\u002F\u002Ftwitter.com\u002Fnuxt_js\"\u003ETwitter account\u003C\u002Fa\u003E and contribute on our \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt\u002Fnuxt.js\"\u003EGitHub repository\u003C\u002Fa\u003E.\nOur \u003Ca href=\"https:\u002F\u002Fopencollective.com\u002Fnuxtjs\"\u003EOpen Collective\u003C\u002Fa\u003E is used for the open source work done by maintainers, contributors and developer advocates that help Nuxtify the world.\u003C\u002Fp\u003E\n\u003Ch2 id=\"thank-you-\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#thank-you-\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EThank you!\u003C\u002Fh2\u003E\u003Cp\u003EWe deeply want to thanks all the contributors to the (\u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt\u002Fnuxt.js\u002Fgraphs\u002Fcontributors\"\u003Ecore\u003C\u002Fa\u003E, \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt\u002Fdocs\u002Fgraphs\u002Fcontributors\"\u003Edocumentation\u003C\u002Fa\u003E, \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt-community\"\u003Emodules\u003C\u002Fa\u003E and \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Ftopics\u002Fnuxt\"\u003Emore\u003C\u002Fa\u003E) that improve Nuxt.js everyday.\nAlso our users and \u003Ca href=\"https:\u002F\u002Ftwitter.com\u002Fnuxt_js\"\u003Efollowers\u003C\u002Fa\u003E, helping us gather more feedback and improve the vision of the framework.\u003C\u002Fp\u003E\n\u003Cp\u003EWe have been working a lot recently and exciting announcements are coming soon!\u003C\u002Fp\u003E\n",links:{previous:{title:m,slug:l},next:{title:e,slug:f}}},{path:"vi\u002Fblog\u002Fbuild-dev-to-clone-with-nuxt-new-fetch.md",slug:f,readtime:{text:"22 min read",minutes:21.1,time:1266000,words:4220},title:e,description:"Let’s build a blazing fast articles and tutorials app using Nuxt, Dev.to API, with lazy loading, placeholders, caching and trendy neumorphic design UI.",imgUrl:"blog\u002Fbuild-dev-to-clone-with-nuxt-new-fetch\u002Fmain.png",date:"2020-04-08T00:00:00.000Z",authors:[{name:"Sergey Bedritsky",avatarUrl:"https:\u002F\u002Fpbs.twimg.com\u002Fprofile_images\u002F1244291720566669315\u002FpGg6Xn-M_400x400.jpg",link:"https:\u002F\u002Ftwitter.com\u002Fsergeybedritsky"},{name:"Sebastien Chopin",avatarUrl:g,link:"https:\u002F\u002Ftwitter.com\u002FAtinux"}],tags:[a,n,o,p],body:"\u003Cp\u003E\u003Cem\u003ELet’s build a blazing fast articles and tutorials app using Nuxt, Dev.to API, with lazy loading, placeholders, caching and trendy neumorphic design UI.\u003C\u002Fem\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cvideo src=\"\u002Fblog\u002Fbuild-dev-to-clone-with-nuxt-new-fetch\u002Fdev-clone-nuxt.mp4\" autoplay loop playsinline controls\u003E\u003C\u002Fvideo\u003E\u003C\u002Fp\u003E\n\u003Cp align=\"center\"\u003E\n  \u003Ca href=\"https:\u002F\u002Fdev-clone.nuxtjs.app\" target=\"_blank\" rel=\"noopener nofollow\"\u003EView demo\u003C\u002Fa\u003E \u002F \n  \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fbdrtsky\u002Fnuxt-dev-to-clone\" target=\"_blank\" rel=\"noopener nofollow\"\u003ESource\u003C\u002Fa\u003E\n\u003C\u002Fp\u003E\n\n\u003Cp\u003EThis article is intended to demonstrate use cases and awesomeness of new NuxtJS \u003Ccode\u003Efetch\u003C\u002Fcode\u003E functionality  \u003Ca href=\"https:\u002F\u002Fnuxtjs.org\u002Fapi\u002Fpages-fetch#nuxt-gt-2-12\"\u003Eintroduced in release v2.12\u003C\u002Fa\u003E, and show you how to apply its power in your own projects. For in-depth technical analysis and details of the new \u003Ccode\u003Efetch\u003C\u002Fcode\u003E you can check \u003Ca href=\"https:\u002F\u002Fnuxtjs.org\u002Fblog\u002Funderstanding-how-fetch-works-in-nuxt-2-12\"\u003EKrutie Patel’s article\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\n\u003Cp\u003EHere’s the high-level outline of how we will build our dev.to clone using \u003Ccode\u003Efetch\u003C\u002Fcode\u003E hook. We will:\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003Euse \u003Ccode\u003E$fetchState\u003C\u002Fcode\u003E for showing nice placeholders while data is fetching on the client side\u003C\u002Fli\u003E\n\u003Cli\u003Euse \u003Ccode\u003Ekeep-alive\u003C\u002Fcode\u003E and \u003Ccode\u003Eactivated\u003C\u002Fcode\u003E hook to efficiently cache API requests on pages that have already been visited\u003C\u002Fli\u003E\n\u003Cli\u003Ereuse the \u003Ccode\u003Efetch\u003C\u002Fcode\u003E hook with \u003Ccode\u003Ethis.$fetch()\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003Cli\u003Eset \u003Ccode\u003EfetchOnServer\u003C\u002Fcode\u003E value to control when we need to render our data on the server side or not\u003C\u002Fli\u003E\n\u003Cli\u003Efind a way to handle errors from \u003Ccode\u003Efetch\u003C\u002Fcode\u003E hook.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Ch2 id=\"table-of-contents\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#table-of-contents\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ETable of Contents\u003C\u002Fh2\u003E\u003Col\u003E\n\u003Cli\u003E\u003Ca href=\"#dev-to-api\"\u003EDEV.TO API\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#setting-up-the-project\"\u003ESetting up the Project\u003C\u002Fa\u003E\u003Col\u003E\n\u003Cli\u003E\u003Ca href=\"#css-styles\"\u003ECSS Styles\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#ui-design\"\u003EUI Design\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#svg-icons\"\u003ESVG icons\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#dependencies\"\u003EDependencies\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#developing-the-application\"\u003EDeveloping the Application\u003C\u002Fa\u003E\u003Col\u003E\n\u003Cli\u003E\u003Ca href=\"#url-structure\"\u003EURL structure\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#caching-requests-with-code-keep-alive-code-and-code-activated-code-hook\"\u003ECaching requests with \u003Ccode\u003Ekeep-alive\u003C\u002Fcode\u003E and \u003Ccode\u003Eactivated\u003C\u002Fcode\u003E hook\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#using-code-fetch-code-in-page-components\"\u003EUsing \u003Ccode\u003Efetch\u003C\u002Fcode\u003E in page components\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#reuse-code-fetch-code-with-code-this-fetch-code-\"\u003EReuse \u003Ccode\u003Efetch\u003C\u002Fcode\u003E with \u003Ccode\u003Ethis.$fetch()\u003C\u002Fcode\u003E\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#applying-placeholders-with-code-fetchstate-code-\"\u003EApplying placeholders with \u003Ccode\u003E$fetchState\u003C\u002Fcode\u003E\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#using-code-fetch-code-in-any-other-component-\"\u003EUsing \u003Ccode\u003Efetch\u003C\u002Fcode\u003E in any other component  🔥\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#error-handling\"\u003EError handling\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#conclusion\"\u003EConclusion\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Ch2 id=\"dev-to-api\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#dev-to-api\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EDEV.TO API\u003C\u002Fh2\u003E\u003Cp\u003EIn September 2019 DEV.TO  \u003Ca href=\"https:\u002F\u002Ftwitter.com\u002Fbendhalpern\u002Fstatus\u002F1176663688742395904\"\u003Eopened\u003C\u002Fa\u003E  their public API that we can now use to access articles, users and other resources data. \u003Cem\u003EPlease note that it’s still Beta, so it could change in future or some things might not work as expected.\u003C\u002Fem\u003E\u003C\u002Fp\u003E\n\u003Cp\u003EFor creating our DEV.TO clone we are interested in such API endpoints:\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fdocs.dev.to\u002Fapi\u002F#operation\u002FgetArticles\"\u003EgetArticles\u003C\u002Fa\u003E: to access a list of articles, filtered by the \u003Ccode\u003Etag\u003C\u002Fcode\u003E, \u003Ccode\u003Estate\u003C\u002Fcode\u003E, \u003Ccode\u003Etop\u003C\u002Fcode\u003E, \u003Ccode\u003Eusername\u003C\u002Fcode\u003E and paginated with \u003Ccode\u003Epage\u003C\u002Fcode\u003E parameters\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fdocs.dev.to\u002Fapi\u002F#operation\u002FgetArticleById\"\u003EgetArticleById\u003C\u002Fa\u003E: to access an article content\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fdocs.dev.to\u002Fapi\u002F#operation\u002FgetUser\"\u003EgetUser\u003C\u002Fa\u003E: to access user data \u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fdocs.dev.to\u002Fapi\u002F#operation\u002FgetCommentsByArticleId\"\u003EgetCommentsByArticleId\u003C\u002Fa\u003E: to fetch comments related to the article\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003ETo keep it simple, for communication with DEV.TO API we will use native Javascript  \u003Ca href=\"https:\u002F\u002Fdeveloper.mozilla.org\u002Fen-US\u002Fdocs\u002FWeb\u002FAPI\u002FFetch_API\"\u003EFetch API\u003C\u002Fa\u003E .\u003C\u002Fp\u003E\n\u003Ch2 id=\"setting-up-the-project\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#setting-up-the-project\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ESetting up the Project\u003C\u002Fh2\u003E\u003Cp\u003EIf you are an experienced developer you can skip this part and \u003Ca href=\"#developing-the-application\"\u003Eget straight to the point\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\n\u003Cp\u003EMake sure you have Node and npm installed. We will use \u003Ccode\u003Ecreate-nuxt-app\u003C\u002Fcode\u003E to  \u003Ca href=\"\u002Fguide\u002Finstallation#using-code-create-nuxt-app-code-\"\u003Einitialize\u003C\u002Fa\u003E  the project, so just type the following command in terminal:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs \"\u003Enpx create-nuxt-app nuxt-dev-to-clone\n# leave the default answers for each question\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003ENow \u003Ccode\u003Ecd nuxt-dev-to-clone\u002F\u003C\u002Fcode\u003E and run \u003Ccode\u003Enpm run dev\u003C\u002Fcode\u003E. Congrats, your Nuxt app is running on \u003Ca href=\"http:\u002F\u002Flocalhost:3000\u002F\"\u003Ehttp:\u002F\u002Flocalhost:3000\u003C\u002Fa\u003E!\u003C\u002Fp\u003E\n\u003Cp\u003ELet’s install necessary packages and discuss how we will build our app next.\u003C\u002Fp\u003E\n\u003Ch3 id=\"css-styles\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#css-styles\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ECSS Styles\u003C\u002Fh3\u003E\u003Cp\u003EFor styling we will use the most common CSS preprocessor Sass\u002FSCSS and leverage Vue.js \u003Ca href=\"https:\u002F\u002Fvue-loader.vuejs.org\u002Fguide\u002Fscoped-css.html\"\u003EScoped CSS\u003C\u002Fa\u003E feature, to keep our components styles incapsulated. To \u003Ca href=\"\u002Ffaq\u002Fpre-processors\"\u003Euse Sass\u002FSCSS with Nuxt\u003C\u002Fa\u003E run:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs \"\u003Enpm i -D sass sass-loader\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EWe also will use \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt-community\u002Fstyle-resources-module\"\u003E@nuxtjs\u002Fstyle-resources\u003C\u002Fa\u003E module that will help us to use our design tokens defined in SCSS variables in any Vue file without the necessity of using \u003Ccode\u003E@import\u003C\u002Fcode\u003E statements in each file.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs \"\u003Enpm i -D @nuxtjs\u002Fstyle-resources\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003ENow tell Nuxt to use it by adding this code to \u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003EbuildModules: [\n  \u003Cspan class=\"hljs-string\"\u003E'@nuxtjs\u002Fstyle-resources'\u003C\u002Fspan\u003E\n]\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003ERead more about this module \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt-community\u002Fstyle-resources-module#scss-example\"\u003Ehere\u003C\u002Fa\u003E, regarding \u003Ccode\u003EbuildModules\u003C\u002Fcode\u003E, you can learn more on it in the \u003Ca href=\"\u002Fapi\u002Fconfiguration-modules#-code-buildmodules-code-\"\u003Emodules vs buildModules\u003C\u002Fa\u003E section of the documentation.\u003C\u002Fp\u003E\n\u003Cp\u003ELet’s define our design tokens as SCSS variables, put them in \u003Ccode\u003E~\u002Fassets\u002Fstyles\u002Ftokens.scss\u003C\u002Fcode\u003E and tell \u003Ccode\u003E@nuxtjs\u002Fstyle-resources\u003C\u002Fcode\u003E to load them by adding to \u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003EstyleResources: {\n  \u003Cspan class=\"hljs-attr\"\u003Escss\u003C\u002Fspan\u003E: [\u003Cspan class=\"hljs-string\"\u003E'~\u002Fassets\u002Fstyles\u002Ftokens.scss'\u003C\u002Fspan\u003E]\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EOur design tokens are now available through SCSS variables in every Vue component.\u003C\u002Fp\u003E\n\u003Ch3 id=\"ui-design\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#ui-design\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EUI Design\u003C\u002Fh3\u003E\u003Cp\u003EIt will be kinda boring just to copy existing DEV.TO design and layout, so why don’t we experiment a little bit. You have probably already heard of the new UI trend — neumorphism. If you missed it somehow, read more about it \u003Ca href=\"https:\u002F\u002Fuxdesign.cc\u002Fneumorphism-in-user-interfaces-b47cef3bf3a6\"\u003Ehere\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\n\u003Cp\u003EWe can find a lot of \u003Ca href=\"https:\u002F\u002Fdribbble.com\u002Ftags\u002Fneumorphism\"\u003Edribbble shots\u003C\u002Fa\u003E (from where this trend came from), but still only a few examples of real-world web apps built with neumorphism style interface, so we just can’t miss the chance to recreate it with CSS and Vue.js. It’s simple, clean and fresh.\u003C\u002Fp\u003E\n\u003Cp\u003EI am not going to describe the styling aspect of this application in detail, but if you are interested, you can check this awesome article from  \u003Ca href=\"https:\u002F\u002Fcss-tricks.com\u002Fneumorphism-and-css\u002F\"\u003ECSS Tricks\u003C\u002Fa\u003E about neumorphism and CSS.\u003C\u002Fp\u003E\n\u003Ch3 id=\"svg-icons\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#svg-icons\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ESVG icons\u003C\u002Fh3\u003E\u003Cp\u003EFor SVG icons lets use \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt-community\u002Fsvg-module\"\u003E@nuxt\u002Fsvg\u003C\u002Fa\u003E. This module allows us to import \u003Ccode\u003E.svg\u003C\u002Fcode\u003E files as inline SVG, while keeping SVG sources in single place and not polluting Vue template markup with loads of SVG code.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs \"\u003Enpm i -D @nuxtjs\u002Fsvg\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003EbuildModules: [\n  \u003Cspan class=\"hljs-string\"\u003E'@nuxtjs\u002Fsvg'\u003C\u002Fspan\u003E,\n  \u003Cspan class=\"hljs-string\"\u003E'@nuxtjs\u002Fstyle-resources'\u003C\u002Fspan\u003E\n]\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"dependencies\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#dependencies\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EDependencies\u003C\u002Fh3\u003E\u003Cp\u003ETo keep front-end app fast and simple we will use only two dependencies, both from Vue.js core members:\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fgithub.com\u002FAkryum\u002Fvue-observe-visibility\"\u003Evue-observe-visibility\u003C\u002Fa\u003E by \u003Ca href=\"https:\u002F\u002Ftwitter.com\u002FAkryum\"\u003EGuillaume Chau\u003C\u002Fa\u003E, for effective detecting elements in viewport with IntersectionObserver and trigger lazy loading. Only 1.6kB gzipped\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fmichalsnik\u002Fvue-content-placeholders\"\u003Evue-content-placeholders\u003C\u002Fa\u003E by \u003Ca href=\"https:\u002F\u002Ftwitter.com\u002Fmichalsnik\"\u003EMichał Sajnóg\u003C\u002Fa\u003E, for showing nicely animated placeholders for UI elements while content is fetching. Only 650B gzipped.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003ELet’s add them as Nuxt \u003Ca href=\"https:\u002F\u002Fnuxtjs.org\u002Fapi\u002Fconfiguration-plugins#__layout\"\u003Eplugins\u003C\u002Fa\u003E, by creating two files.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Evue-observe-visibility.client.js\u003C\u002Fcode\u003E:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E Vue \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E'vue'\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E VueObserveVisibility \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E'vue-observe-visibility'\u003C\u002Fspan\u003E\n\nVue.use(VueObserveVisibility)\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003Ccode\u003Evue-placeholders.js\u003C\u002Fcode\u003E:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E Vue \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E'vue'\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E VueContentPlaceholders \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E'vue-content-placeholders'\u003C\u002Fspan\u003E\n\nVue.use(VueContentPlaceholders)\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EAnd add them to \u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003Eplugins: [\n  \u003Cspan class=\"hljs-string\"\u003E'~\u002Fplugins\u002Fvue-placeholders.js'\u003C\u002Fspan\u003E,\n  \u003Cspan class=\"hljs-string\"\u003E'~\u002Fplugins\u002Fvue-observe-visibility.client.js'\u003C\u002Fspan\u003E\n]\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch2 id=\"developing-the-application\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#developing-the-application\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EDeveloping the Application\u003C\u002Fh2\u003E\u003Cp\u003ENow we finally can start developing our DEV.TO clone powered by Nuxt and \u003Ca href=\"\u002Fapi\u002Fpages-fetch\"\u003Enew fetch\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\n\u003Ch3 id=\"url-structure\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#url-structure\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EURL structure\u003C\u002Fh3\u003E\u003Cp\u003ELet’s imitate DEV.TO URL structure for our simple app. Our \u003Ca href=\"https:\u002F\u002Fnuxtjs.org\u002Fguide\u002Fviews#pages\"\u003Epages\u003C\u002Fa\u003E folder should look like this:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs \"\u003E├── index.vue\n├── t\n│   └── _tag.vue\n├── top.vue\n└── _username\n    ├── _article.vue\n    └── index.vue\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EWe will have 2 \u003Ca href=\"https:\u002F\u002Fnuxtjs.org\u002Fguide\u002Frouting#basic-routes\"\u003Estatic pages\u003C\u002Fa\u003E:\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E\u003Ccode\u003Eindex.vue\u003C\u002Fcode\u003E: latest articles about Nuxt.js will be listed\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003Etop.vue\u003C\u002Fcode\u003E: most popular articles for last year period.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003EFor the rest of the app URL’s we will use convenient Nuxt file based \u003Ca href=\"https:\u002F\u002Fnuxtjs.org\u002Fguide\u002Frouting#dynamic-routes\"\u003Edynamic routes\u003C\u002Fa\u003E feature to scaffold necessary pages by creating such file structure:\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E\u003Ccode\u003E_username\u002Findex.vue\u003C\u002Fcode\u003E - user profile page with list of his published articles\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003E_username\u002F_article.vue\u003C\u002Fcode\u003E - this is where article, author profile and comments will be rendered\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003Et\u002F_tag.vue\u003C\u002Fcode\u003E - list of best articles by any tag that exist on DEV.TO\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003EThat’s all. Pretty simple, right?\u003C\u002Fp\u003E\n\u003Ch3 id=\"caching-requests-with-code-keep-alive-code-and-code-activated-code-hook\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#caching-requests-with-code-keep-alive-code-and-code-activated-code-hook\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ECaching requests with \u003Ccode\u003Ekeep-alive\u003C\u002Fcode\u003E and \u003Ccode\u003Eactivated\u003C\u002Fcode\u003E hook\u003C\u002Fh3\u003E\u003Cp\u003EOne of the coolest practical features of the new \u003Ccode\u003Efetch\u003C\u002Fcode\u003E is its ability to work with \u003Ccode\u003Ekeep-alive\u003C\u002Fcode\u003E directive to save \u003Ccode\u003Efetch\u003C\u002Fcode\u003E calls on pages you have already visited. Let’s apply this feature in \u003Ccode\u003Elayouts\u002Fdefault.vue\u003C\u002Fcode\u003E layout like this.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Enuxt\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ekeep-alive\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EWith this directive \u003Ccode\u003Efetch\u003C\u002Fcode\u003E will trigger only on the first page visit, after that Nuxt will save rendered components in memory, and on every subsequent visit it will be just reused from the cache. Could it be simpler than that?\u003C\u002Fp\u003E\n\u003Cp\u003EMoreover, Nuxt gives us fine grained control over \u003Ccode\u003Ekeep-alive\u003C\u002Fcode\u003E with the \u003Ccode\u003Ekeep-alive-props\u003C\u002Fcode\u003E property where you can set the number of components which you want to cache, and \u003Ccode\u003Eactivated\u003C\u002Fcode\u003E hook, where you can control TTL (time to live) of the cache. We will use the latest one in our app in the next sections.\u003C\u002Fp\u003E\n\u003Ch3 id=\"using-code-fetch-code-in-page-components\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#using-code-fetch-code-in-page-components\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EUsing \u003Ccode\u003Efetch\u003C\u002Fcode\u003E in page components\u003C\u002Fh3\u003E\u003Cp\u003ELet’s dive into the \u003Ccode\u003Efetch\u003C\u002Fcode\u003E feature itself. \u003C\u002Fp\u003E\n\u003Cp\u003ECurrently as you can see from the \u003Ca href=\"https:\u002F\u002Fdev-clone.nuxtjs.app\u002F\"\u003Efinal result\u003C\u002Fa\u003E we have 3 page components that basically reuse the same code — it’s the \u003Ccode\u003Eindex.vue\u003C\u002Fcode\u003E, \u003Ccode\u003Etop.vue\u003C\u002Fcode\u003E and \u003Ccode\u003Et\u002F_tag.vue\u003C\u002Fcode\u003E page components. They simply render a list of article preview cards.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Eindex.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"page-wrapper\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"article-cards-wrapper\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Earticle-card-block\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-attr\"\u003Ev-for\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"(article, i) in articles\"\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-attr\"\u003E:key\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"article.id\"\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-attr\"\u003E:article\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"article\"\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"article-card-block\"\u003C\u002Fspan\u003E\n        \u002F&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"javascript\"\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E ArticleCardBlock \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E'@\u002Fcomponents\u002Fblocks\u002FArticleCardBlock'\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003Ecomponents\u003C\u002Fspan\u003E: {\n    ArticleCardBlock\n  },\n  data() {\n    \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E {\n      \u003Cspan class=\"hljs-attr\"\u003EcurrentPage\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E1\u003C\u002Fspan\u003E,\n      \u003Cspan class=\"hljs-attr\"\u003Earticles\u003C\u002Fspan\u003E: []\n    }\n  },\n  \u003Cspan class=\"hljs-keyword\"\u003Easync\u003C\u002Fspan\u003E fetch() {\n    \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E articles = \u003Cspan class=\"hljs-keyword\"\u003Eawait\u003C\u002Fspan\u003E fetch(\u003Cspan class=\"hljs-string\"\u003E`https:\u002F\u002Fdev.to\u002Fapi\u002Farticles?tag=nuxt&amp;state=rising&amp;page=\u003Cspan class=\"hljs-subst\"\u003E${\u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.currentPage}\u003C\u002Fspan\u003E`\u003C\u002Fspan\u003E).then(\u003Cspan class=\"hljs-function\"\u003E(\u003Cspan class=\"hljs-params\"\u003Eres\u003C\u002Fspan\u003E) =&gt;\u003C\u002Fspan\u003E res.json())\n\n    \u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.articles = \u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.articles.concat(articles)\n  }\n}\n\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EPay attention to this code block:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Easync\u003C\u002Fspan\u003E fetch() {\n  \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E articles = \u003Cspan class=\"hljs-keyword\"\u003Eawait\u003C\u002Fspan\u003E fetch(\u003Cspan class=\"hljs-string\"\u003E`https:\u002F\u002Fdev.to\u002Fapi\u002Farticles?tag=nuxt&amp;state=rising&amp;page=\u003Cspan class=\"hljs-subst\"\u003E${\u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.currentPage}\u003C\u002Fspan\u003E`\u003C\u002Fspan\u003E).then(\u003Cspan class=\"hljs-function\"\u003E(\u003Cspan class=\"hljs-params\"\u003Eres\u003C\u002Fspan\u003E) =&gt;\u003C\u002Fspan\u003E res.json())\n\n  \u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.articles = \u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.articles.concat(articles)\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EHere we are making a request to DEV.TO \u003Ccode\u003E\u002Farticles\u003C\u002Fcode\u003E endpoint, with query parameters that API understands. Don’t confuse \u003Ccode\u003Efetch\u003C\u002Fcode\u003E hook with the Javascript \u003Ca href=\"https:\u002F\u002Fdeveloper.mozilla.org\u002Fen-US\u002Fdocs\u002FWeb\u002FAPI\u002FFetch_API\"\u003Efetch\u003C\u002Fa\u003E interface which simply helps us to send a request to DEV.TO API, and then parse the response with \u003Ccode\u003Eres.json()\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\n\u003Cp\u003EAlso notice that the new \u003Ccode\u003Efetch\u003C\u002Fcode\u003E hook doesn’t serve just to dispatch Vuex store action or committing mutation to set state, now it has access to \u003Ccode\u003Ethis\u003C\u002Fcode\u003E context, and is able to mutate component’s data directly. This is a very important new feature, and you can \u003Ca href=\"\u002Fblog\u002Funderstanding-how-fetch-works-in-nuxt-2-12\"\u003Eread more\u003C\u002Fa\u003E about it in the previous article about \u003Ccode\u003Efetch\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\n\u003Cp\u003ENow let’s markup the \u003Ccode\u003E&lt;article-card-block&gt;\u003C\u002Fcode\u003E component which receives \u003Ccode\u003Earticle\u003C\u002Fcode\u003E prop and renders its data nicely.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003EArticleCardBlock.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Enuxt-link\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:to\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"{ name: 'username-article', params: { username: article.user.username, article: article.id } }\"\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Etag\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"article\"\u003C\u002Fspan\u003E &gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"image-wrapper\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eimg\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ev-if\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"article.cover_image\"\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:src\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"article.cover_image\"\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:alt\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"article.title\"\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eimg\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ev-else\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:src\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"article.social_image\"\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:alt\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"article.title\"\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"content\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Enuxt-link\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:to\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"{name: 'username-article', params: { username: article.user.username, article: article.id } }\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eh1\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E{{ article.title }}\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Eh1\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Enuxt-link\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"tags\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Enuxt-link\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ev-for\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"tag in article.tag_list\"\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:key\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"tag\"\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:to\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"{ name: 't-tag', params: { tag } }\"\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"tag\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n          #{{ tag }}\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Enuxt-link\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"meta\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"scl\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Espan\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n            \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eheart-icon\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n            {{ article.positive_reactions_count }}\n          \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Espan\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Espan\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n            \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ecomments-icon\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n            {{ article.comments_count }}\n          \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Espan\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etime\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E{{ article.readable_publish_date }}\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etime\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Enuxt-link\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"javascript\"\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E HeartIcon \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E'@\u002Fassets\u002Ficons\u002Fheart.svg?inline'\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E CommentsIcon \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E'@\u002Fassets\u002Ficons\u002Fcomments.svg?inline'\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003Ecomponents\u003C\u002Fspan\u003E: {\n    HeartIcon,\n    CommentsIcon\n  },\n  \u003Cspan class=\"hljs-attr\"\u003Eprops\u003C\u002Fspan\u003E: {\n    \u003Cspan class=\"hljs-attr\"\u003Earticle\u003C\u002Fspan\u003E: {\n      \u003Cspan class=\"hljs-attr\"\u003Etype\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003EObject\u003C\u002Fspan\u003E,\n      \u003Cspan class=\"hljs-attr\"\u003Edefault\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-literal\"\u003Enull\u003C\u002Fspan\u003E\n    }\n  }\n}\n\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"reuse-code-fetch-code-with-code-this-fetch-code-\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#reuse-code-fetch-code-with-code-this-fetch-code-\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EReuse \u003Ccode\u003Efetch\u003C\u002Fcode\u003E with \u003Ccode\u003Ethis.$fetch()\u003C\u002Fcode\u003E\u003C\u002Fh3\u003E\u003Cp\u003EIt already should display a list of articles fetched from DEV.TO but it feels like we are not making a full use of this API. Let’s add lazy loading to articles list, and use the pagination parameter provided by this API. So when we scroll to the bottom of the page a new chunk of articles will be fetched and rendered.\u003C\u002Fp\u003E\n\u003Cp\u003ETo efficiently detect when to fetch the next page it’s better to use \u003Ca href=\"https:\u002F\u002Fdeveloper.mozilla.org\u002Fen-US\u002Fdocs\u002FWeb\u002FAPI\u002FIntersection_Observer_API\"\u003EIntersection Observer API\u003C\u002Fa\u003E. For that we will use a previously installed Vue plugin called \u003Ccode\u003Evue-observe-visibility\u003C\u002Fcode\u003E which is basically a wrapper around this API and it will detect when an element is becoming visible or hidden on the page. This plugin provides us a possibility to use \u003Ccode\u003Ev-observe-visibility\u003C\u002Fcode\u003E directive on any element, so let’s add it to last \u003Ccode\u003E&lt;article-card-block&gt;\u003C\u002Fcode\u003E component:\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Eindex.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Earticle-card-block\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-attr\"\u003Ev-for\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"(article, i) in articles\"\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-attr\"\u003E:key\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"article.id\"\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-attr\"\u003Ev-observe-visibility\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"\n    i === articles.length - 1 ? lazyLoadArticles : false\n  \"\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-attr\"\u003E:article\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"article\"\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"article-card-block\"\u003C\u002Fspan\u003E\n\u002F&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EAs you can guess from the code above, when the last \u003Ccode\u003E&lt;article-card-block&gt;\u003C\u002Fcode\u003E appears in viewport \u003Ccode\u003ElazyLoadArticles\u003C\u002Fcode\u003E will be fired. Let’s look at it:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003ElazyLoadArticles(isVisible) {\n  \u003Cspan class=\"hljs-keyword\"\u003Eif\u003C\u002Fspan\u003E (isVisible) {\n    \u003Cspan class=\"hljs-keyword\"\u003Eif\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.currentPage &lt; \u003Cspan class=\"hljs-number\"\u003E5\u003C\u002Fspan\u003E) {\n      \u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.currentPage++\n      \u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.$fetch()\n    }\n  }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EAnd here we see the power of the new \u003Ccode\u003Efetch\u003C\u002Fcode\u003E hook. We can just reuse \u003Ccode\u003E$fetch\u003C\u002Fcode\u003E as a method and fetch the next page when lazy loading is triggered.\u003C\u002Fp\u003E\n\u003Ch3 id=\"applying-placeholders-with-code-fetchstate-code-\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#applying-placeholders-with-code-fetchstate-code-\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EApplying placeholders with \u003Ccode\u003E$fetchState\u003C\u002Fcode\u003E\u003C\u002Fh3\u003E\u003Cp\u003EIf you already applied code from the previous section and tried client-side navigation between \u003Ccode\u003Eindex.vue\u003C\u002Fcode\u003E, \u003Ccode\u003Etop.vue\u003C\u002Fcode\u003E and \u003Ccode\u003Et\u002F_tag.vue\u003C\u002Fcode\u003E page components you probably noticed that it shows an empty page for the moment, while it’s waiting for the API request to complete. This is intended behavior, and it’s different from the old \u003Ccode\u003Efetch\u003C\u002Fcode\u003E and \u003Ccode\u003EasyncData\u003C\u002Fcode\u003E hooks that triggered before page navigation.\u003C\u002Fp\u003E\n\u003Cp\u003EThanks to \u003Ccode\u003E$fetchState.pending\u003C\u002Fcode\u003E wisely provided by the \u003Ccode\u003Efetch\u003C\u002Fcode\u003E hook we can use this flag to display a placeholder when fetch is being called on client-side. \u003Ccode\u003Evue-content-placeholders\u003C\u002Fcode\u003E plugin will be used as a placeholder.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Eindex.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"page-wrapper\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ev-if\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"$fetchState.pending\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"article-cards-wrapper\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Econtent-placeholders\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-attr\"\u003Ev-for\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"p in 30\"\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-attr\"\u003E:key\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"p\"\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-attr\"\u003Erounded\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"article-card-block\"\u003C\u002Fspan\u003E\n        &gt;\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Econtent-placeholders-img\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Econtent-placeholders-text\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:lines\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"3\"\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Econtent-placeholders\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ev-else-if\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"$fetchState.error\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E{{ $fetchState.error.message }}\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ev-else\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"article-cards-wrapper\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Earticle-card-block\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-attr\"\u003Ev-for\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"(article, i) in articles\"\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-attr\"\u003E:key\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"article.id\"\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-attr\"\u003Ev-observe-visibility\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"\n            i === articles.length - 1 ? lazyLoadArticles : false\n          \"\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-attr\"\u003E:article\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"article\"\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"article-card-block\"\u003C\u002Fspan\u003E\n        \u002F&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EWe imitate how \u003Ccode\u003E&lt;article-card-block&gt;\u003C\u002Fcode\u003E looks with \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fmichalsnik\u002Fvue-content-placeholders#available-components-and-properties\"\u003Evue-content-placeholders components\u003C\u002Fa\u003E, and as you could see in source code it will be used in almost every component that uses the \u003Ccode\u003Efetch\u003C\u002Fcode\u003E hook, so let’s not pay attention on those parts of code anymore (they are basically the same in each component).\u003C\u002Fp\u003E\n\u003Ch3 id=\"using-code-fetch-code-in-any-other-component-\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#using-code-fetch-code-in-any-other-component-\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EUsing \u003Ccode\u003Efetch\u003C\u002Fcode\u003E in any other component  🔥\u003C\u002Fh3\u003E\u003Cp\u003EThis is probably the most interesting feature of the new \u003Ccode\u003Efetch\u003C\u002Fcode\u003E hook. \u003Cstrong\u003EWe can now use the \u003Ccode\u003Efetch\u003C\u002Fcode\u003E hook in any Vue component without worrying about breaking SSR!\u003C\u002Fstrong\u003E This means far less headache about how to structure your async API calls and components.\u003C\u002Fp\u003E\n\u003Cp\u003ETo explore this great functionality let’s move to \u003Ccode\u003E_username\u002F_article.vue\u003C\u002Fcode\u003E page component.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"page-wrapper\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"article-content-wrapper\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Earticle-block\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"article-block\"\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"aside-username-wrapper\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Easide-username-block\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"aside-username-block\"\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ecomments-block\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"comments-block\"\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"javascript\"\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E ArticleBlock \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E'@\u002Fcomponents\u002Fblocks\u002FArticleBlock'\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E CommentsBlock \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E'@\u002Fcomponents\u002Fblocks\u002FCommentsBlock'\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E AsideUsernameBlock \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E'@\u002Fcomponents\u002Fblocks\u002FAsideUsernameBlock'\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003Ecomponents\u003C\u002Fspan\u003E: {\n    ArticleBlock,\n    CommentsBlock,\n    AsideUsernameBlock\n  }\n}\n\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EHere we see no data fetching at all, only a template layout consisting of 3 components: \u003Ccode\u003E&lt;article-block\u002F&gt;\u003C\u002Fcode\u003E, \u003Ccode\u003E&lt;aside-username-block\u002F&gt;\u003C\u002Fcode\u003E, \u003Ccode\u003E&lt;comments-block\u002F&gt;\u003C\u002Fcode\u003E. And each of those components has its own \u003Ccode\u003Efetch\u003C\u002Fcode\u003E hook. With old \u003Ccode\u003Efetch\u003C\u002Fcode\u003E or current \u003Ccode\u003EasyncData\u003C\u002Fcode\u003E earlier we would have to make all three requests to three different DEV.TO endpoints and then pass them to each component as a prop. But now those components are completely encapsulated.\u003C\u002Fp\u003E\n\u003Cp\u003EIn \u003Ccode\u003E&lt;article-block\u002F&gt;\u003C\u002Fcode\u003E we use \u003Ccode\u003Efetch\u003C\u002Fcode\u003E just like we’d use it in a page component. \u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Easync\u003C\u002Fspan\u003E fetch() {\n  \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E article = \u003Cspan class=\"hljs-keyword\"\u003Eawait\u003C\u002Fspan\u003E fetch(\n    \u003Cspan class=\"hljs-string\"\u003E`https:\u002F\u002Fdev.to\u002Fapi\u002Farticles\u002F\u003Cspan class=\"hljs-subst\"\u003E${\u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.$route.params.article}\u003C\u002Fspan\u003E`\u003C\u002Fspan\u003E\n  ).then(\u003Cspan class=\"hljs-function\"\u003E(\u003Cspan class=\"hljs-params\"\u003Eres\u003C\u002Fspan\u003E) =&gt;\u003C\u002Fspan\u003E res.json())\n\n  \u003Cspan class=\"hljs-keyword\"\u003Eif\u003C\u002Fspan\u003E (article.id &amp;&amp; article.user.username === \u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.$route.params.username) {\n    \u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.article = article\n    \u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.$store.commit(\u003Cspan class=\"hljs-string\"\u003E'SET_CURRENT_ARTICLE'\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.article)\n  } \u003Cspan class=\"hljs-keyword\"\u003Eelse\u003C\u002Fspan\u003E {\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F set status code on server\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-keyword\"\u003Eif\u003C\u002Fspan\u003E (process.server) {\n      \u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.$nuxt.context.res.statusCode = \u003Cspan class=\"hljs-number\"\u003E404\u003C\u002Fspan\u003E\n    }\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F throwing an error will set $fetchState.error\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-keyword\"\u003Ethrow\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-built_in\"\u003EError\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E'Article not found'\u003C\u002Fspan\u003E)\n  }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003ENow, remember in the section about caching I mentioned that there’s an \u003Ccode\u003Eactivated\u003C\u002Fcode\u003E hook that can be used for managing TTL of \u003Ccode\u003Efetch\u003C\u002Fcode\u003E? This is example of such usage:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003Eactivated() {\n    \u003Cspan class=\"hljs-keyword\"\u003Eif\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.$fetchState.timestamp &lt;= \u003Cspan class=\"hljs-built_in\"\u003EDate\u003C\u002Fspan\u003E.now() - \u003Cspan class=\"hljs-number\"\u003E60000\u003C\u002Fspan\u003E) {\n      \u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.$fetch()\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EWith this code in place we will call fetch again if last fetch was more than 60 sec ago. All other requests within this period will be cached.\u003C\u002Fp\u003E\n\u003Cp\u003EThere’s also interesting usage of another \u003Ccode\u003Efetch\u003C\u002Fcode\u003E feature called \u003Ccode\u003EfetchOnServer\u003C\u002Fcode\u003E in the \u003Ccode\u003E&lt;comments-block&gt;\u003C\u002Fcode\u003E component. We don’t really want to render this content on the server side, because comments are user generated and could be irrelevant or spammy. We don’t need any SEO for this content block. Now, with the help of mentioned \u003Ccode\u003EfetchOnServer\u003C\u002Fcode\u003E we have such control:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Easync\u003C\u002Fspan\u003E fetch() {\n  \u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.comments = \u003Cspan class=\"hljs-keyword\"\u003Eawait\u003C\u002Fspan\u003E fetch(\n    \u003Cspan class=\"hljs-string\"\u003E`https:\u002F\u002Fdev.to\u002Fapi\u002Fcomments?a_id=\u003Cspan class=\"hljs-subst\"\u003E${\u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.$route.params.article}\u003C\u002Fspan\u003E`\u003C\u002Fspan\u003E\n  ).then(\u003Cspan class=\"hljs-function\"\u003E(\u003Cspan class=\"hljs-params\"\u003Eres\u003C\u002Fspan\u003E) =&gt;\u003C\u002Fspan\u003E res.json())\n},\n\u003Cspan class=\"hljs-attr\"\u003EfetchOnServer\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-literal\"\u003Efalse\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"error-handling\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#error-handling\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EError handling\u003C\u002Fh3\u003E\u003Cp\u003ELast thing that should be mentioned is error handling. You probably already saw that we used error handling above, but let’s pay more attention to this important topic.\u003C\u002Fp\u003E\n\u003Cp\u003EAs you know, \u003Ccode\u003Efetch\u003C\u002Fcode\u003E is handled at the \u003Cstrong\u003Ecomponent level\u003C\u002Fstrong\u003E, when doing server-side rendering, the parent (virtual) dom tree is already rendered when rendering the component, so we cannot change it by calling \u003Ccode\u003E$nuxt.error(...)\u003C\u002Fcode\u003E, instead we have to \u003Cstrong\u003Ehandle the error at the component level\u003C\u002Fstrong\u003E.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003E$fetchState.error\u003C\u002Fcode\u003E is set if an error is thrown in the \u003Ccode\u003Efetch\u003C\u002Fcode\u003E hook, so we can use it in our template to display an error message:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E“page-wrapper”\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ev-if\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"$fetchState.pending\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003E!—\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eplaceholders\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Egoes\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ehere\u003C\u002Fspan\u003E —&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ev-else-if\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E“$fetchState.error\u003C\u002Fspan\u003E\"&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E{{ $fetchState.error.message }}\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ev-else\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003E!—\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Efetched\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Econtent\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Egoes\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ehere\u003C\u002Fspan\u003E —&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EThen, in our \u003Ccode\u003Efetch\u003C\u002Fcode\u003E hook, we will throw the error if we don&#39;t find the article corresponding for the defined author:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Easync\u003C\u002Fspan\u003E fetch() {\n  \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E article = \u003Cspan class=\"hljs-keyword\"\u003Eawait\u003C\u002Fspan\u003E fetch(\n    \u003Cspan class=\"hljs-string\"\u003E`https:\u002F\u002Fdev.to\u002Fapi\u002Farticles\u002F\u003Cspan class=\"hljs-subst\"\u003E${\u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.$route.params.article}\u003C\u002Fspan\u003E`\u003C\u002Fspan\u003E\n  ).then(\u003Cspan class=\"hljs-function\"\u003E(\u003Cspan class=\"hljs-params\"\u003Eres\u003C\u002Fspan\u003E) =&gt;\u003C\u002Fspan\u003E res.json())\n\n  \u003Cspan class=\"hljs-keyword\"\u003Eif\u003C\u002Fspan\u003E (article.id &amp;&amp; article.user.username === \u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.$route.params.username) {\n    \u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.article = article\n  } \u003Cspan class=\"hljs-keyword\"\u003Eelse\u003C\u002Fspan\u003E {\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F set status code on server\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-keyword\"\u003Eif\u003C\u002Fspan\u003E (process.server) {\n      \u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.$nuxt.context.res.statusCode = \u003Cspan class=\"hljs-number\"\u003E404\u003C\u002Fspan\u003E\n    }\n    \u003Cspan class=\"hljs-keyword\"\u003Ethrow\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-built_in\"\u003EError\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E'Article not found'\u003C\u002Fspan\u003E)\n  }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003ENote here that we wrap \u003Ccode\u003Ethis.$nuxt.context.res.statusCode = 404\u003C\u002Fcode\u003E around \u003Ccode\u003Eprocess.server\u003C\u002Fcode\u003E, this is used to set the HTTP status code on the server-side for correct SEO.\u003C\u002Fp\u003E\n\u003Ch2 id=\"conclusion\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#conclusion\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EConclusion\u003C\u002Fh2\u003E\u003Cp\u003EIn this article we explored Nuxt.js new \u003Ccode\u003Efetch\u003C\u002Fcode\u003E and built an app with basic DEV.TO content features and structure using only this \u003Ccode\u003Efetch\u003C\u002Fcode\u003E hook. I hope you got some inspiration to build your own version of DEV.TO. Don’t forget to check out the \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fbdrtsky\u002Fnuxt-dev-to-clone\"\u003Esource code\u003C\u002Fa\u003E for a more complete example and functionality.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EWhat to do next:\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003ERead \u003Ca href=\"\u002Fblog\u002Funderstanding-how-fetch-works-in-nuxt-2-12\"\u003EKrutie Patel article\u003C\u002Fa\u003E with in-depth analysis of how new \u003Ccode\u003Efetch\u003C\u002Fcode\u003E hook works\u003C\u002Fli\u003E\n\u003Cli\u003ECheck \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt\u002Fhackernews\"\u003Enuxt-hackernews\u003C\u002Fa\u003E for similar usage of \u003Ca href=\"https:\u002F\u002Fgithub.com\u002FHackerNews\u002FAPI\"\u003EHacker News API\u003C\u002Fa\u003E \u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#subscribe-to-newsletter\"\u003ESubscribe\u003C\u002Fa\u003E to the newsletter to not miss the upcoming articles and resources, I plan to write an article about How to create your personal blog with Nuxt and Dev.to as CMS.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n",links:{previous:{title:c,slug:d},next:{title:h,slug:i}}},{path:"vi\u002Fblog\u002Funderstanding-how-fetch-works-in-nuxt-2-12.md",slug:i,readtime:{text:"17 min read",minutes:16.06,time:963599.9999999999,words:3212},title:h,description:"Explore different features of the fetch hook and learn a brand new way to bring data into Nuxt applications.",imgUrl:"blog\u002Funderstanding-how-fetch-works-in-nuxt-2-12\u002Fmain.png",date:"2020-04-06T00:00:00.000Z",authors:[{name:"Krutie Patel",avatarUrl:"https:\u002F\u002Fpbs.twimg.com\u002Fprofile_images\u002F780651635932434432\u002FYtbSkumD_400x400.jpg",link:"https:\u002F\u002Ftwitter.com\u002FKrutiePatel"}],tags:[a,n,o,p],body:"\u003Cp\u003ENuxt introduces a new \u003Ccode\u003Efetch\u003C\u002Fcode\u003E with the latest release of version 2.12. Fetch provides a brand new way to bring data into Nuxt applications.\u003C\u002Fp\u003E\n\u003Cp\u003EIn this post, we will explore different features of the fetch hook and try to understand how it works.\u003C\u002Fp\u003E\n\u003Ch2 id=\"fetch-hook-and-nuxt-lifecycle\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#fetch-hook-and-nuxt-lifecycle\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EFetch Hook and Nuxt Lifecycle\u003C\u002Fh2\u003E\u003Cp\u003EIn terms of Nuxt lifecycle hooks, \u003Ccode\u003Efetch\u003C\u002Fcode\u003E sits within Vue lifecycle after \u003Ccode\u003Ecreated\u003C\u002Fcode\u003E hook. As we already know that, all Vue lifecycle hooks are called with their \u003Ccode\u003Ethis\u003C\u002Fcode\u003E context. The same applies to \u003Ccode\u003Efetch\u003C\u002Fcode\u003E hook as well.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"\u002Fblog\u002Funderstanding-how-fetch-works-in-nuxt-2-12\u002Fnew-fetch-lifecycle-hooks.png\" alt=\"New fetch in Nuxt lifecycle\"\u003E\u003C\u002Fp\u003E\n\u003Cp\u003EFetch hook is called after the component instance is created on the server-side. That makes \u003Ccode\u003Ethis\u003C\u002Fcode\u003E context available inside the \u003Ccode\u003Efetch\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  fetch() {\n    \u003Cspan class=\"hljs-built_in\"\u003Econsole\u003C\u002Fspan\u003E.log(\u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E);\n  }\n};\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003ELet’s see what this could mean for page components.\u003C\u002Fp\u003E\n\u003Ch3 id=\"page-components\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#page-components\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EPage Components\u003C\u002Fh3\u003E\u003Cp\u003EWith the help of \u003Ccode\u003Ethis\u003C\u002Fcode\u003E context, fetch is able to mutate component’s data directly. It means we can set the component’s local data without having to dispatch Vuex store action or committing mutation from the page component.\u003C\u002Fp\u003E\n\u003Cp\u003EAs a result, Vuex becomes optional, but not impossible. We can still use \u003Ccode\u003Ethis.$store\u003C\u002Fcode\u003E as usual to access Vuex store if required.\u003C\u002Fp\u003E\n\u003Ch2 id=\"availability-of-fetch-hook\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#availability-of-fetch-hook\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EAvailability of fetch hook\u003C\u002Fh2\u003E\u003Cp\u003EWith \u003Ccode\u003Efetch\u003C\u002Fcode\u003E, we can pre-fetch the data asynchronously \u003Cstrong\u003Ein any Vue components\u003C\u002Fstrong\u003E. It means, other than page components found in \u003Ccode\u003E\u002Fpages\u003C\u002Fcode\u003E directory, every other \u003Ccode\u003E.vue\u003C\u002Fcode\u003E components found in \u003Ccode\u003E\u002Flayouts\u003C\u002Fcode\u003E and \u003Ccode\u003E\u002Fcomponents\u003C\u002Fcode\u003E directories can also benefit from the fetch hook.\u003C\u002Fp\u003E\n\u003Cp\u003ELet&#39;s see what this could mean for layout and building-block components.\u003C\u002Fp\u003E\n\u003Ch3 id=\"layout-components\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#layout-components\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ELayout Components\u003C\u002Fh3\u003E\u003Cp\u003EUsing new \u003Ccode\u003Efetch\u003C\u002Fcode\u003E, now we can make API calls directly from the layout components. This was impossible prior to the release of v2.12.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EPossible use cases\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003EFetch config data from the back-end in Nuxt layouts to generate footer and navbar dynamically\u003C\u002Fli\u003E\n\u003Cli\u003EFetch user related data (i.e. user profile, shopping-cart item count) in the navbar\u003C\u002Fli\u003E\n\u003Cli\u003EFetch site relevant data on \u003Ccode\u003Elayouts\u002Ferror.vue\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Ch3 id=\"building-block-child-nested-components\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#building-block-child-nested-components\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EBuilding-block (Child\u002FNested) Components\u003C\u002Fh3\u003E\u003Cp\u003EWith \u003Ccode\u003Efetch\u003C\u002Fcode\u003E hook available in child components as well, we can off-load some of the data-fetching tasks from page-level components, and delegate them over to nested components. This was also impossible prior to the release of v2.12.\u003C\u002Fp\u003E\n\u003Cp\u003EThis reduces the responsibility of route-level components to a great extent.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EPossible use case -\u003C\u002Fstrong\u003E We can still pass props to child components, but if the child components need to have their own data-fetching logic, now they can!\u003C\u002Fp\u003E\n\u003Ch2 id=\"call-order-of-multiple-fetch-hooks\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#call-order-of-multiple-fetch-hooks\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ECall order of multiple fetch hooks\u003C\u002Fh2\u003E\u003Cp\u003ESince each component can have its own data-fetching logic, you may ask what would be the order in which each of them are called?\u003C\u002Fp\u003E\n\u003Cp\u003EFetch hook is called on server-side once (on the first request to the Nuxt app) and then on client-side when navigating to further routes. But since we can define one fetch hook for each component, fetch hooks are called in sequence of their hierarchy.\u003C\u002Fp\u003E\n\u003Ch3 id=\"disabling-fetch-on-server-side\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#disabling-fetch-on-server-side\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EDisabling fetch on server-side\u003C\u002Fh3\u003E\u003Cp\u003EIn addition, we can even disable fetch on the server-side if required.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003EfetchOnServer\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-literal\"\u003Efalse\u003C\u002Fspan\u003E\n};\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EAnd this way, the fetch hook will only be called on client-side. When \u003Ccode\u003EfetchOnServer\u003C\u002Fcode\u003E is set to false, \u003Ccode\u003E$fetchState.pending\u003C\u002Fcode\u003E becomes \u003Ccode\u003Etrue\u003C\u002Fcode\u003E when the component is rendered on server-side.\u003C\u002Fp\u003E\n\u003Ch2 id=\"error-handling\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#error-handling\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EError Handling\u003C\u002Fh2\u003E\u003Cp\u003ENew \u003Ccode\u003Efetch\u003C\u002Fcode\u003E handles error at component level. Let’s see how.\u003C\u002Fp\u003E\n\u003Cp\u003EBecause we’re fetching data asynchronously, the new fetch() provides a \u003Ccode\u003E$fetchState\u003C\u002Fcode\u003E object to check whether the request has finished and progressed successfully.\u003C\u002Fp\u003E\n\u003Cp\u003EBelow is what the \u003Ccode\u003E$fetchState\u003C\u002Fcode\u003E object looks like.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs \"\u003E$fetchState = {\n  pending: true | false,\n  error: null | {},\n  timestamp: Integer\n};\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EWe have three keys,\u003C\u002Fp\u003E\n\u003Col\u003E\n\u003Cli\u003E\u003Cstrong\u003EPending -\u003C\u002Fstrong\u003E lets you display a placeholder when fetch is being called on client-side\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cstrong\u003EError -\u003C\u002Fstrong\u003E lets you show an error message\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cstrong\u003ETimestamp -\u003C\u002Fstrong\u003E shows timestamp of the last fetch which is useful for caching with \u003Ccode\u003Ekeep-alive\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Cp\u003EThese keys are then used directly in the template area of the component to show relevant placeholders during the process of fetching data from the API.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ev-if\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"$fetchState.pending\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003EFetching posts...\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ev-else-if\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"$fetchState.error\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003EError while fetching posts\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eul\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ev-else\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      …\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Eul\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EWhen error occurs at \u003Cstrong\u003Ecomponent-level\u003C\u002Fstrong\u003E, we can set HTTP status code on server-side by checking \u003Ccode\u003Eprocess.server\u003C\u002Fcode\u003E in fetch hook and follow it up with \u003Ccode\u003Ethrow new Error()\u003C\u002Fcode\u003E statement.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Easync\u003C\u002Fspan\u003E fetch() {\n  \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E post = \u003Cspan class=\"hljs-keyword\"\u003Eawait\u003C\u002Fspan\u003E fetch(\u003Cspan class=\"hljs-string\"\u003E`https:\u002F\u002Fjsonplaceholder.typicode.com\u002Fposts\u002F\u003Cspan class=\"hljs-subst\"\u003E${\u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.$route.params.id}\u003C\u002Fspan\u003E`\u003C\u002Fspan\u003E)\n                     .then(\u003Cspan class=\"hljs-function\"\u003E(\u003Cspan class=\"hljs-params\"\u003Eres\u003C\u002Fspan\u003E) =&gt;\u003C\u002Fspan\u003E res.json())\n\n  \u003Cspan class=\"hljs-keyword\"\u003Eif\u003C\u002Fspan\u003E (post.id === \u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.$route.params.id) {\n      \u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.post = post\n    } \u003Cspan class=\"hljs-keyword\"\u003Eelse\u003C\u002Fspan\u003E {\n      \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F set status code on server and\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-keyword\"\u003Eif\u003C\u002Fspan\u003E (process.server) {\n        \u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.$nuxt.context.res.statusCode = \u003Cspan class=\"hljs-number\"\u003E404\u003C\u002Fspan\u003E\n      }\n      \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F use throw new Error()\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-keyword\"\u003Ethrow\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-built_in\"\u003EError\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E'Post not found'\u003C\u002Fspan\u003E)\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003ESetting the HTTP status code this way \u003Cstrong\u003Eis useful for correct SEO\u003C\u002Fstrong\u003E.\u003C\u002Fp\u003E\n\u003Ch2 id=\"fetch-as-a-method\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#fetch-as-a-method\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EFetch as a method\u003C\u002Fh2\u003E\u003Cp\u003ENew fetch hook also acts as a method that can be invoked upon user interaction or invoked programmatically from the component methods.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-comment\"\u003E&lt;!-- from template in template  --&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ebutton\u003C\u002Fspan\u003E @\u003Cspan class=\"hljs-attr\"\u003Eclick\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"$fetch\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003ERefresh Data\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ebutton\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F from component methods in script section\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003Emethods\u003C\u002Fspan\u003E: {\n    refresh() {\n      \u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.$fetch();\n    }\n  }\n};\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch2 id=\"making-nuxt-pages-more-performant\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#making-nuxt-pages-more-performant\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EMaking Nuxt pages more performant\u003C\u002Fh2\u003E\u003Cp\u003EWe can use \u003Ccode\u003E:keep-alive-props\u003C\u002Fcode\u003E prop and \u003Ccode\u003Eactivated\u003C\u002Fcode\u003E hook to make Nuxt page components more performant using a new fetch hook.\u003C\u002Fp\u003E\n\u003Cp\u003ENuxt allows \u003Cstrong\u003Ecaching a certain number of pages\u003C\u002Fstrong\u003E in the memory along with their fetched data. And also allows \u003Cstrong\u003Eadding a number of seconds\u003C\u002Fstrong\u003E before we can re-fetch the data.\u003C\u002Fp\u003E\n\u003Cp\u003EFor any of the above methods to work, we have to use the \u003Ccode\u003Ekeep-alive\u003C\u002Fcode\u003E prop in generic \u003Ccode\u003E&lt;nuxt \u002F&gt;\u003C\u002Fcode\u003E and \u003Ccode\u003E&lt;nuxt-child\u003C\u002Fcode\u003E&gt; components.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-comment\"\u003E&lt;!-- layouts\u002Fdefault.vue --&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Enuxt\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ekeep-alive\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EIn addition, we can pass \u003Ccode\u003E:keep-alive-props\u003C\u002Fcode\u003E to \u003Ccode\u003E&lt;nuxt \u002F&gt;\u003C\u002Fcode\u003E component to cache a number of pages along with their fetched data.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003E:keep-alive-props\u003C\u002Fcode\u003E prop allow us to indicate the maximum number of pages that should be kept in the memory while we navigate elsewhere within the site.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-comment\"\u003E&lt;!-- layouts\u002Fdefault.vue --&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Enuxt\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ekeep-alive\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:keep-alive-props\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"{ max: 10 }\"\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EAbove is one way to boost page performance which is more high-level and generic, while the next one drills down to optimise the fetch request calls by using the \u003Ccode\u003Etimestamp\u003C\u002Fcode\u003E property of \u003Ccode\u003E$fetchState\u003C\u002Fcode\u003E and comparing it against the number of seconds delay before it re-fetches the data.\u003C\u002Fp\u003E\n\u003Cp\u003EVue’s \u003Ccode\u003Eactivated\u003C\u002Fcode\u003E hook is used here with Nuxt&#39;s \u003Ccode\u003Ekeep-alive\u003C\u002Fcode\u003E prop to re-fetch the data.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  activated() {\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Call fetch again if last fetch more than a minute ago\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-keyword\"\u003Eif\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.$fetchState.timestamp &lt;= \u003Cspan class=\"hljs-built_in\"\u003EDate\u003C\u002Fspan\u003E.now() - \u003Cspan class=\"hljs-number\"\u003E60000\u003C\u002Fspan\u003E) {\n      \u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.$fetch();\n    }\n  }\n};\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch2 id=\"asyncdata-vs-fetch\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#asyncdata-vs-fetch\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EasyncData vs Fetch\u003C\u002Fh2\u003E\u003Cp\u003EAs far as page components are concerned, new \u003Ccode\u003Efetch\u003C\u002Fcode\u003E seems way too similar to \u003Ccode\u003EasyncData()\u003C\u002Fcode\u003E because they both deal with the local data. But there are some key differences worth taking note of as below.\u003C\u002Fp\u003E\n\u003Cp\u003EAs of Nuxt 2.12, \u003Ccode\u003EasyncData\u003C\u002Fcode\u003E method is still an active feature. Let’s examine some of the key differences between \u003Ccode\u003EasyncData\u003C\u002Fcode\u003E and new \u003Ccode\u003Efetch\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\n\u003Ch3 id=\"asyncdata\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#asyncdata\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EAsyncData\u003C\u002Fh3\u003E\u003Col\u003E\n\u003Cli\u003E\u003Ccode\u003EasyncData\u003C\u002Fcode\u003E is limited to only page-level components\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003Ethis\u003C\u002Fcode\u003E context is unavailable\u003C\u002Fli\u003E\n\u003Cli\u003EAdds payload by \u003Cstrong\u003Ereturning\u003C\u002Fstrong\u003E the data\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-keyword\"\u003Easync\u003C\u002Fspan\u003E asyncData(context) {\n    \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E data = \u003Cspan class=\"hljs-keyword\"\u003Eawait\u003C\u002Fspan\u003E context.$axios.$get(\n      \u003Cspan class=\"hljs-string\"\u003E`https:\u002F\u002Fjsonplaceholder.typicode.com\u002Ftodos`\u003C\u002Fspan\u003E\n    );\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F `todos` does not have to be declared in data()\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E { \u003Cspan class=\"hljs-attr\"\u003Etodos\u003C\u002Fspan\u003E: data.Item };\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F `todos` is merged with local data\u003C\u002Fspan\u003E\n  }\n};\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"new-fetch\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#new-fetch\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ENew Fetch\u003C\u002Fh3\u003E\u003Col\u003E\n\u003Cli\u003E\u003Ccode\u003Efetch\u003C\u002Fcode\u003E is available in all Vue components\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003Ethis\u003C\u002Fcode\u003E context is available\u003C\u002Fli\u003E\n\u003Cli\u003ESimply \u003Cstrong\u003Emutates\u003C\u002Fstrong\u003E the local data\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  data() {\n    \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E {\n      \u003Cspan class=\"hljs-attr\"\u003Etodos\u003C\u002Fspan\u003E: []\n    };\n  },\n  \u003Cspan class=\"hljs-keyword\"\u003Easync\u003C\u002Fspan\u003E fetch() {\n    \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E { data } = \u003Cspan class=\"hljs-keyword\"\u003Eawait\u003C\u002Fspan\u003E axios.get(\n      \u003Cspan class=\"hljs-string\"\u003E`https:\u002F\u002Fjsonplaceholder.typicode.com\u002Ftodos`\u003C\u002Fspan\u003E\n    );\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F `todos` has to be declared in data()\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.todos = data;\n  }\n};\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch2 id=\"fetch-before-nuxt-2-12\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#fetch-before-nuxt-2-12\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EFetch before Nuxt 2.12\u003C\u002Fh2\u003E\u003Cp\u003EIf you have been working with Nuxt for a while, then you’ll know that the previous version of \u003Ccode\u003Efetch\u003C\u002Fcode\u003E was significantly different.\u003C\u002Fp\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E\u003Cstrong\u003EIs this a breaking change?\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003ENo, it isn&#39;t. Actually, the old fetch can still be used by passing the \u003Ccode\u003Econtext\u003C\u002Fcode\u003E as the first argument to avoid any breaking changes in your existing Nuxt applications.\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003EHere’s the list of notable changes in \u003Ccode\u003Efetch\u003C\u002Fcode\u003E hook compared with \u003Cstrong\u003Ebefore\u003C\u002Fstrong\u003E and \u003Cstrong\u003Eafter\u003C\u002Fstrong\u003E v2.12.\u003C\u002Fp\u003E\n\u003Ch3 id=\"1-call-order-of-code-fetch-code-hook\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#1-call-order-of-code-fetch-code-hook\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003E1. Call order of \u003Ccode\u003Efetch\u003C\u002Fcode\u003E hook\u003C\u002Fh3\u003E\u003Cp\u003E\u003Cstrong\u003EBefore -\u003C\u002Fstrong\u003E \u003Ccode\u003Efetch\u003C\u002Fcode\u003E hook was called before initiating the component, hence \u003Ccode\u003Ethis\u003C\u002Fcode\u003E wasn’t available inside the fetch hook.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EAfter -\u003C\u002Fstrong\u003E \u003Ccode\u003Efetch\u003C\u002Fcode\u003E is called after the component instance is created on the server-side when the route is accessed.\u003C\u002Fp\u003E\n\u003Ch3 id=\"2-code-this-code-vs-code-context-code-\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#2-code-this-code-vs-code-context-code-\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003E2. \u003Ccode\u003Ethis\u003C\u002Fcode\u003E vs \u003Ccode\u003Econtext\u003C\u002Fcode\u003E\u003C\u002Fh3\u003E\u003Cp\u003E\u003Cstrong\u003EBefore -\u003C\u002Fstrong\u003E We had access to the Nuxt \u003Ccode\u003Econtext\u003C\u002Fcode\u003E on page-level components, given that the \u003Ccode\u003Econtext\u003C\u002Fcode\u003E is passed as a first parameter.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  fetch(context) {\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F …\u003C\u002Fspan\u003E\n  }\n};\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003Cstrong\u003EAfter -\u003C\u002Fstrong\u003E We can access \u003Ccode\u003Ethis\u003C\u002Fcode\u003E context just like Vue client-side hooks without passing any parameters.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  fetch() {\n    \u003Cspan class=\"hljs-built_in\"\u003Econsole\u003C\u002Fspan\u003E.log(\u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E);\n  }\n};\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"3-availability-of-code-fetch-code-hook\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#3-availability-of-code-fetch-code-hook\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003E3. Availability of \u003Ccode\u003Efetch\u003C\u002Fcode\u003E hook\u003C\u002Fh3\u003E\u003Cp\u003E\u003Cstrong\u003EBefore -\u003C\u002Fstrong\u003E Only page (route-level) components were allowed to fetch data on the server-side.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EAfter -\u003C\u002Fstrong\u003E Now, we can pre-fetch the data asynchronously in any Vue components.\u003C\u002Fp\u003E\n\u003Ch3 id=\"4-call-order-of-code-fetch-code-hook\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#4-call-order-of-code-fetch-code-hook\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003E4. Call order of \u003Ccode\u003Efetch\u003C\u002Fcode\u003E hook\u003C\u002Fh3\u003E\u003Cp\u003E\u003Cstrong\u003EBefore -\u003C\u002Fstrong\u003E \u003Ccode\u003Efetch\u003C\u002Fcode\u003E could be called server-side once (on the first request to the Nuxt app) and client-side when navigating to further routes.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EAfter -\u003C\u002Fstrong\u003E New \u003Ccode\u003Efetch\u003C\u002Fcode\u003E is the same as an old fetch, but…\u003C\u002Fp\u003E\n\u003Cp\u003E…since we can have one \u003Ccode\u003Efetch\u003C\u002Fcode\u003E for each component, \u003Ccode\u003Efetch\u003C\u002Fcode\u003E hooks are called in sequence of their hierarchy.\u003C\u002Fp\u003E\n\u003Ch3 id=\"5-error-handling\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#5-error-handling\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003E5. Error Handling\u003C\u002Fh3\u003E\u003Cp\u003E\u003Cstrong\u003EBefore -\u003C\u002Fstrong\u003E We used the \u003Ccode\u003Econtext.error\u003C\u002Fcode\u003E function that showed a custom error page when an error occurred during API calls.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EAfter -\u003C\u002Fstrong\u003E New \u003Ccode\u003Efetch\u003C\u002Fcode\u003E uses the \u003Ccode\u003E$fetchState\u003C\u002Fcode\u003E object to handle errors in the template area during API calls.\u003C\u002Fp\u003E\n\u003Cp\u003EError handling is performed at component level.\u003C\u002Fp\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E\u003Cstrong\u003EDoes this mean we cannot show users a custom error page like we did prior to Nuxt 2.12?\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003EYes we can, but only with \u003Ccode\u003EasyncData()\u003C\u002Fcode\u003E when it&#39;s about page-level component data. When using \u003Ccode\u003Efetch\u003C\u002Fcode\u003E, we can utilize \u003Ccode\u003Ethis.$nuxt.error({ statusCode: 404, message: &#39;Data not found&#39; })\u003C\u002Fcode\u003E to show a custom error page.\u003C\u002Fp\u003E\n\u003Ch2 id=\"conclusion\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#conclusion\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EConclusion\u003C\u002Fh2\u003E\u003Cp\u003ENew fetch hook brings a lot of improvements and provides more flexibility in fetching data and organising route-level &amp; building-block components in a whole new way!\u003C\u002Fp\u003E\n\u003Cp\u003EIt will certainly make you think a little differently when you plan and design your new Nuxt project that requires multiple API calls within the same route.\u003C\u002Fp\u003E\n\u003Cp\u003EI hope this article has helped you get acquainted with the new \u003Ccode\u003Efetch\u003C\u002Fcode\u003E feature. I&#39;d love to see what you build with it.\u003C\u002Fp\u003E\n\u003Ch2 id=\"what-39-s-next\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#what-39-s-next\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EWhat&#39;s next\u003C\u002Fh2\u003E\u003Cul\u003E\n\u003Cli\u003ERead \u003Ca href=\"\u002Fblog\u002Fbuild-dev-to-clone-with-nuxt-new-fetch\"\u003ESergey Bedritsky&#39;s article\u003C\u002Fa\u003E to see new \u003Ccode\u003Efetch\u003C\u002Fcode\u003E hook in action as he shows how to buid dev.to clone!\u003C\u002Fli\u003E\n\u003Cli\u003EAlready missed March newsletter? \u003Ca href=\"#subscribe-to-newsletter\"\u003ESubscribe to Nuxt newsletter\u003C\u002Fa\u003E and get latest articles and resources delivered right into your inbox.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n",links:{previous:{title:e,slug:f},next:{title:j,slug:k}}},{path:"vi\u002Fblog\u002Fnuxtjs-from-terminal-to-browser.md",slug:k,readtime:{text:"3 min read",minutes:2.075,time:124500.00000000001,words:415},title:j,description:"How we changed the developer experience to stop switching between the terminal and browser.",imgUrl:"blog\u002Fnuxtjs-from-terminal-to-browser\u002Fmain.png",date:"2019-06-04T00:00:00.000Z",authors:[{name:q,avatarUrl:g,link:r}],tags:["webpack","DX"],body:"\u003Cp\u003EHow we changed the developer experience to stop switching between the terminal and browser.\u003C\u002Fp\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003ENuxt.js is a Vue.js framework to create different kind of web applications with the \u003Cstrong\u003Esame directory structure &amp; conventions\u003C\u002Fstrong\u003E: Universal, Single Page, PWA or Static Generated.\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003E\u003Cem\u003Eℹ️ These features are all available with \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt\u002Fnuxt.js\u002Freleases\u002Ftag\u002Fv2.8.0\"\u003Ev2.8.0 release\u003C\u002Fa\u003E.\u003C\u002Fem\u003E\u003C\u002Fp\u003E\n\u003Ch2 id=\"-a-href-problems-a-problems\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#-a-href-problems-a-problems\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003E\u003Ca href=\"#problems\"\u003E\u003C\u002Fa\u003EProblems\u003C\u002Fh2\u003E\u003Col\u003E\n\u003Cli\u003EDeveloping JavaScript applications with Webpack or any bundler requires to switch between your browser and terminal for debugging purpose.\u003C\u002Fli\u003E\n\u003Cli\u003EUsing \u003Ccode\u003Econsole.log\u003C\u002Fcode\u003E to debug when the app is server rendered requires to remember that logs will be displayed on the terminal when refreshing the page.\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Ch2 id=\"-a-href-solutions-a-solutions\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#-a-href-solutions-a-solutions\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003E\u003Ca href=\"#solutions\"\u003E\u003C\u002Fa\u003ESolutions\u003C\u002Fh2\u003E\u003Col\u003E\n\u003Cli\u003EForwarding Webpack build state right in the browser and display them in a fancy manner.\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--1u6wSHPt--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880\u002Fhttps:\u002F\u002Fuser-images.githubusercontent.com\u002F904724\u002F58880743-ec7a3280-86d8-11e9-8856-8d9d22b89b70.gif\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--1u6wSHPt--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880\u002Fhttps:\u002F\u002Fuser-images.githubusercontent.com\u002F904724\u002F58880743-ec7a3280-86d8-11e9-8856-8d9d22b89b70.gif\" alt=\"foward-webpack-build-state\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003Col\u003E\n\u003Cli\u003ESame for Hot Module Replacement (really useful when the project gets bigger and takes more time to re-build).\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--faVtF222--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880\u002Fhttps:\u002F\u002Fuser-images.githubusercontent.com\u002F904724\u002F58547105-129a6100-8207-11e9-9c61-a93956a17727.gif\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--faVtF222--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880\u002Fhttps:\u002F\u002Fuser-images.githubusercontent.com\u002F904724\u002F58547105-129a6100-8207-11e9-9c61-a93956a17727.gif\" alt=\"nuxt-build-indicator-hmr\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003Col\u003E\n\u003Cli\u003EForwarding SSR logs to the browser in development mode\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--bwQ8iEq2--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880\u002Fhttps:\u002F\u002Fuser-images.githubusercontent.com\u002F904724\u002F58566291-a3396700-8230-11e9-9dd6-09c3ff8578d2.gif\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--bwQ8iEq2--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880\u002Fhttps:\u002F\u002Fuser-images.githubusercontent.com\u002F904724\u002F58566291-a3396700-8230-11e9-9dd6-09c3ff8578d2.gif\" alt=\"nuxt-ssr-logs-forwarding\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003Ch2 id=\"-a-href-nuxtjs-vision-a-nuxtjs-vision\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#-a-href-nuxtjs-vision-a-nuxtjs-vision\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003E\u003Ca href=\"#nuxtjs-vision\"\u003E\u003C\u002Fa\u003ENuxtJS Vision\u003C\u002Fh2\u003E\u003Cp\u003EThe purpose to these changes is to use the terminal for commands only.\u003C\u002Fp\u003E\n\u003Cp\u003ENow you can focus right on your code and its visual result 🙂\u003C\u002Fp\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003EBe lazy, be smart, be Nuxt.\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003ELinks:\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003EDocumentation: \u003Ca href=\"https:\u002F\u002Fnuxtjs.org\"\u003Ehttps:\u002F\u002Fnuxtjs.org\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003EGitHub: \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt\u002Fnuxt.js\"\u003Ehttps:\u002F\u002Fgithub.com\u002Fnuxt\u002Fnuxt.js\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003ELoading Screen source code: \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt\u002Floading-screen\"\u003Ehttps:\u002F\u002Fgithub.com\u002Fnuxt\u002Floading-screen\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003ETwitter: \u003Ca href=\"https:\u002F\u002Ftwitter.com\u002Fnuxt_js\"\u003Ehttps:\u002F\u002Ftwitter.com\u002Fnuxt_js\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n",links:{previous:{title:h,slug:i},next:{title:s,slug:t}}},{path:"vi\u002Fblog\u002Fintroducing-smart-prefetching.md",slug:t,readtime:{text:"1 min read",minutes:.745,time:44700,words:149},title:s,description:"Starting from Nuxt v2.4.0, Nuxt.js will automagically prefetch the code-splitted pages linked with a nuxt-link when visible in the viewport by default.",imgUrl:"blog\u002Fintroducing-smart-prefetching\u002Fmain.png",date:"2019-01-28T00:00:00.000Z",authors:[{name:q,avatarUrl:g,link:r}],tags:["framework","feature","performance"],body:"\u003Ch2 id=\"introducing-smart-prefetching-\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#introducing-smart-prefetching-\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EIntroducing Smart prefetching ⚡️\u003C\u002Fh2\u003E\u003Cp\u003EStarting from \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt\u002Fnuxt.js\u002Freleases\u002Ftag\u002Fv2.4.0\"\u003ENuxt v2.4.0\u003C\u002Fa\u003E, Nuxt.js will automagically prefetch the code-splitted pages linked with \u003Ccode\u003E&lt;nuxt-link&gt;\u003C\u002Fcode\u003E when visible in the viewport \u003Cstrong\u003Eby default\u003C\u002Fstrong\u003E. This hugely improves the end user performances, inspired by \u003Ca href=\"https:\u002F\u002Fgithub.com\u002FGoogleChromeLabs\u002Fquicklink\"\u003Equicklink\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--jP7Crsw7--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880\u002Fhttps:\u002F\u002Fuser-images.githubusercontent.com\u002F904724\u002F51692960-4158be80-1ffe-11e9-9299-61881d06412e.gif\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--jP7Crsw7--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880\u002Fhttps:\u002F\u002Fuser-images.githubusercontent.com\u002F904724\u002F51692960-4158be80-1ffe-11e9-9299-61881d06412e.gif\" alt=\"nuxt-prefetch-comparison\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003Cp\u003EDemos are online and we recommend you to try it out to feel the difference:\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003ENo prefetching (v2.3): \u003Ca href=\"https:\u002F\u002Fnuxt-no-prefetch.surge.sh\"\u003Ehttps:\u002F\u002Fnuxt-no-prefetch.surge.sh\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003EWith prefetching (v2.4): \u003Ca href=\"https:\u002F\u002Fnuxt-prefetch.surge.sh\"\u003Ehttps:\u002F\u002Fnuxt-prefetch.surge.sh\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003EYou can learn more about this feature in the \u003Ca href=\"\u002Fapi\u002Fcomponents-nuxt-link\"\u003E\u003Ccode\u003E&lt;nuxt-link&gt;\u003C\u002Fcode\u003E\u003C\u002Fa\u003E section of the documentation.\u003C\u002Fp\u003E\n",links:{previous:{title:j,slug:k},next:{title:b,slug:b}}}]}],fetch:[],mutations:[]}}("Nuxt",null,"Announcing Nuxt's $2M seed round","seed-round","Build a DEV.TO clone with Nuxt new fetch","build-dev-to-clone-with-nuxt-new-fetch","https:\u002F\u002Fpbs.twimg.com\u002Fprofile_images\u002F1042510623962275840\u002F1Iw_Mvud_400x400.jpg","Understanding how fetch works in Nuxt 2.12","understanding-how-fetch-works-in-nuxt-2-12","NuxtJS: From Terminal to Browser","nuxtjs-from-terminal-to-browser","going-dark-with-nuxtjs-color-mode","Going dark with Nuxt.js color mode","Fetch","Asynchronous Data Fetching","API","Sébastien Chopin","https:\u002F\u002Ftwitter.com\u002Fatinux","Introducing Smart Prefeching","introducing-smart-prefetching")));