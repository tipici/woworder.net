__NUXT_JSONP__("/api/configuration-modern", {data:[{},{path:"\u002Fvi\u002Fapi\u002Fconfiguration-modern",section:"api",page:{attrs:{title:"API: The modern Property",description:"Build and server a modern bundle"},body:"\u003Cblockquote\u003E\n\u003Cp\u003EThis feature is inspired by \u003Ca href=\"https:\u002F\u002Fcli.vuejs.org\u002Fguide\u002Fbrowser-compatibility.html#modern-mode\"\u003Evue-cli modern mode\u003C\u002Fa\u003E \u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cul\u003E\n\u003Cli\u003EType: \u003Ccode\u003EString\u003C\u002Fcode\u003E or \u003Ccode\u003EBoolean\u003C\u002Fcode\u003E\u003Cul\u003E\n\u003Cli\u003EDefault: false\u003C\u002Fli\u003E\n\u003Cli\u003EPossible values:\u003Cul\u003E\n\u003Cli\u003E\u003Ccode\u003E&#39;client&#39;\u003C\u002Fcode\u003E: Serve both, the modern bundle \u003Ccode\u003E&lt;script type=&quot;module&quot;&gt;\u003C\u002Fcode\u003E and the legacy bundle \u003Ccode\u003E&lt;script nomodule&gt;\u003C\u002Fcode\u003E scripts, also provide a \u003Ccode\u003E&lt;link rel=&quot;modulepreload&quot;&gt;\u003C\u002Fcode\u003E for the modern bundle. Every browser that understands the \u003Ccode\u003Emodule\u003C\u002Fcode\u003E type will load the modern bundle while older browsers fall back to the legacy (transpiled) one.\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003E&#39;server&#39;\u003C\u002Fcode\u003E or \u003Ccode\u003Etrue\u003C\u002Fcode\u003E: The Node.js server will check browser version based on the user agent and serve the corresponding modern or legacy bundle.\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003Efalse\u003C\u002Fcode\u003E: Disable modern build\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003EThe two versions of bundles are:\u003C\u002Fp\u003E\n\u003Col\u003E\n\u003Cli\u003EModern bundle: targeting modern browsers that support ES modules\u003C\u002Fli\u003E\n\u003Cli\u003ELegacy bundle: targeting older browsers based on babel config (IE9 compatible by default).\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Cp\u003E\u003Cstrong\u003EInfo:\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003EUse command option \u003Ccode\u003E[--modern | -m]=[mode]\u003C\u002Fcode\u003E to build\u002Fstart modern bundles, for example: in \u003Ccode\u003Epackage.json\u003C\u002Fcode\u003E:\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs json\"\u003E{\n  \u003Cspan class=\"hljs-attr\"\u003E\"scripts\"\u003C\u002Fspan\u003E: {\n    \u003Cspan class=\"hljs-attr\"\u003E\"build:modern\"\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E\"nuxt build --modern=server\"\u003C\u002Fspan\u003E,\n    \u003Cspan class=\"hljs-attr\"\u003E\"start:modern\"\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E\"nuxt start --modern=server\"\u003C\u002Fspan\u003E\n  }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003Cstrong\u003ENote about \u003Cem\u003Enuxt generate\u003C\u002Fem\u003E:\u003C\u002Fstrong\u003E The \u003Ccode\u003Emodern\u003C\u002Fcode\u003E property also works with the \u003Ccode\u003Enuxt generate\u003C\u002Fcode\u003E command, but in this case only the \u003Ccode\u003Eclient\u003C\u002Fcode\u003E option is honored and will be selected automatically when launching the \u003Ccode\u003Enuxt generate --modern\u003C\u002Fcode\u003E command without providing any values.\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003ENuxt will automatically detect \u003Ccode\u003Emodern\u003C\u002Fcode\u003E build in \u003Ccode\u003Enuxt start\u003C\u002Fcode\u003E when \u003Ccode\u003Emodern\u003C\u002Fcode\u003E is not specified, auto-detected mode is:\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Ctable\u003E\n\u003Cthead\u003E\n\u003Ctr\u003E\n\u003Cth\u003EMode\u003C\u002Fth\u003E\n\u003Cth align=\"center\"\u003EModern Mode\u003C\u002Fth\u003E\n\u003C\u002Ftr\u003E\n\u003C\u002Fthead\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\n\u003Ctd\u003Euniversal\u003C\u002Ftd\u003E\n\u003Ctd align=\"center\"\u003Eserver\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003Espa\u003C\u002Ftd\u003E\n\u003Ctd align=\"center\"\u003Eclient\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003C\u002Ftbody\u003E\u003C\u002Ftable\u003E\n\u003Cul\u003E\n\u003Cli\u003EModern mode for \u003Ccode\u003Enuxt generate\u003C\u002Fcode\u003E can only be \u003Ccode\u003Eclient\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003Cli\u003EUse \u003Ca href=\"\u002Fapi\u002Fconfiguration-build#crossorigin\"\u003E\u003Ccode\u003Ebuild.crossorigin\u003C\u002Fcode\u003E\u003C\u002Fa\u003E to set \u003Ccode\u003Ecrossorigin\u003C\u002Fcode\u003E attribute in \u003Ccode\u003E&lt;link&gt;\u003C\u002Fcode\u003E and \u003Ccode\u003E&lt;script&gt;\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003EPlease refer \u003Ca href=\"https:\u002F\u002Fphilipwalton.com\u002Farticles\u002Fdeploying-es2015-code-in-production-today\u002F\"\u003EPhillip Walton&#39;s excellent post\u003C\u002Fa\u003E for more knowledge regarding modern builds.\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n"},contributors:[]}],fetch:[],mutations:[]});