__NUXT_JSONP__("/api/components-nuxt-link", {data:[{},{path:"\u002Fvi\u002Fapi\u002Fcomponents-nuxt-link",section:"api",page:{attrs:{title:"API: The \u003Cnuxt-link\u003E Component",description:"Link the pages between them with nuxt-link."},body:"\u003Cblockquote\u003E\n\u003Cp\u003EThis component is used to provide navigations between page components and enhance performances with smart prefetching.\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003EThe \u003Ccode\u003E&lt;nuxt-link&gt;\u003C\u002Fcode\u003E component is an essential of Nuxt. It \u003Cstrong\u003Eshould be used to navigate\u003C\u002Fstrong\u003E through your application, similar to the \u003Ccode\u003E&lt;router-link&gt;\u003C\u002Fcode\u003E component in a traditional Vue App. In fact, \u003Ccode\u003E&lt;nuxt-link&gt;\u003C\u002Fcode\u003E extends \u003Ca href=\"https:\u002F\u002Frouter.vuejs.org\u002Fapi\u002F#router-link\"\u003E\u003Ccode\u003E&lt;router-link&gt;\u003C\u002Fcode\u003E\u003C\u002Fa\u003E. That means it takes the same properties and can be used in the same manner. Read the \u003Ca href=\"https:\u002F\u002Frouter.vuejs.org\u002Fapi\u002F#router-link\"\u003EVue Router documentation\u003C\u002Fa\u003E for more information.\u003C\u002Fp\u003E\n\u003Cp\u003EExample (\u003Ccode\u003Epages\u002Findex.vue\u003C\u002Fcode\u003E):\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eh1\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003EHome page\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Eh1\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Enuxt-link\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eto\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"\u002Fabout\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003EAbout (internal link that belongs to the Nuxt App)\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Enuxt-link\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ea\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ehref\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"https:\u002F\u002Fnuxtjs.org\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003EExternal Link to another page\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ea\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003Cstrong\u003EAliases:\u003C\u002Fstrong\u003E \u003Ccode\u003E&lt;n-link&gt;\u003C\u002Fcode\u003E, \u003Ccode\u003E&lt;NuxtLink&gt;\u003C\u002Fcode\u003E, and \u003Ccode\u003E&lt;NLink&gt;\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003EAdded with Nuxt.js v2.4.0\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003ETo improve the responsiveness of your Nuxt.js applications, when the link will be displayed within the viewport, Nuxt.js will automatically prefetch the \u003Cem\u003Ecode splitted\u003C\u002Fem\u003E page. This feature is inspired by \u003Ca href=\"https:\u002F\u002Fgithub.com\u002FGoogleChromeLabs\u002Fquicklink\"\u003Equicklink.js\u003C\u002Fa\u003E by Google Chrome Labs.\u003C\u002Fp\u003E\n\u003Cp\u003ETo disable the prefetching of the linked page, you can use the \u003Ccode\u003Eno-prefetch\u003C\u002Fcode\u003E prop. Since Nuxt.js v2.10.0, you can also use the \u003Ccode\u003Eprefetch\u003C\u002Fcode\u003E prop set to \u003Ccode\u003Efalse\u003C\u002Fcode\u003E:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003En-link\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eto\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"\u002Fabout\"\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eno-prefetch\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003EAbout page not pre-fetched\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003En-link\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003En-link\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eto\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"\u002Fabout\"\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:prefetch\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"false\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003EAbout page not pre-fetched\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003En-link\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EYou can configure globally this behaviour with \u003Ca href=\"\u002Fapi\u002Fconfiguration-router#prefetchlinks\"\u003Erouter.prefetchLinks\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\n\u003Cp\u003ESince Nuxt.js v2.10.0, if you have set \u003Ca href=\"\u002Fapi\u002Fconfiguration-router#prefetchlinks\"\u003Erouter.prefetchLinks\u003C\u002Fa\u003E to \u003Ccode\u003Efalse\u003C\u002Fcode\u003E globally but you want to prefetch a specific link, you can use the \u003Ccode\u003Eprefetch\u003C\u002Fcode\u003E prop:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003En-link\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eto\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"\u002Fabout\"\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eprefetch\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003EAbout page pre-fetched\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003En-link\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EThe \u003Ccode\u003Eprefetched-class\u003C\u002Fcode\u003E prop is also available to customize the class added when the code splitted page has been prefetched. Make sure to set up this functionality globally with \u003Ca href=\"\u002Fapi\u002Fconfiguration-router#linkprefetchedclass\"\u003Erouter.linkPrefetchedClass\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\n"},contributors:[]}],fetch:[],mutations:[]});