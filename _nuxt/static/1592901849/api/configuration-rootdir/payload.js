__NUXT_JSONP__("/api/configuration-rootdir", {data:[{},{path:"\u002Fvi\u002Fapi\u002Fconfiguration-rootdir",section:"api",page:{attrs:{title:"API: The rootDir Property",description:"Define the workspace of Nuxt.js application"},body:"\u003Cul\u003E\n\u003Cli\u003EType: \u003Ccode\u003EString\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003Cli\u003EDefault: \u003Ccode\u003Eprocess.cwd()\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003EDefine the workspace directory of your Nuxt.js application.\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003EThis property will be overwritten by \u003Ca href=\"\u002Fguide\u002Fcommands\"\u003Enuxt commands\u003C\u002Fa\u003E if an argument is passed to them. Eg running \u003Ccode\u003Enuxt .\u002Fmy-app\u002F\u003C\u002Fcode\u003E will set the \u003Ccode\u003ErootDir\u003C\u002Fcode\u003E to the absolute path of \u003Ccode\u003E.\u002Fmy-app\u002F\u003C\u002Fcode\u003E from the current\u002Fworking directory\u003C\u002Fp\u003E\n\u003Cp\u003EBecause of that its normally not needed to configure this option unless you will use \u003Ca href=\"\u002Fapi\u002Fnuxt\"\u003ENuxt.js programmatically\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\n\u003Cdiv class=\"Alert Alert--blue\"\u003E\nBoth `rootDir` as the package root containing the `node_modules` directory need to be within the same directory tree to be able to [resolve dependencies](https:\u002F\u002Fnodejs.org\u002Fapi\u002Fmodules.html#modules_all_together).\nSee the [`srcDir` option](\u002Fapi\u002Fconfiguration-srcdir) for examples of directory structure when thats not the case\n\u003C\u002Fdiv\u003E\n"},contributors:[]}],fetch:[],mutations:[]});