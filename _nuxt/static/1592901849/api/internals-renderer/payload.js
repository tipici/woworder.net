__NUXT_JSONP__("/api/internals-renderer", {data:[{},{path:"\u002Fvi\u002Fapi\u002Finternals-renderer",section:"api",page:{attrs:{title:"API: The Renderer Class",description:"Nuxt Renderer Class"},body:"\u003Cul\u003E\n\u003Cli\u003ESource: \u003Cstrong\u003E\u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt\u002Fnuxt.js\u002Fblob\u002Fdev\u002Fpackages\u002Fvue-renderer\u002Fsrc\u002Frenderer.js\"\u003Evue-renderer\u002Frenderer.js\u003C\u002Fa\u003E\u003C\u002Fstrong\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003EThis class is exporting a connect middleware which handles and serves all SSR and asset requests.\u003C\u002Fp\u003E\n\u003Ch2 id=\"hooks\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#hooks\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EHooks\u003C\u002Fh2\u003E\u003Cp\u003EWe can register hooks on certain life cycle events.\u003C\u002Fp\u003E\n\u003Ctable\u003E\n\u003Cthead\u003E\n\u003Ctr\u003E\n\u003Cth\u003EHook\u003C\u002Fth\u003E\n\u003Cth\u003EArguments\u003C\u002Fth\u003E\n\u003Cth\u003EWhen\u003C\u002Fth\u003E\n\u003C\u002Ftr\u003E\n\u003C\u002Fthead\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003Erender:before\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E(renderer, options)\u003C\u002Ftd\u003E\n\u003Ctd\u003EBefore setting up middleware and resources for the Renderer class, useful to overload some methods or options.\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003Erender:setupMiddleware\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E(app) \u003Cem\u003Econnect instance\u003C\u002Fem\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003EBefore Nuxt adds its middleware stack. We can use it to register custom server side middleware.\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003Erender:errorMiddleware\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E(app) \u003Cem\u003Econnect instance\u003C\u002Fem\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003EBefore adding Nuxt error middleware, useful to add your own middleware before using Nuxt&#39;s. See the \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt-community\u002Fsentry-module\u002Fblob\u002Fv4.0.3\u002Flib\u002Fmodule.js#L151\"\u003ESentry module\u003C\u002Fa\u003E for more info.\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003Erender:resourcesLoaded\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E(resources)\u003C\u002Ftd\u003E\n\u003Ctd\u003ECalled after resources for renderer are loaded (client manifest, server bundle, etc).\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003Erender:done\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E(renderer)\u003C\u002Ftd\u003E\n\u003Ctd\u003ESSR Middleware and all resources are ready (Renderer ready)\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003Erender:routeContext\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E(context.nuxt)\u003C\u002Ftd\u003E\n\u003Ctd\u003E\u003Cem\u003EEvery time a route is server-rendered and before \u003Ccode\u003Erender:route\u003C\u002Fcode\u003E hook\u003C\u002Fem\u003E. Called before serializing Nuxt context into \u003Ccode\u003Ewindow.__NUXT__\u003C\u002Fcode\u003E, useful to add some data that you can fetch on client-side.\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003Erender:route\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E(url, result, context)\u003C\u002Ftd\u003E\n\u003Ctd\u003E\u003Cem\u003EEvery time a route is server-rendered\u003C\u002Fem\u003E. Called before sending back the request to the browser.\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003Erender:routeDone\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E(url, result, context)\u003C\u002Ftd\u003E\n\u003Ctd\u003E\u003Cem\u003EEvery time a route is server-rendered\u003C\u002Fem\u003E. Called after the response has been sent to the browser.\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003C\u002Ftbody\u003E\u003C\u002Ftable\u003E\n"},contributors:[]}],fetch:[],mutations:[]});