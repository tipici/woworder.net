__NUXT_JSONP__("/api/configuration-hooks", {data:[{},{path:"\u002Fvi\u002Fapi\u002Fconfiguration-hooks",section:"api",page:{attrs:{title:"API: The hooks Property",description:"Hooks are listeners to Nuxt events that are typically used in Nuxt modules, but are also available in `nuxt.config.js`."},body:"\u003Cul\u003E\n\u003Cli\u003EType: \u003Ccode\u003EObject\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003EHooks are \u003Ca href=\"\u002Fapi\u002Finternals\"\u003Elisteners to Nuxt events\u003C\u002Fa\u003E that are typically used in Nuxt modules, but are also available in \u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003E. \u003Ca href=\"\u002Fapi\u002Finternals\"\u003ELearn More\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003EExample (\u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003E):\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E fs \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E'fs'\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E path \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E'path'\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003Ehooks\u003C\u002Fspan\u003E: {\n    \u003Cspan class=\"hljs-attr\"\u003Ebuild\u003C\u002Fspan\u003E: {\n      done (builder) {\n        \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E extraFilePath = path.join(builder.nuxt.options.buildDir, \u003Cspan class=\"hljs-string\"\u003E'extra-file'\u003C\u002Fspan\u003E)\n        fs.writeFileSync(extraFilePath, \u003Cspan class=\"hljs-string\"\u003E'Something extra'\u003C\u002Fspan\u003E)\n      }\n    }\n  }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EInternally, hooks follow a naming pattern using colons (e.g., \u003Ccode\u003Ebuild:done\u003C\u002Fcode\u003E). For ease of configuration, you can structure them as an hierarchical object when using \u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003E (as exemplifed above) to set your own hooks. See \u003Ca href=\"\u002Fapi\u002Finternals\"\u003ENuxt Internals\u003C\u002Fa\u003E for more detailed information on how they work.\u003C\u002Fp\u003E\n\u003Ch2 id=\"list-of-hooks\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#list-of-hooks\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EList of hooks\u003C\u002Fh2\u003E\u003Cul\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fnuxtjs.org\u002Fapi\u002Finternals-nuxt#hooks\"\u003ENuxt hooks\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fnuxtjs.org\u002Fapi\u002Finternals-renderer#hooks\"\u003ERenderer hooks\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fnuxtjs.org\u002Fapi\u002Finternals-module-container#hooks\"\u003EModulesContainer hooks\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fnuxtjs.org\u002Fapi\u002Finternals-builder#hooks\"\u003EBuilder hooks\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fnuxtjs.org\u002Fapi\u002Finternals-generator#hooks\"\u003EGenerator hooks\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Ch2 id=\"examples\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#examples\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EExamples\u003C\u002Fh2\u003E\u003Ch3 id=\"redirect-to-router-base-when-not-on-root\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#redirect-to-router-base-when-not-on-root\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ERedirect to router.base when not on root\u003C\u002Fh3\u003E\u003Cp\u003ELet´s say you want to serve pages as \u003Ccode\u003E\u002Fportal\u003C\u002Fcode\u003E instead of \u003Ccode\u003E\u002F\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\n\u003Cp\u003EThis is maybe an edge-case, and the point of _nuxt.config.js_’ \u003Ccode\u003Erouter.base\u003C\u002Fcode\u003E is for when a Web server will serve Nuxt elsewhere than the domain root.\u003C\u002Fp\u003E\n\u003Cp\u003EBut when in local development, hitting \u003Cem\u003Elocalhost\u003C\u002Fem\u003E, when router.base is not \u002F returns a 404.\nIn order to prevent this, you can setup a Hook.\u003C\u002Fp\u003E\n\u003Cp\u003EMaybe redirecting is not the best use-case for a production Web site, but this will help you leverage Hooks.\u003C\u002Fp\u003E\n\u003Cp\u003ETo begin, you \u003Ca href=\"\u002Fapi\u002Fconfiguration-router#base\"\u003Ecan change \u003Ccode\u003Erouter.base\u003C\u002Fcode\u003E\u003C\u002Fa\u003E; Update your \u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003E:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F nuxt.config.js\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E hooks \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E'.\u002Fhooks'\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003Erouter\u003C\u002Fspan\u003E: {\n    \u003Cspan class=\"hljs-attr\"\u003Ebase\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E'\u002Fportal'\u003C\u002Fspan\u003E\n  }\n  \u003Cspan class=\"hljs-attr\"\u003Ehooks\u003C\u002Fspan\u003E: hooks(\u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E)\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EThen, create a few files;\u003C\u002Fp\u003E\n\u003Col\u003E\n\u003Cli\u003E\u003Cp\u003E\u003Ccode\u003Ehooks\u002Findex.js\u003C\u002Fcode\u003E, Hooks module\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F file: hooks\u002Findex.js\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E render \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E'.\u002Frender'\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E nuxtConfig =&gt; ({\n  \u003Cspan class=\"hljs-attr\"\u003Erender\u003C\u002Fspan\u003E: render(nuxtConfig)\n})\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cp\u003E\u003Ccode\u003Ehooks\u002Frender.js\u003C\u002Fcode\u003E, Render hook\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F file: hooks\u002Frender.js\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E redirectRootToPortal \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E'.\u002Froute-redirect-portal'\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E (nuxtConfig) =&gt; {\n  \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E router = \u003Cspan class=\"hljs-built_in\"\u003EReflect\u003C\u002Fspan\u003E.has(nuxtConfig, \u003Cspan class=\"hljs-string\"\u003E'router'\u003C\u002Fspan\u003E) ? nuxtConfig.router : {}\n  \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E base = \u003Cspan class=\"hljs-built_in\"\u003EReflect\u003C\u002Fspan\u003E.has(router, \u003Cspan class=\"hljs-string\"\u003E'base'\u003C\u002Fspan\u003E) ? router.base : \u003Cspan class=\"hljs-string\"\u003E'\u002Fportal'\u003C\u002Fspan\u003E\n\n  \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E {\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F**\n     * 'render:setupMiddleware'\n     * {\u003Cspan class=\"hljs-doctag\"\u003E@link \u003C\u002Fspan\u003Enode_modules\u002Fnuxt\u002Flib\u002Fcore\u002Frenderer.js}\n     *\u002F\u003C\u002Fspan\u003E\n    setupMiddleware (app) {\n      app.use(\u003Cspan class=\"hljs-string\"\u003E'\u002F'\u003C\u002Fspan\u003E, redirectRootToPortal(base))\n    }\n  }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cp\u003E\u003Ccode\u003Ehooks\u002Froute-redirect-portal.js\u003C\u002Fcode\u003E, The Middleware itself\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F file: hooks\u002Froute-redirect-portal.js\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-comment\"\u003E\u002F**\n * Nuxt middleware hook to redirect from \u002F to \u002Fportal (or whatever we set in nuxt.config.js router.base)\n *\n * Should be the same version as connect\n * {\u003Cspan class=\"hljs-doctag\"\u003E@link \u003C\u002Fspan\u003Enode_modules\u002Fconnect\u002Fpackage.json}\n *\u002F\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E parseurl \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E'parseurl'\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-comment\"\u003E\u002F**\n * Connect middleware to handle redirecting to desired Web Applicatin Context Root.\n *\n * Notice that Nuxt docs lacks explaning how to use hooks.\n * This is a sample router to help explain.\n *\n * See nice implementation for inspiration:\n * - https:\u002F\u002Fgithub.com\u002Fnuxt\u002Fnuxt.js\u002Fblob\u002Fdev\u002Fexamples\u002Fwith-cookies\u002Fplugins\u002Fcookies.js\n * - https:\u002F\u002Fgithub.com\u002Fyyx990803\u002Flaunch-editor\u002Fblob\u002Fmaster\u002Fpackages\u002Flaunch-editor-middleware\u002Findex.js\n *\n * [http_class_http_clientrequest]: https:\u002F\u002Fnodejs.org\u002Fapi\u002Fhttp.html#http_class_http_clientrequest\n * [http_class_http_serverresponse]: https:\u002F\u002Fnodejs.org\u002Fapi\u002Fhttp.html#http_class_http_serverresponse\n *\n * \u003Cspan class=\"hljs-doctag\"\u003E@param \u003Cspan class=\"hljs-type\"\u003E{http.ClientRequest}\u003C\u002Fspan\u003E \u003C\u002Fspan\u003Ereq Node.js internal client request object [http_class_http_clientrequest]\n * \u003Cspan class=\"hljs-doctag\"\u003E@param \u003Cspan class=\"hljs-type\"\u003E{http.ServerResponse}\u003C\u002Fspan\u003E \u003C\u002Fspan\u003Eres Node.js internal response [http_class_http_serverresponse]\n * \u003Cspan class=\"hljs-doctag\"\u003E@param \u003Cspan class=\"hljs-type\"\u003E{Function}\u003C\u002Fspan\u003E \u003C\u002Fspan\u003Enext middleware callback\n *\u002F\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E desiredContextRoot =&gt;\n  \u003Cspan class=\"hljs-function\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title\"\u003EprojectHooksRouteRedirectPortal\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-params\"\u003Ereq, res, next\u003C\u002Fspan\u003E) \u003C\u002Fspan\u003E{\n    \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E desiredContextRootRegExp = \u003Cspan class=\"hljs-keyword\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-built_in\"\u003ERegExp\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E`^\u003Cspan class=\"hljs-subst\"\u003E${desiredContextRoot}\u003C\u002Fspan\u003E`\u003C\u002Fspan\u003E)\n    \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E _parsedUrl = \u003Cspan class=\"hljs-built_in\"\u003EReflect\u003C\u002Fspan\u003E.has(req, \u003Cspan class=\"hljs-string\"\u003E'_parsedUrl'\u003C\u002Fspan\u003E) ? req._parsedUrl : \u003Cspan class=\"hljs-literal\"\u003Enull\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E url = _parsedUrl !== \u003Cspan class=\"hljs-literal\"\u003Enull\u003C\u002Fspan\u003E ? _parsedUrl : parseurl(req)\n    \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E startsWithDesired = desiredContextRootRegExp.test(url.pathname)\n    \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E isNotProperContextRoot = desiredContextRoot !== url.pathname\n    \u003Cspan class=\"hljs-keyword\"\u003Eif\u003C\u002Fspan\u003E (isNotProperContextRoot &amp;&amp; startsWithDesired === \u003Cspan class=\"hljs-literal\"\u003Efalse\u003C\u002Fspan\u003E) {\n      \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E pathname = url.pathname === \u003Cspan class=\"hljs-literal\"\u003Enull\u003C\u002Fspan\u003E ? \u003Cspan class=\"hljs-string\"\u003E''\u003C\u002Fspan\u003E : url.pathname\n      \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E search = url.search === \u003Cspan class=\"hljs-literal\"\u003Enull\u003C\u002Fspan\u003E ? \u003Cspan class=\"hljs-string\"\u003E''\u003C\u002Fspan\u003E : url.search\n      \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E Location = desiredContextRoot + pathname + search\n      res.writeHead(\u003Cspan class=\"hljs-number\"\u003E302\u003C\u002Fspan\u003E, {\n        Location\n      })\n      res.end()\n    }\n    next()\n  }\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Cp\u003EThen, whenever a colleague in development accidentally hits \u003Ccode\u003E\u002F\u003C\u002Fcode\u003E to reach the development web development service, Nuxt will automatically redirect to \u003Ccode\u003E\u002Fportal\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n"},contributors:[]}],fetch:[],mutations:[]});