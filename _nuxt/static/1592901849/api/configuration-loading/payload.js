__NUXT_JSONP__("/api/configuration-loading", {data:[{},{path:"\u002Fvi\u002Fapi\u002Fconfiguration-loading",section:"api",page:{attrs:{title:"API: The loading Property",description:"Nuxt.js uses its own component to show a progress bar between the routes. You can customize it, disable it or create your own component."},body:"\u003Cul\u003E\n\u003Cli\u003EType: \u003Ccode\u003EBoolean\u003C\u002Fcode\u003E or \u003Ccode\u003EObject\u003C\u002Fcode\u003E or \u003Ccode\u003EString\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003EOut of the box, Nuxt.js gives you its own loading progress bar component that&#39;s shown between routes. You can customize it, disable it or create your own component.\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003EThe loading bar can also be programmatically started in your components by calling \u003Ccode\u003Ethis.$nuxt.$loading.start()\u003C\u002Fcode\u003E to start the loading bar and \u003Ccode\u003Ethis.$nuxt.$loading.finish()\u003C\u002Fcode\u003E to finish it.\u003C\u002Fp\u003E\n\u003Cp\u003EDuring your page&#39;s component&#39;s mounting process, the \u003Ccode\u003E$loading\u003C\u002Fcode\u003E property may not be immediately available to access. To work around this, if you want to start the loader in the \u003Ccode\u003Emounted\u003C\u002Fcode\u003E method, make sure to wrap your \u003Ccode\u003E$loading\u003C\u002Fcode\u003E method calls inside \u003Ccode\u003E this.$nextTick\u003C\u002Fcode\u003E as shown below.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs javascript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  mounted () {\n    \u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.$nextTick(\u003Cspan class=\"hljs-function\"\u003E\u003Cspan class=\"hljs-params\"\u003E()\u003C\u002Fspan\u003E =&gt;\u003C\u002Fspan\u003E {\n      \u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.$nuxt.$loading.start()\n\n      setTimeout(\u003Cspan class=\"hljs-function\"\u003E\u003Cspan class=\"hljs-params\"\u003E()\u003C\u002Fspan\u003E =&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.$nuxt.$loading.finish(), \u003Cspan class=\"hljs-number\"\u003E500\u003C\u002Fspan\u003E)\n    })\n  }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch2 id=\"disable-the-progress-bar\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#disable-the-progress-bar\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EDisable the Progress Bar\u003C\u002Fh2\u003E\u003Cul\u003E\n\u003Cli\u003EType: \u003Ccode\u003EBoolean\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003EIf you don&#39;t want to display the progress bar between the routes, simply add \u003Ccode\u003Eloading: false\u003C\u002Fcode\u003E in your \u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003E file:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003Eloading\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-literal\"\u003Efalse\u003C\u002Fspan\u003E\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch2 id=\"customizing-the-progress-bar\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#customizing-the-progress-bar\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ECustomizing the Progress Bar\u003C\u002Fh2\u003E\u003Cul\u003E\n\u003Cli\u003EType: \u003Ccode\u003EObject\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003EAmong other properties, the color, size, duration and direction of the progress bar can be customized to suit your application&#39;s needs. This is done by updating the \u003Ccode\u003Eloading\u003C\u002Fcode\u003E property of the \u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003E with the corresponding properties.\u003C\u002Fp\u003E\n\u003Cp\u003EFor example, to set a blue progress bar with a height of 5px, we update the \u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003E to the following:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003Eloading\u003C\u002Fspan\u003E: {\n    \u003Cspan class=\"hljs-attr\"\u003Ecolor\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E'blue'\u003C\u002Fspan\u003E,\n    \u003Cspan class=\"hljs-attr\"\u003Eheight\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E'5px'\u003C\u002Fspan\u003E\n  }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EList of properties to customize the progress bar.\u003C\u002Fp\u003E\n\u003Ctable\u003E\n\u003Cthead\u003E\n\u003Ctr\u003E\n\u003Cth\u003EKey\u003C\u002Fth\u003E\n\u003Cth\u003EType\u003C\u002Fth\u003E\n\u003Cth\u003EDefault\u003C\u002Fth\u003E\n\u003Cth\u003EDescription\u003C\u002Fth\u003E\n\u003C\u002Ftr\u003E\n\u003C\u002Fthead\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003Ecolor\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003EString\u003C\u002Ftd\u003E\n\u003Ctd\u003E\u003Ccode\u003E&#39;black&#39;\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003ECSS color of the progress bar\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003EfailedColor\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003EString\u003C\u002Ftd\u003E\n\u003Ctd\u003E\u003Ccode\u003E&#39;red&#39;\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003ECSS color of the progress bar when an error appended while rendering the route (if \u003Ccode\u003Edata\u003C\u002Fcode\u003E or \u003Ccode\u003Efetch\u003C\u002Fcode\u003E sent back an error for example).\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003Eheight\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003EString\u003C\u002Ftd\u003E\n\u003Ctd\u003E\u003Ccode\u003E&#39;2px&#39;\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003EHeight of the progress bar (used in the \u003Ccode\u003Estyle\u003C\u002Fcode\u003E property of the progress bar)\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003Ethrottle\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003ENumber\u003C\u002Ftd\u003E\n\u003Ctd\u003E\u003Ccode\u003E200\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003EIn ms, wait for the specified time before displaying the progress bar. Useful for preventing the bar from flashing.\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003Eduration\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003ENumber\u003C\u002Ftd\u003E\n\u003Ctd\u003E\u003Ccode\u003E5000\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003EIn ms, the maximum duration of the progress bar, Nuxt.js assumes that the route will be rendered before 5 seconds.\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003Econtinuous\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003EBoolean\u003C\u002Ftd\u003E\n\u003Ctd\u003E\u003Ccode\u003Efalse\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003EKeep animating progress bar when loading takes longer than \u003Ccode\u003Eduration\u003C\u002Fcode\u003E.\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003Ecss\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003EBoolean\u003C\u002Ftd\u003E\n\u003Ctd\u003E\u003Ccode\u003Etrue\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003ESet to false to remove default progress bar styles (and add your own).\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003Ertl\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003EBoolean\u003C\u002Ftd\u003E\n\u003Ctd\u003E\u003Ccode\u003Efalse\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003ESet the direction of the progress bar from right to left.\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003C\u002Ftbody\u003E\u003C\u002Ftable\u003E\n\u003Ch2 id=\"internals-of-the-progress-bar\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#internals-of-the-progress-bar\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EInternals of the Progress Bar\u003C\u002Fh2\u003E\u003Cp\u003EUnfortunately, it is not possible for the Loading component to know in advance how long loading a new page will take. Therefore, it is not possible to accurately animate the progress bar to 100% of the loading time.\u003C\u002Fp\u003E\n\u003Cp\u003ENuxt&#39;s loading component partially solves this by letting you set the \u003Ccode\u003Eduration\u003C\u002Fcode\u003E, this should be set to a \u003Cem\u003Eguestimate\u003C\u002Fem\u003E of how long the loading process will take. Unless you use a custom loading component, the progress bar will always move from 0% to 100% in \u003Ccode\u003Eduration\u003C\u002Fcode\u003E time (regardless of actual progression). When the loading takes longer than \u003Ccode\u003Eduration\u003C\u002Fcode\u003E time, the progress bar will stay at 100% until the loading finishes.\u003C\u002Fp\u003E\n\u003Cp\u003EYou can change the default behaviour by setting \u003Ccode\u003Econtinuous\u003C\u002Fcode\u003E to true, then after reaching 100% the progress bar will start shrinking back to 0% again in \u003Ccode\u003Eduration\u003C\u002Fcode\u003E time. When the loading is still not finished after reaching 0% it will start growing from 0% to 100% again, this repeats until the loading finishes.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cem\u003EExample of a continuous progress bar:\u003C\u002Fem\u003E\u003C\u002Fp\u003E\n\u003Cimg src=\"\u002Fapi-continuous-loading.gif\" alt=\"continuous loading\"\u002F\u003E\n\n\n\u003Ch2 id=\"using-a-custom-loading-component\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#using-a-custom-loading-component\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EUsing a Custom Loading Component\u003C\u002Fh2\u003E\u003Cul\u003E\n\u003Cli\u003EType: \u003Ccode\u003EString\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003EYou can also create your own component that Nuxt.js will call instead of its default loading progress bar component. To do so, you need to give a path to your component in the \u003Ccode\u003Eloading\u003C\u002Fcode\u003E option. Then, your component will be called directly by Nuxt.js.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EYour component has to expose some of these methods:\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Ctable\u003E\n\u003Cthead\u003E\n\u003Ctr\u003E\n\u003Cth\u003EMethod\u003C\u002Fth\u003E\n\u003Cth\u003ERequired\u003C\u002Fth\u003E\n\u003Cth\u003EDescription\u003C\u002Fth\u003E\n\u003C\u002Ftr\u003E\n\u003C\u002Fthead\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003Estart()\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003ERequired\u003C\u002Ftd\u003E\n\u003Ctd\u003ECalled when a route changes, this is where you display your component.\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003Efinish()\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003ERequired\u003C\u002Ftd\u003E\n\u003Ctd\u003ECalled when a route is loaded (and data fetched), this is where you hide your component.\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003Efail(error)\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E\u003Cem\u003EOptional\u003C\u002Fem\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003ECalled when a route couldn&#39;t be loaded (failed to fetch data for example).\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003Eincrease(num)\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E\u003Cem\u003EOptional\u003C\u002Fem\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003ECalled during loading the route component, \u003Ccode\u003Enum\u003C\u002Fcode\u003E is an Integer &lt; 100.\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003C\u002Ftbody\u003E\u003C\u002Ftable\u003E\n\u003Cp\u003EWe can create our custom component in \u003Ccode\u003Ecomponents\u002Floading.vue\u003C\u002Fcode\u003E:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Elang\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"html\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"loading-page\"\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ev-if\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"loading\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003ELoading...\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"javascript\"\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003Edata\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-function\"\u003E\u003Cspan class=\"hljs-params\"\u003E()\u003C\u002Fspan\u003E =&gt;\u003C\u002Fspan\u003E ({\n    \u003Cspan class=\"hljs-attr\"\u003Eloading\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-literal\"\u003Efalse\u003C\u002Fspan\u003E\n  }),\n  \u003Cspan class=\"hljs-attr\"\u003Emethods\u003C\u002Fspan\u003E: {\n    start () {\n      \u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.loading = \u003Cspan class=\"hljs-literal\"\u003Etrue\u003C\u002Fspan\u003E\n    },\n    finish () {\n      \u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.loading = \u003Cspan class=\"hljs-literal\"\u003Efalse\u003C\u002Fspan\u003E\n    }\n  }\n}\n\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Estyle\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Escoped\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"css\"\u003E\n\u003Cspan class=\"hljs-selector-class\"\u003E.loading-page\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attribute\"\u003Eposition\u003C\u002Fspan\u003E: fixed;\n  \u003Cspan class=\"hljs-attribute\"\u003Etop\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E0\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003Eleft\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E0\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003Ewidth\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E100%\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003Eheight\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E100%\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003Ebackground\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Ergba\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-number\"\u003E255\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-number\"\u003E255\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-number\"\u003E255\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-number\"\u003E0.8\u003C\u002Fspan\u003E);\n  \u003Cspan class=\"hljs-attribute\"\u003Etext-align\u003C\u002Fspan\u003E: center;\n  \u003Cspan class=\"hljs-attribute\"\u003Epadding-top\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E200px\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003Efont-size\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E30px\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003Efont-family\u003C\u002Fspan\u003E: sans-serif;\n}\n\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Estyle\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EThen, we update our \u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003E to tell Nuxt.js to use our component:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003Eloading\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E'~\u002Fcomponents\u002Floading.vue'\u003C\u002Fspan\u003E\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E"},contributors:[]}],fetch:[],mutations:[]});