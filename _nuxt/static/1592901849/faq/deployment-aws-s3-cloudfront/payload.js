__NUXT_JSONP__("/faq/deployment-aws-s3-cloudfront", {data:[{},{path:"\u002Fvi\u002Ffaq\u002Fdeployment-aws-s3-cloudfront",section:"faq",page:{attrs:{title:"How to Deploy on AWS w\u002F S3 and Cloudfront?",description:"Static Hosting on AWS with S3 and Cloudfront"},body:"\u003Cp\u003EAWS stands for Amazon Web Services.\u003Cbr\u003ES3 is their static storage which can be configured for Static Site Hosting.\nCloudfront is their CDN (content delivery network)\u003C\u002Fp\u003E\n\u003Cp\u003EHosting a \u003Cstrong\u003Estatic generated\u003C\u002Fstrong\u003E Nuxt app on AWS w\u002F S3 + Cloudfront is powerful and cheap.\u003C\u002Fp\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003EAWS is a death by 1000 paper cuts.  If we missed a step, please submit a PR to update this document.\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Ch2 id=\"overview\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#overview\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EOverview\u003C\u002Fh2\u003E\u003Cp\u003EWe&#39;ll host super cheap with some AWS services.  Briefly:\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003ES3 \u003Cul\u003E\n\u003Cli\u003Ecloud data &quot;bucket&quot; for our website files\u003C\u002Fli\u003E\n\u003Cli\u003Ecan be configured to host static websites\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003ECloudFront \u003Cul\u003E\n\u003Cli\u003Ea CDN (content delivery network)\u003C\u002Fli\u003E\n\u003Cli\u003Eoffers free HTTPS certs\u003C\u002Fli\u003E\n\u003Cli\u003EMakes your site load faster\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003EWe&#39;ll push the site like this:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs \"\u003ENuxt Generate -\u003E Local folder -\u003E AWS S3 Bucket -\u003E AWS Cloudfront CDN -\u003E Browser\n  [      nuxt generate       ]    [         gulp deploy          ]\n  [                         deploy.sh                            ]\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EFirst, we&#39;ll generate the site with \u003Ccode\u003Enuxt generate\u003C\u002Fcode\u003E.\nThen, we&#39;ll use \u003Ca href=\"https:\u002F\u002Fgulpjs.com\u002F\"\u003EGulp\u003C\u002Fa\u003E to publish the files to a S3 bucket and invalidate a CloudFront CDN.\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fwww.npmjs.com\u002Fpackage\u002Fgulp\"\u003Egulp\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fwww.npmjs.com\u002Fpackage\u002Fgulp-awspublish\"\u003Egulp-awspublish\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fwww.npmjs.com\u002Fpackage\u002Fgulp-cloudfront-invalidate-aws-publish\"\u003Egulp-cloudfront-invalidate-aws-publish\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fwww.npmjs.com\u002Fpackage\u002Fconcurrent-transform\"\u003Econcurrent-transform\u003C\u002Fa\u003E (for parallel uploads)\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003EOur deploy script needs these environment variables set:\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003EAWS_BUCKET_NAME=&quot;example.com&quot; \u003C\u002Fli\u003E\n\u003Cli\u003EAWS_CLOUDFRONT=&quot;UPPERCASE&quot;\u003C\u002Fli\u003E\n\u003Cli\u003EAWS_ACCESS_KEY_ID=&quot;key&quot; \u003C\u002Fli\u003E\n\u003Cli\u003EAWS_SECRET_ACCESS_KEY=&quot;secret&quot; \u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003EWe&#39;ll have these files: \u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs \"\u003Edeploy.sh       -  run `nuxt generate` and `gulp deploy`\ngulpfile.js     -  `gulp deploy` code to push files to S3 and invalidate CloudFront\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch2 id=\"setting-it-up\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#setting-it-up\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ESetting it up\u003C\u002Fh2\u003E\u003Col\u003E\n\u003Cli\u003EMake a S3 bucket and configure it for static site hosting\u003C\u002Fli\u003E\n\u003Cli\u003ECreate a CloudFront distribution\u003C\u002Fli\u003E\n\u003Cli\u003EConfigure security access\u003C\u002Fli\u003E\n\u003Cli\u003ESetup build script in your project\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Ch3 id=\"aws-setup-your-s3-bucket-and-cloudfront-distribution\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#aws-setup-your-s3-bucket-and-cloudfront-distribution\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EAWS: Setup your S3 bucket and CloudFront Distribution\u003C\u002Fh3\u003E\u003Cp\u003EPlease follow this \u003Ca href=\"https:\u002F\u002Freidweb.com\u002F2017\u002F02\u002F06\u002Fcloudfront-cdn-tutorial\u002F\"\u003Etutorial to setup your S3 and CloudFront\u003C\u002Fa\u003E for step one and two.\u003C\u002Fp\u003E\n\u003Cp\u003EYou should now have this data:\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003EAWS_BUCKET_NAME=&quot;example.com&quot; \u003C\u002Fli\u003E\n\u003Cli\u003EAWS_CLOUDFRONT=&quot;UPPERCASE&quot;\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Ch3 id=\"aws-configure-security-access\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#aws-configure-security-access\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EAWS: Configure security access\u003C\u002Fh3\u003E\u003Cp\u003EFor step 3, we need to create a user that can:\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003EUpdate the bucket contents\u003C\u002Fli\u003E\n\u003Cli\u003EInvalidate the CloudFront distribution (propagates changes to users faster)\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fdocs.aws.amazon.com\u002FIAM\u002Flatest\u002FUserGuide\u002Fid_users_create.html\"\u003ECreate a programmatic user with this policy\u003C\u002Fa\u003E:\u003C\u002Fp\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003ENOTE: replace 2x \u003Ccode\u003Eexample.com\u003C\u002Fcode\u003E with your S3 bucket name below.  This policy allows pushing to the specified bucket, and invalidating any CloudFront distribution.\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs json\"\u003E{\n    \u003Cspan class=\"hljs-attr\"\u003E\"Version\"\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E\"2012-10-17\"\u003C\u002Fspan\u003E,\n    \u003Cspan class=\"hljs-attr\"\u003E\"Statement\"\u003C\u002Fspan\u003E: [ {\n            \u003Cspan class=\"hljs-attr\"\u003E\"Effect\"\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E\"Allow\"\u003C\u002Fspan\u003E,\n            \u003Cspan class=\"hljs-attr\"\u003E\"Action\"\u003C\u002Fspan\u003E: [ \u003Cspan class=\"hljs-string\"\u003E\"s3:ListBucket\"\u003C\u002Fspan\u003E ],\n            \u003Cspan class=\"hljs-attr\"\u003E\"Resource\"\u003C\u002Fspan\u003E: [\n                \u003Cspan class=\"hljs-string\"\u003E\"arn:aws:s3:::example.com\"\u003C\u002Fspan\u003E\n            ]\n        }, {\n            \u003Cspan class=\"hljs-attr\"\u003E\"Effect\"\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E\"Allow\"\u003C\u002Fspan\u003E,\n            \u003Cspan class=\"hljs-attr\"\u003E\"Action\"\u003C\u002Fspan\u003E: [\n                \u003Cspan class=\"hljs-string\"\u003E\"s3:PutObject\"\u003C\u002Fspan\u003E,\n                \u003Cspan class=\"hljs-string\"\u003E\"s3:PutObjectAcl\"\u003C\u002Fspan\u003E,\n                \u003Cspan class=\"hljs-string\"\u003E\"s3:GetObject\"\u003C\u002Fspan\u003E,\n                \u003Cspan class=\"hljs-string\"\u003E\"s3:GetObjectAcl\"\u003C\u002Fspan\u003E,\n                \u003Cspan class=\"hljs-string\"\u003E\"s3:DeleteObject\"\u003C\u002Fspan\u003E,\n                \u003Cspan class=\"hljs-string\"\u003E\"s3:ListMultipartUploadParts\"\u003C\u002Fspan\u003E,\n                \u003Cspan class=\"hljs-string\"\u003E\"s3:AbortMultipartUpload\"\u003C\u002Fspan\u003E\n            ],\n            \u003Cspan class=\"hljs-attr\"\u003E\"Resource\"\u003C\u002Fspan\u003E: [\n                \u003Cspan class=\"hljs-string\"\u003E\"arn:aws:s3:::example.com\u002F*\"\u003C\u002Fspan\u003E\n            ]\n        }, {\n            \u003Cspan class=\"hljs-attr\"\u003E\"Effect\"\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E\"Allow\"\u003C\u002Fspan\u003E,\n            \u003Cspan class=\"hljs-attr\"\u003E\"Action\"\u003C\u002Fspan\u003E: [\n                \u003Cspan class=\"hljs-string\"\u003E\"cloudfront:CreateInvalidation\"\u003C\u002Fspan\u003E,\n                \u003Cspan class=\"hljs-string\"\u003E\"cloudfront:GetInvalidation\"\u003C\u002Fspan\u003E,\n                \u003Cspan class=\"hljs-string\"\u003E\"cloudfront:ListInvalidations\"\u003C\u002Fspan\u003E,\n                \u003Cspan class=\"hljs-string\"\u003E\"cloudfront:UnknownOperation\"\u003C\u002Fspan\u003E\n            ],\n            \u003Cspan class=\"hljs-attr\"\u003E\"Resource\"\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E\"*\"\u003C\u002Fspan\u003E\n        }\n    ]\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EThen \u003Ca href=\"https:\u002F\u002Fdocs.aws.amazon.com\u002FIAM\u002Flatest\u002FUserGuide\u002Fid_credentials_access-keys.html\"\u003Eget an access key and secret\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\n\u003Cp\u003EYou should now have this data:\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003EAWS_ACCESS_KEY_ID=&quot;key&quot; \u003C\u002Fli\u003E\n\u003Cli\u003EAWS_SECRET_ACCESS_KEY=&quot;secret&quot; \u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Ch3 id=\"laptop-setup-your-project-39-s-build-script\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#laptop-setup-your-project-39-s-build-script\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ELaptop: Setup your project&#39;s build script\u003C\u002Fh3\u003E\u003Cp\u003E4.1) Create a \u003Ccode\u003Edeploy.sh\u003C\u002Fcode\u003E script.  See optional \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fcreationix\u002Fnvm\"\u003Envm (node version manager)\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs bash\"\u003E\u003Cspan class=\"hljs-meta\"\u003E#!\u002Fbin\u002Fbash\n\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-built_in\"\u003Eexport\u003C\u002Fspan\u003E AWS_ACCESS_KEY_ID=\u003Cspan class=\"hljs-string\"\u003E\"key\"\u003C\u002Fspan\u003E \n\u003Cspan class=\"hljs-built_in\"\u003Eexport\u003C\u002Fspan\u003E AWS_SECRET_ACCESS_KEY=\u003Cspan class=\"hljs-string\"\u003E\"secret\"\u003C\u002Fspan\u003E \n\u003Cspan class=\"hljs-built_in\"\u003Eexport\u003C\u002Fspan\u003E AWS_BUCKET_NAME=\u003Cspan class=\"hljs-string\"\u003E\"example.com\"\u003C\u002Fspan\u003E \n\u003Cspan class=\"hljs-built_in\"\u003Eexport\u003C\u002Fspan\u003E AWS_CLOUDFRONT=\u003Cspan class=\"hljs-string\"\u003E\"UPPERCASE\"\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-comment\"\u003E# Load nvm (node version manager), install node (version in .nvmrc), and npm install packages\u003C\u002Fspan\u003E\n[ -s \u003Cspan class=\"hljs-string\"\u003E\"\u003Cspan class=\"hljs-variable\"\u003E$HOME\u003C\u002Fspan\u003E\u002F.nvm\u002Fnvm.sh\"\u003C\u002Fspan\u003E ] &amp;&amp; \u003Cspan class=\"hljs-built_in\"\u003Esource\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E\"\u003Cspan class=\"hljs-variable\"\u003E$HOME\u003C\u002Fspan\u003E\u002F.nvm\u002Fnvm.sh\"\u003C\u002Fspan\u003E &amp;&amp; nvm use\n\u003Cspan class=\"hljs-comment\"\u003E# Npm install if not already.\u003C\u002Fspan\u003E\n[ ! -d \u003Cspan class=\"hljs-string\"\u003E\"node_modules\"\u003C\u002Fspan\u003E ] &amp;&amp; npm install\n\nnpm run generate\ngulp deploy\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E4.2) Make \u003Ccode\u003Edeploy.sh\u003C\u002Fcode\u003E runnable and DON&#39;T CHECK INTO GIT (deploy.sh has secrets in it)\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs bash\"\u003Echmod +x deploy.sh\n\u003Cspan class=\"hljs-built_in\"\u003Eecho\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E\"\n# Don't commit build files\nnode_modules\ndist\n.nuxt\n.awspublish\ndeploy.sh\n\"\u003C\u002Fspan\u003E &gt;&gt; .gitignore\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E4.3) Add Gulp to your project and to your command line \u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs bash\"\u003Enpm install --save-dev gulp gulp-awspublish gulp-cloudfront-invalidate-aws-publish concurrent-transform\nnpm install -g gulp\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E4.4) Create a \u003Ccode\u003Egulpfile.js\u003C\u002Fcode\u003E with the build script\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs javascript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E gulp = \u003Cspan class=\"hljs-built_in\"\u003Erequire\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E'gulp'\u003C\u002Fspan\u003E)\n\u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E awspublish = \u003Cspan class=\"hljs-built_in\"\u003Erequire\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E'gulp-awspublish'\u003C\u002Fspan\u003E)\n\u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E cloudfront = \u003Cspan class=\"hljs-built_in\"\u003Erequire\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E'gulp-cloudfront-invalidate-aws-publish'\u003C\u002Fspan\u003E)\n\u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E parallelize = \u003Cspan class=\"hljs-built_in\"\u003Erequire\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E'concurrent-transform'\u003C\u002Fspan\u003E)\n\n\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F https:\u002F\u002Fdocs.aws.amazon.com\u002Fcli\u002Flatest\u002Fuserguide\u002Fcli-environment.html\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E config = {\n\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Required\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-attr\"\u003Eparams\u003C\u002Fspan\u003E: {\n    \u003Cspan class=\"hljs-attr\"\u003EBucket\u003C\u002Fspan\u003E: process.env.AWS_BUCKET_NAME\n  },\n  \u003Cspan class=\"hljs-attr\"\u003Ecredentials\u003C\u002Fspan\u003E: {\n    \u003Cspan class=\"hljs-attr\"\u003EaccessKeyId\u003C\u002Fspan\u003E: process.env.AWS_ACCESS_KEY_ID,\n    \u003Cspan class=\"hljs-attr\"\u003EsecretAccessKey\u003C\u002Fspan\u003E: process.env.AWS_SECRET_ACCESS_KEY,\n    \u003Cspan class=\"hljs-attr\"\u003EsignatureVersion\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E'v3'\u003C\u002Fspan\u003E\n  },\n\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Optional\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-attr\"\u003EdeleteOldVersions\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-literal\"\u003Efalse\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F NOT FOR PRODUCTION\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-attr\"\u003Edistribution\u003C\u002Fspan\u003E: process.env.AWS_CLOUDFRONT, \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F CloudFront distribution ID\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-attr\"\u003Eregion\u003C\u002Fspan\u003E: process.env.AWS_DEFAULT_REGION,\n  \u003Cspan class=\"hljs-attr\"\u003Eheaders\u003C\u002Fspan\u003E: { \u003Cspan class=\"hljs-comment\"\u003E\u002F* 'Cache-Control': 'max-age=315360000, no-transform, public', *\u002F\u003C\u002Fspan\u003E },\n\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Sensible Defaults - gitignore these Files and Dirs\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-attr\"\u003EdistDir\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E'dist'\u003C\u002Fspan\u003E,\n  \u003Cspan class=\"hljs-attr\"\u003EindexRootPath\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-literal\"\u003Etrue\u003C\u002Fspan\u003E,\n  \u003Cspan class=\"hljs-attr\"\u003EcacheFileName\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E'.awspublish'\u003C\u002Fspan\u003E,\n  \u003Cspan class=\"hljs-attr\"\u003EconcurrentUploads\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E10\u003C\u002Fspan\u003E,\n  \u003Cspan class=\"hljs-attr\"\u003Ewait\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-literal\"\u003Etrue\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F wait for CloudFront invalidation to complete (about 30-60 seconds)\u003C\u002Fspan\u003E\n}\n\ngulp.task(\u003Cspan class=\"hljs-string\"\u003E'deploy'\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-function\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-params\"\u003E\u003C\u002Fspan\u003E) \u003C\u002Fspan\u003E{\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F create a new publisher using S3 options\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F http:\u002F\u002Fdocs.aws.amazon.com\u002FAWSJavaScriptSDK\u002Flatest\u002FAWS\u002FS3.html#constructor-property\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E publisher = awspublish.create(config)\n\n  \u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E g = gulp.src(\u003Cspan class=\"hljs-string\"\u003E'.\u002F'\u003C\u002Fspan\u003E + config.distDir + \u003Cspan class=\"hljs-string\"\u003E'\u002F**'\u003C\u002Fspan\u003E)\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F publisher will add Content-Length, Content-Type and headers specified above\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F If not specified it will set x-amz-acl to public-read by default\u003C\u002Fspan\u003E\n  g = g.pipe(parallelize(publisher.publish(config.headers), config.concurrentUploads))\n\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Invalidate CDN\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-keyword\"\u003Eif\u003C\u002Fspan\u003E (config.distribution) {\n    \u003Cspan class=\"hljs-built_in\"\u003Econsole\u003C\u002Fspan\u003E.log(\u003Cspan class=\"hljs-string\"\u003E'Configured with CloudFront distribution'\u003C\u002Fspan\u003E)\n    g = g.pipe(cloudfront(config))\n  } \u003Cspan class=\"hljs-keyword\"\u003Eelse\u003C\u002Fspan\u003E {\n    \u003Cspan class=\"hljs-built_in\"\u003Econsole\u003C\u002Fspan\u003E.log(\u003Cspan class=\"hljs-string\"\u003E'No CloudFront distribution configured - skipping CDN invalidation'\u003C\u002Fspan\u003E)\n  }\n\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Delete removed files\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-keyword\"\u003Eif\u003C\u002Fspan\u003E (config.deleteOldVersions) { g = g.pipe(publisher.sync()) }\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F create a cache file to speed up consecutive uploads\u003C\u002Fspan\u003E\n  g = g.pipe(publisher.cache())\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F print upload updates to console\u003C\u002Fspan\u003E\n  g = g.pipe(awspublish.reporter())\n  \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E g\n})\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E4.5) Deploy and debug\u003C\u002Fp\u003E\n\u003Cp\u003ERun it:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs bash\"\u003E.\u002Fdeploy.sh\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EYou should get an output similar to this:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs bash\"\u003E$ .\u002Fdeploy.sh                                                                                                                 \n\nFound \u003Cspan class=\"hljs-string\"\u003E'\u002Fhome\u002Fmichael\u002Fscm\u002Fexample.com\u002Fwww\u002F.nvmrc'\u003C\u002Fspan\u003E with version &lt;8&gt;\nNow using node v8.11.2 (npm v5.6.0)\n\n&gt; example.com@1.0.0 generate \u002Fhome\u002Fmichael\u002Fscm\u002Fexample.com\u002Fwww\n&gt; nuxt generate\n\n  nuxt:generate Generating... +0ms\n  nuxt:build App root: \u002Fhome\u002Fmichael\u002Fscm\u002Fexample.com\u002Fwww +0ms\n  nuxt:build Generating \u002Fhome\u002Fmichael\u002Fscm\u002Fexample.com\u002Fwww\u002F.nuxt files... +0ms\n  nuxt:build Generating files... +36ms\n  nuxt:build Generating routes... +10ms\n  nuxt:build Building files... +24ms\n  ████████████████████ 100% \n\nBuild completed \u003Cspan class=\"hljs-keyword\"\u003Ein\u003C\u002Fspan\u003E 7.009s\n\n\n\n DONE  Compiled successfully \u003Cspan class=\"hljs-keyword\"\u003Ein\u003C\u002Fspan\u003E 7013ms                                                                                                                                     21:25:22\n\nHash: 421d017116d2d95dd1e3\nVersion: webpack 3.12.0\nTime: 7013ms\n                                   Asset     Size  Chunks             Chunk Names\n     pages\u002Findex.ef923f795c1cecc9a444.js  10.6 kB       0  [emitted]  pages\u002Findex\n layouts\u002Fdefault.87a49937c330bdd31953.js  2.69 kB       1  [emitted]  layouts\u002Fdefault\npages\u002Four-values.f60c731d5c3081769fd9.js  3.03 kB       2  [emitted]  pages\u002Four-values\n   pages\u002Fjoin-us.835077c4e6b55ed1bba4.js   1.3 kB       3  [emitted]  pages\u002Fjoin-us\n       pages\u002Fhow.75f8cb5bc24e38bca3b3.js  2.59 kB       4  [emitted]  pages\u002Fhow\n             app.6dbffe6ac4383bd30a92.js   202 kB       5  [emitted]  app\n          vendor.134043c361c9ad199c6d.js  6.31 kB       6  [emitted]  vendor\n        manifest.421d017116d2d95dd1e3.js  1.59 kB       7  [emitted]  manifest\n + 3 hidden assets\nHash: 9fd206f4b4e571e9571f\nVersion: webpack 3.12.0\nTime: 2239ms\n             Asset    Size  Chunks             Chunk Names\nserver-bundle.json  306 kB          [emitted]  \n  nuxt: Call generate:distRemoved hooks (1) +0ms\n  nuxt:generate Destination folder cleaned +10s\n  nuxt: Call generate:distCopied hooks (1) +8ms\n  nuxt:generate Static &amp; build files copied +7ms\n  nuxt:render Rendering url \u002Four-values +0ms\n  nuxt:render Rendering url \u002Fhow +67ms\n  nuxt:render Rendering url \u002Fjoin-us +1ms\n  nuxt:render Rendering url \u002F +0ms\n  nuxt: Call generate:page hooks (1) +913ms\n  nuxt: Call generate:page hooks (1) +205ms\n  nuxt: Call generate:page hooks (1) +329ms\n  nuxt: Call generate:page hooks (1) +361ms\n  nuxt:generate Generate file: \u002Four-values\u002Findex.html +2s\n  nuxt:generate Generate file: \u002Fhow\u002Findex.html +0ms\n  nuxt:generate Generate file: \u002Fjoin-us\u002Findex.html +0ms\n  nuxt:generate Generate file: \u002Findex.html +0ms\n  nuxt:render Rendering url \u002F +2s\n  nuxt: Call generate:\u003Cspan class=\"hljs-keyword\"\u003Edone\u003C\u002Fspan\u003E hooks (1) +4ms\n  nuxt:generate HTML Files generated \u003Cspan class=\"hljs-keyword\"\u003Ein\u003C\u002Fspan\u003E 11.8s +5ms\n  nuxt:generate Generate \u003Cspan class=\"hljs-keyword\"\u003Edone\u003C\u002Fspan\u003E +0ms\n[21:25:27] Using gulpfile ~\u002Fscm\u002Fexample.com\u002Fwww\u002Fgulpfile.js\n[21:25:27] Starting \u003Cspan class=\"hljs-string\"\u003E'deploy'\u003C\u002Fspan\u003E...\nConfigured with CloudFront distribution\n[21:25:27] [cache]  README.md\n[21:25:27] [cache]  android-chrome-192x192.png\n[21:25:27] [cache]  android-chrome-512x512.png\n[21:25:27] [cache]  apple-touch-icon.png\n[21:25:27] [cache]  browserconfig.xml\n[21:25:27] [cache]  favicon-16x16.png\n[21:25:27] [cache]  favicon-32x32.png\n[21:25:27] [cache]  favicon.ico\n[21:25:27] [cache]  favicon.svg\n[21:25:27] [cache]  logo-branches.svg\n[21:25:27] [cache]  logo-small.svg\n[21:25:27] [cache]  logo.svg\n[21:25:27] [cache]  mstile-150x150.png\n[21:25:27] [cache]  og-image.jpg\n[21:25:27] [cache]  safari-pinned-tab.svg\n[21:25:27] [cache]  site.webmanifest\n[21:25:28] [create] _nuxt\u002Fmanifest.421d017116d2d95dd1e3.js\n[21:25:29] [update] 200.html\n[21:25:30] [create] videos\u002Fflag.jpg\n[21:25:30] [create] _nuxt\u002Fvendor.134043c361c9ad199c6d.js\n[21:25:34] [create] videos\u002Fflag.mp4\n[21:25:34] [cache]  _nuxt\u002Fpages\u002Fhow.75f8cb5bc24e38bca3b3.js\n[21:25:34] [cache]  _nuxt\u002Fpages\u002Fjoin-us.835077c4e6b55ed1bba4.js\n[21:25:34] [cache]  _nuxt\u002Fpages\u002Four-values.f60c731d5c3081769fd9.js\n[21:25:36] [update] our-values\u002Findex.html\n[21:25:36] [create] _nuxt\u002Flayouts\u002Fdefault.87a49937c330bdd31953.js\n[21:25:36] [create] _nuxt\u002Fapp.6dbffe6ac4383bd30a92.js\n[21:25:37] [create] _nuxt\u002Fpages\u002Findex.ef923f795c1cecc9a444.js\n[21:25:38] [update] join-us\u002Findex.html\n[21:25:38] [update] how\u002Findex.html\n[21:25:43] [create] videos\u002Fflag.webm\n[21:25:43] [update] index.html\n[21:25:43] CloudFront invalidation created: I16NXXXXX4JDOA\n[21:26:09] Finished \u003Cspan class=\"hljs-string\"\u003E'deploy'\u003C\u002Fspan\u003E after 42 s\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003ENote that the \u003Ccode\u003ECloudFront invalidation created: XXXX\u003C\u002Fcode\u003E is the only output from the CloudFront invalidation npm package.  If you don&#39;t see that, it&#39;s not working.  \u003C\u002Fp\u003E\n"},contributors:[]}],fetch:[],mutations:[]});