__NUXT_JSONP__("/faq/deployment-azure-portal", {data:[{},{path:"\u002Fvi\u002Ffaq\u002Fdeployment-azure-portal",section:"faq",page:{attrs:{title:"How to deploy on Azure Portal?",description:"How to deploy a Nuxt.js application on Azure Portal?"},body:"\u003Ch2 id=\"requirements\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#requirements\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ERequirements\u003C\u002Fh2\u003E\u003Cul\u003E\n\u003Cli\u003EIt is required that you select a backend when setting up the project. Even if you don&#39;t need it, or else the site won&#39;t start up.\u003C\u002Fli\u003E\n\u003Cli\u003EThe server is running Node 8 or greater\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Ch2 id=\"what-if-i-already-have-a-project-without-an-backend-\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#what-if-i-already-have-a-project-without-an-backend-\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EWhat if I already have a project without an backend?\u003C\u002Fh2\u003E\u003Cp\u003ENo worries. It is easy to add an express server to an existing project.\u003C\u002Fp\u003E\n\u003Cp\u003ECreate a new folder called \u003Ccode\u003Eserver\u003C\u002Fcode\u003E in the root of the project. Then create an \u003Ccode\u003Eindex.js\u003C\u002Fcode\u003E file inside the \u003Ccode\u003Eserver\u003C\u002Fcode\u003E folder and paste the following inside the \u003Ccode\u003Eindex.js\u003C\u002Fcode\u003E:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs \"\u003Econst express = require('express')\nconst consola = require('consola')\nconst { Nuxt, Builder } = require('nuxt')\nconst app = express()\n\n\u002F\u002F Import and Set Nuxt.js options\nconst config = require('..\u002Fnuxt.config.js')\nconfig.dev = process.env.NODE_ENV !== 'production'\n\nasync function start () {\n  \u002F\u002F Init Nuxt.js\n  const nuxt = new Nuxt(config)\n\n  const { host, port } = nuxt.options.server\n\n  \u002F\u002F Build only in dev mode\n  if (config.dev) {\n    const builder = new Builder(nuxt)\n    await builder.build()\n  } else {\n    await nuxt.ready()\n  }\n\n  \u002F\u002F Give nuxt middleware to express\n  app.use(nuxt.render)\n\n  \u002F\u002F Listen the server\n  app.listen(port, host)\n  consola.ready({\n    message: `Server listening on http:\u002F\u002F${host}:${port}`,\n    badge: true\n  })\n}\nstart()\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EThen edit your nuxt.config.js:\u003C\u002Fp\u003E\n\u003Cp\u003EBefore:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs \"\u003Eimport pkg from '.\u002Fpackage'\n\nexport default {\n... config\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EAfter: \u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs \"\u003Emodule.exports = {\n... config\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003Cstrong\u003ERemember to remove the references to the pkg object inside the config.\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp\u003EThats it!\u003C\u002Fp\u003E\n\u003Ch2 id=\"how-to-set-node-version-on-web-app-in-devops\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#how-to-set-node-version-on-web-app-in-devops\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EHow to set Node version on Web App in DevOps\u003C\u002Fh2\u003E\u003Cp\u003EYou can set the Node version on the server, via the App setting inside the &quot;Deploy Azure Web Service&quot; task in the release pipeline\u003C\u002Fp\u003E\n\u003Cp\u003EAdd this to the App settings field under &quot;Application and Configuration Settings&quot;\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs \"\u003E-WEBSITE_NODE_DEFAULT_VERSION 10.16.3\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EIt&#39;s recommended to use the LTS version.\u003C\u002Fp\u003E\n\u003Ch2 id=\"artifacts\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#artifacts\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EArtifacts\u003C\u002Fh2\u003E\u003Cp\u003EIf you are using Azure DevOps and let the build pipeline do its work you and want to store artifacts. Files\nwhich are prefixed with a \u003Ccode\u003E.\u003C\u002Fcode\u003E must be moved to the artifact folder explicitly. Then you can create an Artifact Archive and \ndownload it afterwards in your Release Deployment. \u003C\u002Fp\u003E\n\u003Ch2 id=\"running-the-webserver\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#running-the-webserver\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ERunning the webserver\u003C\u002Fh2\u003E\u003Cp\u003EFor Azure Portal you will need a \u003Ccode\u003Eweb.config\u003C\u002Fcode\u003E file. If not supplied, it will create one itself. This one \u003Cstrong\u003Ewon&#39;t work for Nuxt\u003C\u002Fstrong\u003E though.\nAdd a web.config file to your repository. For the latest version of \u003Ccode\u003ENuxt\u003C\u002Fcode\u003E the server file is located at \u003Ccode\u003Eserver\u002Findex.js\u003C\u002Fcode\u003E. \nIn the web.config you don&#39;t specify the exact path \u003Ccode\u003Eserver\u002Findex.js\u003C\u002Fcode\u003E but just \u003Ccode\u003Eserver\u003C\u002Fcode\u003E. See the example web.config below. If you don&#39;t do\nthis the logs will tell you that Vue cannot find any routes.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs xml\"\u003E\u003Cspan class=\"hljs-meta\"\u003E&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-comment\"\u003E&lt;!--\n     This configuration file is required if iisnode is used to run node processes behind\n     IIS or IIS Express.  For more information, visit:\n\n     https:\u002F\u002Fgithub.com\u002Ftjanczuk\u002Fiisnode\u002Fblob\u002Fmaster\u002Fsrc\u002Fsamples\u002Fconfiguration\u002Fweb.config\n--&gt;\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Econfiguration\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Esystem.webServer\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-comment\"\u003E&lt;!-- Visit https:\u002F\u002Fazure.microsoft.com\u002Fen-us\u002Fblog\u002Fintroduction-to-websockets-on-windows-azure-web-sites\u002F for more information on WebSocket support --&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003EwebSocket\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eenabled\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"false\"\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ehandlers\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-comment\"\u003E&lt;!-- Indicates that the server.js file is a node.js site to be handled by the iisnode module --&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eadd\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ename\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"iisnode\"\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Epath\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"server\"\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Everb\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"*\"\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Emodules\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"iisnode\"\u003C\u002Fspan\u003E\u002F&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ehandlers\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Erewrite\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Erules\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-comment\"\u003E&lt;!-- Do not interfere with requests for node-inspector debugging --&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Erule\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ename\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"NodeInspector\"\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003EpatternSyntax\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"ECMAScript\"\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003EstopProcessing\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"true\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ematch\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eurl\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"^server\\\u002Fdebug[\\\u002F]?\"\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Erule\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\n        \u003Cspan class=\"hljs-comment\"\u003E&lt;!-- First we consider whether the incoming URL matches a physical file in the \u002Fpublic folder --&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Erule\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ename\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"StaticContent\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eaction\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Etype\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"Rewrite\"\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eurl\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"public{REQUEST_URI}\"\u003C\u002Fspan\u003E\u002F&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Erule\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\n        \u003Cspan class=\"hljs-comment\"\u003E&lt;!-- All other URLs are mapped to the node.js site entry point --&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Erule\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ename\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"DynamicContent\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Econditions\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n            \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eadd\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Einput\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"{REQUEST_FILENAME}\"\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003EmatchType\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"IsFile\"\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Enegate\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"True\"\u003C\u002Fspan\u003E\u002F&gt;\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Econditions\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eaction\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Etype\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"Rewrite\"\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eurl\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"server\"\u003C\u002Fspan\u003E\u002F&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Erule\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Erules\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Erewrite\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"hljs-comment\"\u003E&lt;!-- 'bin' directory has no special meaning in node.js and apps can be placed in it --&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Esecurity\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003ErequestFiltering\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003EhiddenSegments\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eremove\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Esegment\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"bin\"\u003C\u002Fspan\u003E\u002F&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003EhiddenSegments\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003ErequestFiltering\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Esecurity\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"hljs-comment\"\u003E&lt;!-- Make sure error responses are left untouched --&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003EhttpErrors\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003EexistingResponse\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"PassThrough\"\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"hljs-comment\"\u003E&lt;!--\n      You can control how Node is hosted within IIS using the following options:\n        * watchedFiles: semi-colon separated list of files that will be watched for changes to restart the server\n        * node_env: will be propagated to node as NODE_ENV environment variable\n        * debuggingEnabled - controls whether the built-in debugger is enabled\n\n      See https:\u002F\u002Fgithub.com\u002Ftjanczuk\u002Fiisnode\u002Fblob\u002Fmaster\u002Fsrc\u002Fsamples\u002Fconfiguration\u002Fweb.config for a full list of options\n    --&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-comment\"\u003E&lt;!--&lt;iisnode watchedFiles=\"web.config;*.js\"\u002F&gt;--&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Esystem.webServer\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Econfiguration\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E"},contributors:[]}],fetch:[],mutations:[]});