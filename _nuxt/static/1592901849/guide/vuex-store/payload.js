__NUXT_JSONP__("/guide/vuex-store", {data:[{},{path:"\u002Fvi\u002Fguide\u002Fvuex-store",section:"guide",page:{attrs:{title:"Vuex Store",description:"Using a store to manage the state is important for every big application. That's why Nuxt.js implements Vuex in its core."},body:"\u003Cblockquote\u003E\n\u003Cp\u003EUsing a store to manage the state is important for every big application. That&#39;s why Nuxt.js implements \u003Ca href=\"https:\u002F\u002Fvuex.vuejs.org\u002Fen\u002F\"\u003EVuex\u003C\u002Fa\u003E in its core.\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cdiv class=\"Promo__Video\"\u003E\n  \u003Ca href=\"https:\u002F\u002Fvueschool.io\u002Flessons\u002Futilising-the-vuex-store-nuxtjs?friend=nuxt\" target=\"_blank\"\u003E\n    \u003Cp class=\"Promo__Video__Icon\"\u003E\n      Watch a free lesson about \u003Cstrong\u003ENuxt.js and Vuex\u003C\u002Fstrong\u003E on Vue School \n    \u003C\u002Fp\u003E\n  \u003C\u002Fa\u003E\n\u003C\u002Fdiv\u003E\n\n\u003Ch2 id=\"activate-the-store\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#activate-the-store\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EActivate the Store\u003C\u002Fh2\u003E\u003Cp\u003ENuxt.js will look for the \u003Ccode\u003Estore\u003C\u002Fcode\u003E directory, if it exists, it will:\u003C\u002Fp\u003E\n\u003Col\u003E\n\u003Cli\u003EImport Vuex,\u003C\u002Fli\u003E\n\u003Cli\u003EAdd the \u003Ccode\u003Estore\u003C\u002Fcode\u003E option to the root Vue instance.\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Cp\u003ENuxt.js lets you decide between \u003Cstrong\u003E2 store modes\u003C\u002Fstrong\u003E. You can choose the one you prefer:\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E\u003Cstrong\u003EModules:\u003C\u002Fstrong\u003E every \u003Ccode\u003E.js\u003C\u002Fcode\u003E file inside the \u003Ccode\u003Estore\u003C\u002Fcode\u003E directory is transformed as a \u003Ca href=\"http:\u002F\u002Fvuex.vuejs.org\u002Fen\u002Fmodules.html\"\u003Enamespaced module\u003C\u002Fa\u003E (\u003Ccode\u003Eindex\u003C\u002Fcode\u003E being the root module).\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cstrong\u003EClassic (\u003Cstrong\u003Edeprecated\u003C\u002Fstrong\u003E):\u003C\u002Fstrong\u003E \u003Ccode\u003Estore\u002Findex.js\u003C\u002Fcode\u003E returns a method to create a store instance.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003ERegardless of the mode, your \u003Ccode\u003Estate\u003C\u002Fcode\u003E value should \u003Cstrong\u003Ealways be a \u003Ccode\u003Efunction\u003C\u002Fcode\u003E\u003C\u002Fstrong\u003E to avoid unwanted \u003Cem\u003Eshared\u003C\u002Fem\u003E state on the server side.\u003C\u002Fp\u003E\n\u003Ch2 id=\"modules-mode\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#modules-mode\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EModules mode\u003C\u002Fh2\u003E\u003Cblockquote\u003E\n\u003Cp\u003ENuxt.js lets you have a \u003Ccode\u003Estore\u003C\u002Fcode\u003E directory with every file corresponding to a module.\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003ETo get started, export the state as a function, and the mutations and actions as objects in \u003Ccode\u003Estore\u002Findex.js\u003C\u002Fcode\u003E:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E state = \u003Cspan class=\"hljs-function\"\u003E\u003Cspan class=\"hljs-params\"\u003E()\u003C\u002Fspan\u003E =&gt;\u003C\u002Fspan\u003E ({\n  \u003Cspan class=\"hljs-attr\"\u003Ecounter\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E0\u003C\u002Fspan\u003E\n})\n\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E mutations = {\n  increment (state) {\n    state.counter++\n  }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EThen, you can have a \u003Ccode\u003Estore\u002Ftodos.js\u003C\u002Fcode\u003E file:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E state = \u003Cspan class=\"hljs-function\"\u003E\u003Cspan class=\"hljs-params\"\u003E()\u003C\u002Fspan\u003E =&gt;\u003C\u002Fspan\u003E ({\n  \u003Cspan class=\"hljs-attr\"\u003Elist\u003C\u002Fspan\u003E: []\n})\n\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E mutations = {\n  add (state, text) {\n    state.list.push({\n      text,\n      \u003Cspan class=\"hljs-attr\"\u003Edone\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-literal\"\u003Efalse\u003C\u002Fspan\u003E\n    })\n  },\n  remove (state, { todo }) {\n    state.list.splice(state.list.indexOf(todo), \u003Cspan class=\"hljs-number\"\u003E1\u003C\u002Fspan\u003E)\n  },\n  toggle (state, todo) {\n    todo.done = !todo.done\n  }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EThe store will be created as such:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Enew\u003C\u002Fspan\u003E Vuex.Store({\n  \u003Cspan class=\"hljs-attr\"\u003Estate\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-function\"\u003E\u003Cspan class=\"hljs-params\"\u003E()\u003C\u002Fspan\u003E =&gt;\u003C\u002Fspan\u003E ({\n    \u003Cspan class=\"hljs-attr\"\u003Ecounter\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E0\u003C\u002Fspan\u003E\n  }),\n  \u003Cspan class=\"hljs-attr\"\u003Emutations\u003C\u002Fspan\u003E: {\n    increment (state) {\n      state.counter++\n    }\n  },\n  \u003Cspan class=\"hljs-attr\"\u003Emodules\u003C\u002Fspan\u003E: {\n    \u003Cspan class=\"hljs-attr\"\u003Etodos\u003C\u002Fspan\u003E: {\n      \u003Cspan class=\"hljs-attr\"\u003Enamespaced\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-literal\"\u003Etrue\u003C\u002Fspan\u003E,\n      \u003Cspan class=\"hljs-attr\"\u003Estate\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-function\"\u003E\u003Cspan class=\"hljs-params\"\u003E()\u003C\u002Fspan\u003E =&gt;\u003C\u002Fspan\u003E ({\n        \u003Cspan class=\"hljs-attr\"\u003Elist\u003C\u002Fspan\u003E: []\n      }),\n      \u003Cspan class=\"hljs-attr\"\u003Emutations\u003C\u002Fspan\u003E: {\n        add (state, { text }) {\n          state.list.push({\n            text,\n            \u003Cspan class=\"hljs-attr\"\u003Edone\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-literal\"\u003Efalse\u003C\u002Fspan\u003E,\n            \u003Cspan class=\"hljs-attr\"\u003Eid\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003EDate\u003C\u002Fspan\u003E.now()\n          })\n        },\n        remove (state, { todo }) {\n          state.list = state.list.filter(\u003Cspan class=\"hljs-function\"\u003E\u003Cspan class=\"hljs-params\"\u003Eitem\u003C\u002Fspan\u003E =&gt;\u003C\u002Fspan\u003E item.id !== todo.id)\n        },\n        toggle (state, { todo }) {\n          todo.done = !todo.done\n        }\n      }\n    }\n  }\n})\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EAnd in your \u003Ccode\u003Epages\u002Ftodos.vue\u003C\u002Fcode\u003E, using the \u003Ccode\u003Etodos\u003C\u002Fcode\u003E module:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eul\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eli\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ev-for\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"todo in todos\"\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:key\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"todo.id\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Einput\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:checked\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"todo.done\"\u003C\u002Fspan\u003E @\u003Cspan class=\"hljs-attr\"\u003Echange\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"toggle(todo)\"\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Etype\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"checkbox\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Espan\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:class\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"{ done: todo.done }\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E{{ todo.text }}\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Espan\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ebutton\u003C\u002Fspan\u003E @\u003Cspan class=\"hljs-attr\"\u003Eclick\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"removeTodo(todo)\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003Eremove\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ebutton\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Eli\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eli\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Einput\u003C\u002Fspan\u003E @\u003Cspan class=\"hljs-attr\"\u003Ekeyup.enter\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"addTodo\"\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eplaceholder\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"What needs to be done?\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Eli\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Eul\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"javascript\"\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E { mapMutations } \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E'vuex'\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003Ecomputed\u003C\u002Fspan\u003E: {\n    todos () {\n      \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.$store.state.todos.list\n    }\n  },\n  \u003Cspan class=\"hljs-attr\"\u003Emethods\u003C\u002Fspan\u003E: {\n    addTodo (e) {\n      \u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.$store.commit(\u003Cspan class=\"hljs-string\"\u003E'todos\u002Fadd'\u003C\u002Fspan\u003E, e.target.value)\n      e.target.value = \u003Cspan class=\"hljs-string\"\u003E''\u003C\u002Fspan\u003E\n    },\n    ...mapMutations({\n      \u003Cspan class=\"hljs-attr\"\u003Etoggle\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E'todos\u002Ftoggle'\u003C\u002Fspan\u003E\n    }),\n    removeTodo (todo){\n      \u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.$store.commit(\u003Cspan class=\"hljs-string\"\u003E'todos\u002Fremove'\u003C\u002Fspan\u003E, todo)\n    }\n  }\n}\n\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Estyle\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"css\"\u003E\n\u003Cspan class=\"hljs-selector-class\"\u003E.done\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attribute\"\u003Etext-decoration\u003C\u002Fspan\u003E: line-through;\n}\n\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Estyle\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cblockquote\u003E\n\u003Cp\u003EThe module method also works for top-level definitions without implementing a sub-directory in the \u003Ccode\u003Estore\u003C\u002Fcode\u003E directory\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003EExample for state: you create a file \u003Ccode\u003Estore\u002Fstate.js\u003C\u002Fcode\u003E and add the following\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E () =&gt; ({\n  \u003Cspan class=\"hljs-attr\"\u003Ecounter\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E0\u003C\u002Fspan\u003E\n})\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EAnd the corresponding mutations can be in the file \u003Ccode\u003Estore\u002Fmutations.js\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  increment (state) {\n    state.counter++\n  }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"module-files\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#module-files\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EModule files\u003C\u002Fh3\u003E\u003Cp\u003EYou can optionally break down a module file into separate files: \u003Ccode\u003Estate.js\u003C\u002Fcode\u003E, \u003Ccode\u003Eactions.js\u003C\u002Fcode\u003E, \u003Ccode\u003Emutations.js\u003C\u002Fcode\u003E and \u003Ccode\u003Egetters.js\u003C\u002Fcode\u003E. If you maintain an \u003Ccode\u003Eindex.js\u003C\u002Fcode\u003E file with state, getters and mutations while having a single separate file for actions, that will also still be properly recognized.\u003C\u002Fp\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003ENote: Whilst using split-file modules, you must remember that using arrow functions, \u003Ccode\u003Ethis\u003C\u002Fcode\u003E is only lexically available. Lexical scoping means that the \u003Ccode\u003Ethis\u003C\u002Fcode\u003E always references the owner of the arrow function. If the arrow function is not contained then \u003Ccode\u003Ethis\u003C\u002Fcode\u003E would be undefined. The solution is to use a &quot;normal&quot; function which produces its own scope and thus has \u003Ccode\u003Ethis\u003C\u002Fcode\u003E available.\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Ch3 id=\"plugins\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#plugins\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EPlugins\u003C\u002Fh3\u003E\u003Cp\u003EYou can add additional plugins to the store (in the modules mode) by putting them into the \u003Ccode\u003Estore\u002Findex.js\u003C\u002Fcode\u003E file:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E myPlugin \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E'myPlugin'\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E plugins = [ myPlugin ]\n\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E state = \u003Cspan class=\"hljs-function\"\u003E\u003Cspan class=\"hljs-params\"\u003E()\u003C\u002Fspan\u003E =&gt;\u003C\u002Fspan\u003E ({\n  \u003Cspan class=\"hljs-attr\"\u003Ecounter\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E0\u003C\u002Fspan\u003E\n})\n\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E mutations = {\n  increment (state) {\n    state.counter++\n  }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EMore information about the plugins: \u003Ca href=\"https:\u002F\u002Fvuex.vuejs.org\u002Fen\u002Fplugins.html\"\u003EVuex documentation\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\n\u003Ch2 id=\"the-fetch-method\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#the-fetch-method\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EThe fetch Method\u003C\u002Fh2\u003E\u003Cblockquote\u003E\n\u003Cp\u003EThe \u003Ccode\u003Efetch\u003C\u002Fcode\u003E method is used to fill the store before rendering the page, it&#39;s like the \u003Ccode\u003EasyncData\u003C\u002Fcode\u003E method except it doesn&#39;t set the component data.\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003EMore information about the fetch method: \u003Ca href=\"\u002Fapi\u002Fpages-fetch\"\u003EAPI Pages fetch\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\n\u003Ch2 id=\"the-nuxtserverinit-action\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#the-nuxtserverinit-action\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EThe nuxtServerInit Action\u003C\u002Fh2\u003E\u003Cp\u003EIf the action \u003Ccode\u003EnuxtServerInit\u003C\u002Fcode\u003E is defined in the store and the mode is \u003Ccode\u003Euniversal\u003C\u002Fcode\u003E, Nuxt.js will call it with the context (only from the server-side). It&#39;s useful when we have some data on the server we want to give directly to the client-side.\u003C\u002Fp\u003E\n\u003Cp\u003EFor example, let&#39;s say we have sessions on the server-side and we can access the connected user through \u003Ccode\u003Ereq.session.user\u003C\u002Fcode\u003E. To give the authenticated user to our store, we update our \u003Ccode\u003Estore\u002Findex.js\u003C\u002Fcode\u003E to the following:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003Eactions: {\n  nuxtServerInit ({ commit }, { req }) {\n    \u003Cspan class=\"hljs-keyword\"\u003Eif\u003C\u002Fspan\u003E (req.session.user) {\n      commit(\u003Cspan class=\"hljs-string\"\u003E'user'\u003C\u002Fspan\u003E, req.session.user)\n    }\n  }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cblockquote\u003E\n\u003Cp\u003EIf you are using the \u003Cem\u003EModules\u003C\u002Fem\u003E mode of the Vuex store, only the primary module (in \u003Ccode\u003Estore\u002Findex.js\u003C\u002Fcode\u003E) will receive this action. You&#39;ll need to chain your module actions from there.\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003EThe \u003Ca href=\"\u002Fapi\u002Fcontext\"\u003Econtext\u003C\u002Fa\u003E is given to \u003Ccode\u003EnuxtServerInit\u003C\u002Fcode\u003E as the 2nd argument, it is the same as \u003Ccode\u003EasyncData\u003C\u002Fcode\u003E or \u003Ccode\u003Efetch\u003C\u002Fcode\u003E method.\u003C\u002Fp\u003E\n\u003Cp\u003EIf \u003Ccode\u003Enuxt generate\u003C\u002Fcode\u003E is ran, \u003Ccode\u003EnuxtServerInit\u003C\u002Fcode\u003E will be executed for every dynamic route generated.\u003C\u002Fp\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003ENote: Asynchronous \u003Ccode\u003EnuxtServerInit\u003C\u002Fcode\u003E actions must return a Promise or leverage async\u002Fawait to allow the \u003Ccode\u003Enuxt\u003C\u002Fcode\u003E server to wait on them.\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003Eactions: {\n  \u003Cspan class=\"hljs-keyword\"\u003Easync\u003C\u002Fspan\u003E nuxtServerInit({ dispatch }) {\n    \u003Cspan class=\"hljs-keyword\"\u003Eawait\u003C\u002Fspan\u003E dispatch(\u003Cspan class=\"hljs-string\"\u003E'core\u002Fload'\u003C\u002Fspan\u003E)\n  }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch2 id=\"vuex-strict-mode\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#vuex-strict-mode\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EVuex Strict Mode\u003C\u002Fh2\u003E\u003Cp\u003EStrict mode is enabled by default on dev mode and turned off in production mode. To disable strict mode in dev, follow the below example in \u003Ccode\u003Estore\u002Findex.js\u003C\u002Fcode\u003E:\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Eexport const strict = false\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Ch2 id=\"classic-mode\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#classic-mode\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EClassic mode\u003C\u002Fh2\u003E\u003Cblockquote\u003E\n\u003Cp\u003EThis feature is deprecated and will be removed in Nuxt 3.\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003ETo activate the store with the classic mode, we create the \u003Ccode\u003Estore\u002Findex.js\u003C\u002Fcode\u003E file which should export a method that returns a Vuex instance:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E Vuex \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E'vuex'\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E createStore = \u003Cspan class=\"hljs-function\"\u003E\u003Cspan class=\"hljs-params\"\u003E()\u003C\u002Fspan\u003E =&gt;\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Enew\u003C\u002Fspan\u003E Vuex.Store({\n    \u003Cspan class=\"hljs-attr\"\u003Estate\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-function\"\u003E\u003Cspan class=\"hljs-params\"\u003E()\u003C\u002Fspan\u003E =&gt;\u003C\u002Fspan\u003E ({\n      \u003Cspan class=\"hljs-attr\"\u003Ecounter\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E0\u003C\u002Fspan\u003E\n    }),\n    \u003Cspan class=\"hljs-attr\"\u003Emutations\u003C\u002Fspan\u003E: {\n      increment (state) {\n        state.counter++\n      }\n    }\n  })\n}\n\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E createStore\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cblockquote\u003E\n\u003Cp\u003EWe don&#39;t need to install \u003Ccode\u003Evuex\u003C\u002Fcode\u003E since it&#39;s shipped with Nuxt.js.\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003EWe can now use \u003Ccode\u003Ethis.$store\u003C\u002Fcode\u003E inside our components:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ebutton\u003C\u002Fspan\u003E @\u003Cspan class=\"hljs-attr\"\u003Eclick\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"$store.commit('increment')\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E{{ $store.state.counter }}\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ebutton\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E"},contributors:[]}],fetch:[],mutations:[]});