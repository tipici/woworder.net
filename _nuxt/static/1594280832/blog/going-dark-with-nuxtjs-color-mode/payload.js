__NUXT_JSONP__("/blog/going-dark-with-nuxtjs-color-mode", (function(a){return {data:[{path:"\u002Fvi\u002Fblog\u002Fgoing-dark-with-nuxtjs-color-mode",post:{path:"vi\u002Fblog\u002Fgoing-dark-with-nuxtjs-color-mode.md",slug:"going-dark-with-nuxtjs-color-mode",readtime:{text:"18 min read",minutes:17.91,time:1074600,words:3582},title:"Going dark with Nuxt.js color mode",description:"The @nuxtjs\u002Fcolor-mode module is a cool way of adding dark mode to your site. But not only does it switch from dark to light but also any color theme (eg. sepia mode). It even has auto detection so that it will choose the right mode depending on your system appearance.",imgUrl:"blog\u002Fgoing-dark-with-nuxtjs-color-mode\u002Fmain.png",date:"2020-05-19T00:00:00.000Z",authors:[{name:"Debbie O'Brien",avatarUrl:"https:\u002F\u002Fpbs.twimg.com\u002Fprofile_images\u002F1252900852156772352\u002FJLIVJ-TC_400x400.jpg",link:"https:\u002F\u002Ftwitter.com\u002Fdebs_obrien"}],tags:["Nuxt","Color mode"],body:"\u003Cp align=\"center\"\u003E\n  \u003Ca href=\"https:\u002F\u002Fcolor-mode.nuxtjs.app\u002F\" target=\"_blank\" rel=\"noopener nofollow\"\u003EView demo\u003C\u002Fa\u003E \u002F \n  \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt-community\u002Fcolor-mode-module\" target=\"_blank\" rel=\"noopener nofollow\"\u003ESource\u003C\u002Fa\u003E\n\u003C\u002Fp\u003E\n\n\u003Cp\u003EThe \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt-community\u002Fcolor-mode-module\"\u003E@nuxtjs\u002Fcolor-mode module\u003C\u002Fa\u003E is a cool way of adding dark mode to your site. But not only does it switch from dark to light but also any color theme (eg: sepia mode). It even has auto detection so that it will choose the right mode depending on your system appearance.\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E\u003Ca href=\"#how-does-it-work\"\u003EHow does it work\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#let-39-s-get-started\"\u003ELet&#39;s get started\u003C\u002Fa\u003E\u003Cul\u003E\n\u003Cli\u003E\u003Ca href=\"#install-the-color-mode-module\"\u003EInstall the color-mode module\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#adding-your-colour-styles\"\u003EAdding your colour styles\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#inspecting-the-html\"\u003EInspecting the HTML\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#creating-a-color-mode-switcher\"\u003ECreating a color-mode switcher\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#importing-our-component\"\u003EImporting our component\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#adding-a-click-event-to-change-our-colours\"\u003EAdding a click event to change our colours\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#adding-some-icons\"\u003EAdding some icons\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#importing-the-svgs-as-components\"\u003EImporting the svgs as components\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#adding-a-dynamic-component\"\u003EAdding a dynamic component\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#styling-our-icons\"\u003EStyling our icons\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#creating-a-method-to-show-our-preferred-class\"\u003ECreating a method to show our preferred class\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#adding-some-text-using-the-colorscheme-component\"\u003EAdding some text using the ColorScheme component\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#adding-a-text-when-system-is-chosen\"\u003EAdding a text when system is chosen\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#tidying-up-our-styles\"\u003ETidying up our styles\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#conclusion\"\u003EConclusion\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#what-to-do-next\"\u003EWhat to do next\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Ch2 id=\"how-does-it-work\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#how-does-it-work\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EHow does it work\u003C\u002Fh2\u003E\u003Cp\u003EThe \u003Ccode\u003E@nuxtjs\u002Fcolor-mode\u003C\u002Fcode\u003E adds a \u003Ccode\u003E.${color}-mode\u003C\u002Fcode\u003E class to the \u003Ccode\u003E&lt;html&gt;\u003C\u002Fcode\u003E tag. It works with any NuxtJS target, either static or server and universal or client-side rendering. It auto detects the system color-mode so that you don&#39;t have to manually change the colour. \u003C\u002Fp\u003E\n\u003Cp\u003EIt injects a \u003Ccode\u003E$colorMode\u003C\u002Fcode\u003E helper with:\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E\u003Ccode\u003Epreference\u003C\u002Fcode\u003E: Actual color-mode selected (can be \u003Ccode\u003E&#39;system&#39;\u003C\u002Fcode\u003E), update it to change the user preferred colour mode\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003Evalue\u003C\u002Fcode\u003E: Useful to know what color mode has been detected when \u003Ccode\u003E$colorMode === &#39;system&#39;\u003C\u002Fcode\u003E, you should not update it\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003Eunknown\u003C\u002Fcode\u003E: Useful to know if, during SSR or static generation, we need to render a placeholder\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Ch2 id=\"let-39-s-get-started\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#let-39-s-get-started\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ELet&#39;s get started\u003C\u002Fh2\u003E\u003Cp\u003EYou can work on an already created project or start a new one. For this example I have created a new project and added some dummy text to the index.vue file in the pages folder.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eh1\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003ETesting color mode\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Eh1\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"install-the-color-mode-module\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#install-the-color-mode-module\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EInstall the color-mode module\u003C\u002Fh3\u003E\u003Cp\u003EFirst of all you need to install the module as a dependency to your Nuxt.js project. \u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs bash\"\u003Eyarn add --dev @nuxtjs\u002Fcolor-mode\n\u003Cspan class=\"hljs-comment\"\u003E# OR npm install --save-dev @nuxtjs\u002Fcolor-mode\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EThen you need to add the module to the \u003Ccode\u003EbuildModules\u003C\u002Fcode\u003E section of your nuxt.config.js file. \u003C\u002Fp\u003E\n\u003Cdiv class=\"Alert Alert--nuxt-green\"\u003E\n\n\u003Cp\u003E\u003Cb\u003EInfo:\u003C\u002Fb\u003E If you don&#39;t have a nuxt.config.js file already you can create one in the root directory and add the code below.\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\n\u003Cp\u003E\u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs javascript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003EbuildModules\u003C\u002Fspan\u003E: [\n    \u003Cspan class=\"hljs-string\"\u003E'@nuxtjs\u002Fcolor-mode'\u003C\u002Fspan\u003E\n  ]\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EIf you using a version of Nuxt.js lower than 2.9.0 you will need to add it to the \u003Ccode\u003Emodules\u003C\u002Fcode\u003E property instead of \u003Ccode\u003EbuildModules\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\n\u003Cdiv class=\"Alert Alert--nuxt-green\"\u003E\n\n\u003Cp\u003E\u003Cb\u003EInfo:\u003C\u002Fb\u003E To check what version of Nuxt.js you have you can run \u003Ccode\u003Eyarn nuxt -v\u003C\u002Fcode\u003E or \u003Ccode\u003Enpm run nuxt -v\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\n\u003Ch3 id=\"adding-your-colour-styles\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#adding-your-colour-styles\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EAdding your colour styles\u003C\u002Fh3\u003E\u003Cp\u003ENow you need to add some styles to your mode classes. Let&#39;s add a \u003Ccode\u003Emain.css\u003C\u002Fcode\u003E file in our assets folder. We will use CSS variables to set the root colour which will be light mode and then set the colours for dark and sepia mode. Then we can add some styles to our body and link tags.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Eassets\u002Fmain.css\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs css\"\u003E\u003Cspan class=\"hljs-selector-pseudo\"\u003E:root\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attribute\"\u003E--color\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E#243746\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003E--color-primary\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E#158876\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003E--color-secondary\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E#0e2233\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003E--bg\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E#f3f5f4\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003E--bg-secondary\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E#fff\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003E--border-color\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E#ddd\u003C\u002Fspan\u003E;\n}\n\n\u003Cspan class=\"hljs-selector-class\"\u003E.dark-mode\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attribute\"\u003E--color\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E#ebf4f1\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003E--color-primary\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E#41b38a\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003E--color-secondary\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E#fdf9f3\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003E--bg\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E#091a28\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003E--bg-secondary\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E#071521\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003E--border-color\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E#0d2538\u003C\u002Fspan\u003E;\n}\n\u003Cspan class=\"hljs-selector-class\"\u003E.sepia-mode\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attribute\"\u003E--color\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E#433422\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003E--color-secondary\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E#504231\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003E--bg\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E#f1e7d0\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003E--bg-secondary\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E#eae0c9\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003E--border-color\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E#ded0bf\u003C\u002Fspan\u003E;\n}\n\n\u003Cspan class=\"hljs-selector-tag\"\u003Ebody\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attribute\"\u003Efont-family\u003C\u002Fspan\u003E: -apple-system, BlinkMacSystemFont, \u003Cspan class=\"hljs-string\"\u003E'Segoe UI'\u003C\u002Fspan\u003E, Roboto, Oxygen, Ubuntu, Cantarell, \u003Cspan class=\"hljs-string\"\u003E'Open Sans'\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-string\"\u003E'Helvetica Neue'\u003C\u002Fspan\u003E, sans-seriff;\n  \u003Cspan class=\"hljs-attribute\"\u003Ebackground-color\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Evar\u003C\u002Fspan\u003E(--bg);\n  \u003Cspan class=\"hljs-attribute\"\u003Ecolor\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Evar\u003C\u002Fspan\u003E(--color);\n  \u003Cspan class=\"hljs-attribute\"\u003Etransition\u003C\u002Fspan\u003E: background-color .\u003Cspan class=\"hljs-number\"\u003E3s\u003C\u002Fspan\u003E;\n}\n\u003Cspan class=\"hljs-selector-tag\"\u003Ea\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attribute\"\u003Ecolor\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Evar\u003C\u002Fspan\u003E(--color-primary)\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EIn order to use this CSS file in our application we need to register it. We do this by adding a css property to our configuration file and adding the css file that we have just created.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003Ecss: [\u003Cspan class=\"hljs-string\"\u003E'@\u002Fassets\u002Fmain.css'\u003C\u002Fspan\u003E]\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"inspecting-the-html\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#inspecting-the-html\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EInspecting the HTML\u003C\u002Fh3\u003E\u003Cp\u003ENow if you launch your site with \u003Ccode\u003Enpm run dev\u003C\u002Fcode\u003E or \u003Ccode\u003Enpx nuxt dev\u003C\u002Fcode\u003E you should see dark mode if your system is already set to dark mode and if you inspect the code you will see the class added to your html tag. \n\u003Cvideo src=\"\u002Fblog\u002Fgoing-dark-with-nuxtjs-color-mode\u002Ftesting-html.mp4\" autoplay loop playsinline controls\u003E\u003C\u002Fvideo\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ehtml\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"dark-mode\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E \u002F\u002F you might have light-mode here\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EUsing the dev tools change the mode to sepia-mode and light-mode to see the effects.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ehtml\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"sepia-mode\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-comment\"\u003E&lt;!-- or --&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ehtml\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"light-mode\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-comment\"\u003E&lt;!-- or dark mode if you have already seen the light --&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EYou can also change the colour in the console by typing:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E$nuxt.$colorMode.preference = \u003Cspan class=\"hljs-string\"\u003E\"sepia\"\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003Cvideo src=\"\u002Fblog\u002Fgoing-dark-with-nuxtjs-color-mode\u002Ftesting-console.mp4\" autoplay loop playsinline controls\u003E\u003C\u002Fvideo\u003E\u003C\u002Fp\u003E\n\u003Ch3 id=\"creating-a-color-mode-switcher\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#creating-a-color-mode-switcher\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ECreating a color-mode switcher\u003C\u002Fh3\u003E\u003Cp\u003EObviously changing the mode in the dev tools is not what we want so let&#39;s create a color-mode switcher so our users can quickly change from one colour to another.\u003C\u002Fp\u003E\n\u003Cp\u003ELet&#39;s create a component called \u003Ccode\u003EColorModePicker\u003C\u002Fcode\u003E and we can add a list of colors. For now we can just print out the color from our v-for.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Ecomponents\u002FColorModePicker.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eul\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eli\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ev-for\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"color of colors\"\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:key\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"color\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n        {{color}}\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Eli\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Eul\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EAnd in our data property let&#39;s return an array of colors for each mode. \u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Ecomponents\u002FColorModePicker.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"javascript\"\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  data () {\n    \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E {\n      \u003Cspan class=\"hljs-attr\"\u003Ecolors\u003C\u002Fspan\u003E: [\u003Cspan class=\"hljs-string\"\u003E'system'\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-string\"\u003E'light'\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-string\"\u003E'dark'\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-string\"\u003E'sepia'\u003C\u002Fspan\u003E]\n    }\n  }\n}\n\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"importing-our-component\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#importing-our-component\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EImporting our component\u003C\u002Fh3\u003E\u003Cp\u003ELet&#39;s import our component into our index.vue page so we can see what is happening.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Epages\u002Findex.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003EColorModePicker\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"javascript\"\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E ColorModePicker \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E'@\u002Fcomponents\u002FColorModePicker'\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003Ecomponents\u003C\u002Fspan\u003E:{\n    ColorModePicker\n  }\n}\n\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EAnd in our browser under \u003Ccode\u003Ehttp:\u002F\u002Flocalhost:3000\u003C\u002Fcode\u003E you will see our list of colours.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"\u002Fblog\u002Fgoing-dark-with-nuxtjs-color-mode\u002Flist-of-colors.png\" alt=\"list of colours\"\u003E\u003C\u002Fp\u003E\n\u003Ch3 id=\"adding-a-click-event-to-change-our-colours\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#adding-a-click-event-to-change-our-colours\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EAdding a click event to change our colours\u003C\u002Fh3\u003E\u003Cp\u003EThen in our template we can add a click event that will make the \u003Ccode\u003E$colorMode.preference\u003C\u002Fcode\u003E equal to the color which comes from our data.\u003C\u002Fp\u003E\n\u003Cp\u003EWe can use our \u003Ccode\u003E$colorMode\u003C\u002Fcode\u003E helper that we get with the color-mode module. When the user clicks the \u003Ccode\u003E$colorMode.preference\u003C\u002Fcode\u003E will be set to the color coming from our data. \u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Ecomponents\u002FColorModePicker.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eli\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ev-for\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"color of colors\"\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:key\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"color\"\u003C\u002Fspan\u003E @\u003Cspan class=\"hljs-attr\"\u003Eclick\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"$colorMode.preference = color\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EThis is actually all you need in order for it to work. If you check in your browser you will see that by clicking on any of the colors the background is changing. It probably won&#39;t have a pointer cursor so if you think it doesn&#39;t work it probably does just you are used to seeing the cursor.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cvideo src=\"\u002Fblog\u002Fgoing-dark-with-nuxtjs-color-mode\u002Fcolor-changing-text-only.mp4\" autoplay loop playsinline controls\u003E\u003C\u002Fvideo\u003E\u003C\u002Fp\u003E\n\u003Cp\u003EAnd if we check in the broswer we can see it works but this is super ugly. Let&#39;s tidy it up a bit.\u003C\u002Fp\u003E\n\u003Ch3 id=\"adding-some-icons\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#adding-some-icons\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EAdding some icons\u003C\u002Fh3\u003E\u003Cp\u003ELet&#39;s add some icons. you can copy the icons \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt-community\u002Fcolor-mode-module\u002Ftree\u002Fmaster\u002Fexample\u002Fassets\u002Ficons\"\u003Efrom here\u003C\u002Fa\u003E and place them in your assets folder in a new folder called icons.\u003C\u002Fp\u003E\n\u003Cp\u003EWe are going to use our icons as a component and in order to do that we will use the \u003Ca href=\"https:\u002F\u002Fwww.npmjs.com\u002Fpackage\u002F@nuxtjs\u002Fsvg\"\u003E@nuxtjs\u002Fsvg\u003C\u002Fa\u003E module which allows you to import .svg files in multiple ways depending on the resource query you provide.\u003C\u002Fp\u003E\n\u003Cp\u003EFirst you will need to install it\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs bash\"\u003Eyarn add --dev @nuxtjs\u002Fsvg\n\u003Cspan class=\"hljs-comment\"\u003E# OR npm install --save-dev @nuxtjs\u002Fsvg\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EThen we need to add it to your \u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003E in the buildModules section which should already have the \u003Ccode\u003E@nuxtjs\u002Fcolor-mode\u003C\u002Fcode\u003E module.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003EbuildModules: [\n  \u003Cspan class=\"hljs-string\"\u003E'@nuxtjs\u002Fsvg'\u003C\u002Fspan\u003E,\n  \u003Cspan class=\"hljs-string\"\u003E'@nuxtjs\u002Fcolor-mode'\u003C\u002Fspan\u003E\n]\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"importing-the-svgs-as-components\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#importing-the-svgs-as-components\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EImporting the svgs as components\u003C\u002Fh3\u003E\u003Cp\u003EWe can now import these svg icons as components using the \u003Ccode\u003E?inline\u003C\u002Fcode\u003E query so that they are imported as inline svgs.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Ecomponents\u002FColorModePicker.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"javascript\"\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E IconSystem \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E'@\u002Fassets\u002Ficons\u002Fsystem.svg?inline'\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E IconLight \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E'@\u002Fassets\u002Ficons\u002Flight.svg?inline'\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E IconDark \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E'@\u002Fassets\u002Ficons\u002Fdark.svg?inline'\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E IconSepia \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E'@\u002Fassets\u002Ficons\u002Fsepia.svg?inline'\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003Ecomponents\u003C\u002Fspan\u003E: {\n    IconSystem,\n    IconLight,\n    IconDark,\n    IconSepia\n  },\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F ... data property will be here\u003C\u002Fspan\u003E\n\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"adding-a-dynamic-component\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#adding-a-dynamic-component\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EAdding a dynamic component\u003C\u002Fh3\u003E\u003Cp\u003ENow we can use a dynamic component which will check which icon to add depending on the colours in our data array. Lets replace the \u003Ccode\u003E{{color}}\u003C\u002Fcode\u003E text with this new component inside our \u003Ccode\u003E&lt;li&gt;\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Ecomponents\u002FColorModePicker.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ecomponent\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:is\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"`icon-${color}`\"\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003ELet&#39;s move our click event from our \u003Ccode\u003E&lt;li&gt;\u003C\u002Fcode\u003E to our icon component. \u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Ecomponents\u002FColorModePicker.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ecomponent\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:is\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"`icon-${color}`\"\u003C\u002Fspan\u003E @\u003Cspan class=\"hljs-attr\"\u003Eclick\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"$colorMode.preference = color\"\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"styling-our-icons\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#styling-our-icons\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EStyling our icons\u003C\u002Fh3\u003E\u003Cp\u003EAnd let&#39;s add some styles so we can see our icons. We will use scoped styling and use the class feather. If you look into your svg files you will see that our svgs have the class of feather so we can use this class to style it. We will also add a preferred and selected class so we know which one has been selected and what is the preferred one.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Ecomponents\u002FColorModePicker.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Estyle\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Escoped\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"css\"\u003E\n\u003Cspan class=\"hljs-selector-class\"\u003E.feather\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attribute\"\u003Eposition\u003C\u002Fspan\u003E: relative;\n  \u003Cspan class=\"hljs-attribute\"\u003Etop\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E0px\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003Ecursor\u003C\u002Fspan\u003E: pointer;\n  \u003Cspan class=\"hljs-attribute\"\u003Epadding\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E7px\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003Ebackground-color\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Evar\u003C\u002Fspan\u003E(--bg-secondary);\n  \u003Cspan class=\"hljs-attribute\"\u003Eborder\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E2px\u003C\u002Fspan\u003E solid \u003Cspan class=\"hljs-built_in\"\u003Evar\u003C\u002Fspan\u003E(--border-color);\n  \u003Cspan class=\"hljs-attribute\"\u003Emargin\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E0\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003Eborder-radius\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E5px\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003Etransition\u003C\u002Fspan\u003E: all \u003Cspan class=\"hljs-number\"\u003E0.1s\u003C\u002Fspan\u003E ease;\n}\n\u003Cspan class=\"hljs-selector-class\"\u003E.feather\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-selector-pseudo\"\u003E:hover\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attribute\"\u003Etop\u003C\u002Fspan\u003E: -\u003Cspan class=\"hljs-number\"\u003E3px\u003C\u002Fspan\u003E;\n}\n\u003Cspan class=\"hljs-selector-class\"\u003E.feather\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-selector-class\"\u003E.preferred\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attribute\"\u003Eborder-color\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Evar\u003C\u002Fspan\u003E(--color-primary);\n  \u003Cspan class=\"hljs-attribute\"\u003Etop\u003C\u002Fspan\u003E: -\u003Cspan class=\"hljs-number\"\u003E3px\u003C\u002Fspan\u003E;\n}\n\u003Cspan class=\"hljs-selector-class\"\u003E.feather\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-selector-class\"\u003E.selected\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attribute\"\u003Ecolor\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Evar\u003C\u002Fspan\u003E(--color-primary);\n}\n\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Estyle\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EYou won&#39;t see much difference right now except that the icons look a bit nicer but now we need to show a different class for our preferred icon which comes from our system preference and one for our selected icon which is for when we use the click event to change the color.\u003C\u002Fp\u003E\n\u003Ch3 id=\"creating-a-method-to-show-our-preferred-class\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#creating-a-method-to-show-our-preferred-class\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ECreating a method to show our preferred class\u003C\u002Fh3\u003E\u003Cp\u003ETo do this we can create a method that will return the class we want. We can call our method \u003Ccode\u003EgetClasses\u003C\u002Fcode\u003E and pass in the color as the parameter The two classes we want to return are preferred and selected. The preferred color should be equal to the \u003Ccode\u003E$colorMode.preference\u003C\u002Fcode\u003E and the selected color should be equal to the \u003Ccode\u003E$colorMode.value\u003C\u002Fcode\u003E. If the colorMode is unknown we can return an empty object. \u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Ecomponents\u002FColorModePicker.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003Edata () {\n  \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E {\n    \u003Cspan class=\"hljs-attr\"\u003Ecolors\u003C\u002Fspan\u003E: [\u003Cspan class=\"hljs-string\"\u003E'system'\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-string\"\u003E'light'\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-string\"\u003E'dark'\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-string\"\u003E'sepia'\u003C\u002Fspan\u003E]\n  }\n},\n\u003Cspan class=\"hljs-attr\"\u003Emethods\u003C\u002Fspan\u003E: {\n  getClasses (color) {\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Does not set classes on ssr when preference is system (because we don't know the preference until client-side)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-keyword\"\u003Eif\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.$colorMode.unknown) {\n      \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E {}\n    }\n    \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E {\n      \u003Cspan class=\"hljs-attr\"\u003Epreferred\u003C\u002Fspan\u003E: color === \u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.$colorMode.preference,\n      \u003Cspan class=\"hljs-attr\"\u003Eselected\u003C\u002Fspan\u003E: color === \u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.$colorMode.value\n    }\n  }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EWe can now add this class to our icon component. The class will call the getClasses method passing in the color we receive when we use the click event.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Ecomponents\u002FColorModePicker.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ecomponent\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:is\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"`icon-${color}`\"\u003C\u002Fspan\u003E @\u003Cspan class=\"hljs-attr\"\u003Eclick\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"$colorMode.preference = color\"\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:class\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"getClasses(color)\"\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EAnd you will see in the browser the colours are being applied just as we wanted. But it is not very clear when we click the system icon what is going on.\u003C\u002Fp\u003E\n\u003Ch3 id=\"adding-some-text-using-the-colorscheme-component\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#adding-some-text-using-the-colorscheme-component\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EAdding some text using the ColorScheme component\u003C\u002Fh3\u003E\u003Cp\u003ELet&#39;s add something that can help the user understand it.\u003C\u002Fp\u003E\n\u003Cp\u003EIf you are doing SSR (\u003Ccode\u003Enuxt start\u003C\u002Fcode\u003E or \u003Ccode\u003Enuxt generate\u003C\u002Fcode\u003E) and if \u003Ccode\u003E$colorMode.preference\u003C\u002Fcode\u003E is set to \u003Ccode\u003E&#39;system&#39;\u003C\u002Fcode\u003E, using \u003Ccode\u003E$colorMode\u003C\u002Fcode\u003E in your Vue template will lead to a flash. This is due to the fact that we cannot know the user preferences when pre-rendering the page since they are detected on client-side.\u003C\u002Fp\u003E\n\u003Cp\u003ETo avoid the flash, we have to guard any rendering path which depends on \u003Ccode\u003E$colorMode\u003C\u002Fcode\u003E with \u003Ccode\u003E$colorMode.unknown\u003C\u002Fcode\u003E to render a placeholder or use our \u003Ccode\u003E&lt;ColorScheme&gt;\u003C\u002Fcode\u003E component.\u003C\u002Fp\u003E\n\u003Cp\u003ELet&#39;s create a ColorScheme component under our \u003Ccode\u003E&lt;ul&gt;\u003C\u002Fcode\u003E with a placeholder and a tag of \u003Ccode\u003Espan\u003C\u002Fcode\u003E. Inside it we can add some text and display the \u003Ccode\u003E$colorMode.preference\u003C\u002Fcode\u003E which we receive from the color-mode module.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Ecomponents\u002FColorModePicker.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003EColorScheme\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eplaceholder\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"...\"\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Etag\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"span\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  Color mode: \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eb\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E{{ $colorMode.preference }}\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Eb\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003EColorScheme\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EYou will now see in the browser that if you change the icon the text will appear that corresponds to the icon clicked.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cvideo src=\"\u002Fblog\u002Fgoing-dark-with-nuxtjs-color-mode\u002Fcolor-mode-text-icons.mp4\" autoplay loop playsinline controls\u003E\u003C\u002Fvideo\u003E\u003C\u002Fp\u003E\n\u003Ch3 id=\"adding-a-text-when-system-is-chosen\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#adding-a-text-when-system-is-chosen\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EAdding a text when system is chosen\u003C\u002Fh3\u003E\u003Cp\u003EWe can improve this further by seeing when the preference is the system and adding another message that shows which value was detected.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Ecomponents\u002FColorModePicker.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003EColorScheme\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eplaceholder\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"...\"\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Etag\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"span\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  Color mode: \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eb\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E{{ $colorMode.preference }}\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Eb\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Espan\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ev-if\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"$colorMode.preference === 'system'\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ei\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E{{ $colorMode.value }}\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ei\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E mode detected)\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Espan\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003EColorScheme\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EIf you test it out in the browser you will see it&#39;s looking pretty good and we are almost there.\u003C\u002Fp\u003E\n\u003Ch3 id=\"tidying-up-our-styles\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#tidying-up-our-styles\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ETidying up our styles\u003C\u002Fh3\u003E\u003Cp\u003EWe now just have to tidy up a few styles. Let&#39;s get rid of the dots from the \u003Ccode\u003E&lt;ul&gt;\u003C\u002Fcode\u003E and add some spacing and some style to our \u003Ccode\u003E&lt;p&gt;\u003C\u002Fcode\u003E tag.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Ecomponents\u002FColorModePicker.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs css\"\u003E\u003Cspan class=\"hljs-selector-tag\"\u003Eul\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attribute\"\u003Elist-style\u003C\u002Fspan\u003E: none;\n  \u003Cspan class=\"hljs-attribute\"\u003Epadding\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E0\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003Emargin\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E0\u003C\u002Fspan\u003E;\n}\n\u003Cspan class=\"hljs-selector-tag\"\u003Eul\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-selector-tag\"\u003Eli\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attribute\"\u003Edisplay\u003C\u002Fspan\u003E: inline-block;\n  \u003Cspan class=\"hljs-attribute\"\u003Epadding\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E5px\u003C\u002Fspan\u003E;\n}\n\u003Cspan class=\"hljs-selector-tag\"\u003Ep\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attribute\"\u003Emargin\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E0\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003Epadding-top\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E5px\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003Epadding-bottom\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E20px\u003C\u002Fspan\u003E;\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EAnd in order to centre it we can wrap our ColorModePicker component in a div with the class of container.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Epages\u002Findex.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E\"container\"\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003EColorModePicker\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EAnd add the styles to the container class in our styles\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Epages\u002Findex.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Estyle\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Escoped\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"css\"\u003E\n\u003Cspan class=\"hljs-selector-class\"\u003E.container\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attribute\"\u003Etext-align\u003C\u002Fspan\u003E: center;\n  \u003Cspan class=\"hljs-attribute\"\u003Epadding\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E50px\u003C\u002Fspan\u003E;\n}\n\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Estyle\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"conclusion\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#conclusion\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EConclusion\u003C\u002Fh3\u003E\u003Cp\u003EAnd there you have your beautiful and fully working color-mode component. Feel free to have some more fun by changing the icons or adding more colors or modifying the color scheme. Have fun.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cvideo src=\"\u002Fblog\u002Fgoing-dark-with-nuxtjs-color-mode\u002Ffinal-working-version.mp4\" autoplay loop playsinline controls\u003E\u003C\u002Fvideo\u003E\u003C\u002Fp\u003E\n\u003Ch3 id=\"what-to-do-next\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#what-to-do-next\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EWhat to do next\u003C\u002Fh3\u003E\u003Cul\u003E\n\u003Cli\u003ETo learn more about using the color-mode with Tailwind check out \u003Ca href=\"https:\u002F\u002Fmedium.com\u002F@fayazara\u002Fquick-way-to-implement-darkmode-in-nuxt-js-tailwindcss-corona-virus-tracker-712d004a0846\"\u003Ethis article\u003C\u002Fa\u003E.\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#subscribe-to-newsletter\"\u003ESubscribe to the newsletter\u003C\u002Fa\u003E to not miss the upcoming articles and resources.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n",links:{previous:{title:a,slug:a},next:{title:"Announcing Nuxt's $2M seed round",slug:"seed-round"}}}}],fetch:[],mutations:[]}}(null)));