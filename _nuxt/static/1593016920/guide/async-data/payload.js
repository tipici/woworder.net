__NUXT_JSONP__("/guide/async-data", {data:[{},{path:"\u002Fvi\u002Fguide\u002Fasync-data",section:"guide",page:{attrs:{title:"Async Data",description:"You may want to fetch data and render it on the server-side. Nuxt.js adds an `asyncData` method to let you handle async operations before setting the component data."},body:"\u003Cblockquote\u003E\n\u003Cp\u003EYou may want to fetch data and render it on the server-side. Nuxt.js adds an \u003Ccode\u003EasyncData\u003C\u002Fcode\u003E method to let you handle async operations before initializing the component\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cdiv\u003E\n  \u003Ca href=\"https:\u002F\u002Fvueschool.io\u002Fcourses\u002Fasync-data-with-nuxtjs?friend=nuxt\" target=\"_blank\" class=\"Promote\"\u003E\n    \u003Cimg src=\"\u002Fasync-data-with-nuxtjs.png\" srcset=\"\u002Fasync-data-with-nuxtjs-2x.png 2x\" alt=\"AsyncData by vueschool\"\u002F\u003E\n    \u003Cdiv class=\"Promote__Content\"\u003E\n      \u003Ch4 class=\"Promote__Content__Title\"\u003EAsync Data with Nuxt.js\u003C\u002Fh4\u003E\n      \u003Cp class=\"Promote__Content__Description\"\u003ELearn how to manage asynchronous data with Nuxt.js.\u003C\u002Fp\u003E\n      \u003Cp class=\"Promote__Content__Signature\"\u003EVideo courses made by VueSchool to support Nuxt.js development.\u003C\u002Fp\u003E\n    \u003C\u002Fdiv\u003E\n  \u003C\u002Fa\u003E\n\u003C\u002Fdiv\u003E\n\n\u003Ch2 id=\"the-asyncdata-method\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#the-asyncdata-method\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EThe asyncData method\u003C\u002Fh2\u003E\u003Cp\u003ESometimes you just want to fetch data and pre-render it on the server without using a store. \n\u003Ccode\u003EasyncData\u003C\u002Fcode\u003E is called every time before loading the \u003Cstrong\u003Epage\u003C\u002Fstrong\u003E component.\nIt will be called server-side once (on the first request to the Nuxt app) and client-side when navigating to further routes. \nThis method receives \u003Ca href=\"\u002Fapi\u002Fcontext\"\u003Ethe context\u003C\u002Fa\u003E as the first argument, you can use it to fetch some data and Nuxt.js will merge it with the component data.\u003C\u002Fp\u003E\n\u003Cp\u003ENuxt.js will automatically merge the returned object with the component data.\u003C\u002Fp\u003E\n\u003Cdiv class=\"Alert Alert--orange\"\u003E\n\n\u003Cp\u003EYou do \u003Cstrong\u003ENOT\u003C\u002Fstrong\u003E have access to the component instance through \u003Ccode\u003Ethis\u003C\u002Fcode\u003E inside \u003Ccode\u003EasyncData\u003C\u002Fcode\u003E because it is called \u003Cstrong\u003Ebefore initializing\u003C\u002Fstrong\u003E the component.\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\n\u003Cp\u003ENuxt.js offers you different ways to use \u003Ccode\u003EasyncData\u003C\u002Fcode\u003E. Choose the one you&#39;re the most familiar with:\u003C\u002Fp\u003E\n\u003Col\u003E\n\u003Cli\u003EReturning a \u003Ccode\u003EPromise\u003C\u002Fcode\u003E. Nuxt.js will wait for the promise to be resolved before rendering the component.\u003C\u002Fli\u003E\n\u003Cli\u003EUsing \u003Ca href=\"https:\u002F\u002Fjavascript.info\u002Fasync-await\"\u003Easync\u002Fawait\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Cdiv class=\"Alert Alert--grey\"\u003E\n\n\u003Cp\u003EWe are using \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fmzabriskie\u002Faxios\"\u003Eaxios\u003C\u002Fa\u003E to make isomorphic HTTP requests, we \u003Cstrong\u003Estrongly recommend\u003C\u002Fstrong\u003E to use our \u003Ca href=\"https:\u002F\u002Faxios.nuxtjs.org\u002F\"\u003Eaxios module\u003C\u002Fa\u003E for your Nuxt projects.\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\n\u003Cp\u003EIf you are using \u003Ccode\u003Eaxios\u003C\u002Fcode\u003E directly from \u003Ccode\u003Enode_modules\u003C\u002Fcode\u003E and used the \u003Ccode\u003Eaxios.interceptors\u003C\u002Fcode\u003E to add interceptors to transform the data, make sure to create an instance before adding interceptors. If not, when you refresh the serverRender page,  the interceptors will be added multiple times, which will cause a data error.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E axios \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E'axios'\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E myaxios = axios.create({\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F ...\u003C\u002Fspan\u003E\n})\nmyaxios.interceptors.response.use(\u003Cspan class=\"hljs-function\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-params\"\u003Eresponse\u003C\u002Fspan\u003E) \u003C\u002Fspan\u003E{\n  \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E response.data\n}, \u003Cspan class=\"hljs-function\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-params\"\u003Eerror\u003C\u002Fspan\u003E) \u003C\u002Fspan\u003E{\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F ...\u003C\u002Fspan\u003E\n})\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"returning-a-promise\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#returning-a-promise\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EReturning a Promise\u003C\u002Fh3\u003E\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  asyncData ({ params }) {\n    \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E axios.get(\u003Cspan class=\"hljs-string\"\u003E`https:\u002F\u002Fmy-api\u002Fposts\u002F\u003Cspan class=\"hljs-subst\"\u003E${params.id}\u003C\u002Fspan\u003E`\u003C\u002Fspan\u003E)\n      .then(\u003Cspan class=\"hljs-function\"\u003E(\u003Cspan class=\"hljs-params\"\u003Eres\u003C\u002Fspan\u003E) =&gt;\u003C\u002Fspan\u003E {\n        \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E { \u003Cspan class=\"hljs-attr\"\u003Etitle\u003C\u002Fspan\u003E: res.data.title }\n      })\n  }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"using-async-await\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#using-async-await\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EUsing async\u002Fawait\u003C\u002Fh3\u003E\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-keyword\"\u003Easync\u003C\u002Fspan\u003E asyncData ({ params }) {\n    \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E { data } = \u003Cspan class=\"hljs-keyword\"\u003Eawait\u003C\u002Fspan\u003E axios.get(\u003Cspan class=\"hljs-string\"\u003E`https:\u002F\u002Fmy-api\u002Fposts\u002F\u003Cspan class=\"hljs-subst\"\u003E${params.id}\u003C\u002Fspan\u003E`\u003C\u002Fspan\u003E)\n    \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E { \u003Cspan class=\"hljs-attr\"\u003Etitle\u003C\u002Fspan\u003E: data.title }\n  }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"displaying-the-data\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#displaying-the-data\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EDisplaying the data\u003C\u002Fh3\u003E\u003Cp\u003EThe result from asyncData will be \u003Cstrong\u003Emerged\u003C\u002Fstrong\u003E with data.\nYou can display the data inside your template like you&#39;re used to doing:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eh1\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E{{ title }}\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Eh1\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch2 id=\"the-context\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#the-context\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EThe Context\u003C\u002Fh2\u003E\u003Cp\u003ETo see the list of available keys in \u003Ccode\u003Econtext\u003C\u002Fcode\u003E, take a look at the \u003Ca href=\"\u002Fapi\u002Fcontext\"\u003EAPI Essential \u003Ccode\u003Econtext\u003C\u002Fcode\u003E\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\n\u003Ch3 id=\"use-code-req-code-code-res-code-objects\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#use-code-req-code-code-res-code-objects\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EUse \u003Ccode\u003Ereq\u003C\u002Fcode\u003E\u002F\u003Ccode\u003Eres\u003C\u002Fcode\u003E objects\u003C\u002Fh3\u003E\u003Cp\u003EWhen \u003Ccode\u003EasyncData\u003C\u002Fcode\u003E is called on server side, you have access to the \u003Ccode\u003Ereq\u003C\u002Fcode\u003E and \u003Ccode\u003Eres\u003C\u002Fcode\u003E objects of the user request.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-keyword\"\u003Easync\u003C\u002Fspan\u003E asyncData ({ req, res }) {\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Please check if you are on the server side before\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F using req and res\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-keyword\"\u003Eif\u003C\u002Fspan\u003E (process.server) {\n      \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E { \u003Cspan class=\"hljs-attr\"\u003Ehost\u003C\u002Fspan\u003E: req.headers.host }\n    }\n\n    \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E {}\n  }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"accessing-dynamic-route-data\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#accessing-dynamic-route-data\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EAccessing dynamic route data\u003C\u002Fh3\u003E\u003Cp\u003EYou can use the \u003Ccode\u003Econtext\u003C\u002Fcode\u003E parameter to access dynamic route data as well!\nFor example, dynamic route params can be retrieved using the name of the file or folder that configured it.\nIf you&#39;ve defined a file named \u003Ccode\u003E_slug.vue\u003C\u002Fcode\u003E in your \u003Ccode\u003Epages\u003C\u002Fcode\u003E folder, you can access the value via \u003Ccode\u003Econtext.params.slug\u003C\u002Fcode\u003E:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-keyword\"\u003Easync\u003C\u002Fspan\u003E asyncData ({ params }) {\n    \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E slug = params.slug \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F When calling \u002Fabc the slug will be \"abc\"\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E { slug }\n  }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"listening-to-query-changes\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#listening-to-query-changes\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EListening to query changes\u003C\u002Fh3\u003E\u003Cp\u003EThe \u003Ccode\u003EasyncData\u003C\u002Fcode\u003E method \u003Cstrong\u003Eis not called\u003C\u002Fstrong\u003E on query string changes by default.\nIf you want to change this behavior, for example when building a pagination component,\nyou can set up parameters that should be listened to with the \u003Ccode\u003EwatchQuery\u003C\u002Fcode\u003E property of your page component.\nLearn more on the \u003Ca href=\"\u002Fapi\u002Fpages-watchquery\"\u003EAPI \u003Ccode\u003EwatchQuery\u003C\u002Fcode\u003E page\u003C\u002Fa\u003E page.\u003C\u002Fp\u003E\n\u003Ch2 id=\"handling-errors\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#handling-errors\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EHandling Errors\u003C\u002Fh2\u003E\u003Cp\u003ENuxt.js adds the \u003Ccode\u003Eerror(params)\u003C\u002Fcode\u003E method in the \u003Ccode\u003Econtext\u003C\u002Fcode\u003E, which you can call to display the error page. \u003Ccode\u003Eparams.statusCode\u003C\u002Fcode\u003E will be also used to render the proper status code from the server-side.\u003C\u002Fp\u003E\n\u003Cp\u003EExample with a \u003Ccode\u003EPromise\u003C\u002Fcode\u003E:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  asyncData ({ params, error }) {\n    \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E axios.get(\u003Cspan class=\"hljs-string\"\u003E`https:\u002F\u002Fmy-api\u002Fposts\u002F\u003Cspan class=\"hljs-subst\"\u003E${params.id}\u003C\u002Fspan\u003E`\u003C\u002Fspan\u003E)\n      .then(\u003Cspan class=\"hljs-function\"\u003E(\u003Cspan class=\"hljs-params\"\u003Eres\u003C\u002Fspan\u003E) =&gt;\u003C\u002Fspan\u003E {\n        \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E { \u003Cspan class=\"hljs-attr\"\u003Etitle\u003C\u002Fspan\u003E: res.data.title }\n      })\n      .catch(\u003Cspan class=\"hljs-function\"\u003E(\u003Cspan class=\"hljs-params\"\u003Ee\u003C\u002Fspan\u003E) =&gt;\u003C\u002Fspan\u003E {\n        error({ \u003Cspan class=\"hljs-attr\"\u003EstatusCode\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E404\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-attr\"\u003Emessage\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E'Post not found'\u003C\u002Fspan\u003E })\n      })\n  }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003ETo customize the error page, take a look at the \u003Ca href=\"\u002Fguide\u002Fviews#layouts\"\u003Eviews guide\u003C\u002Fa\u003E .\u003C\u002Fp\u003E\n"},contributors:[]}],fetch:[],mutations:[]});