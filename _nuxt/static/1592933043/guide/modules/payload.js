__NUXT_JSONP__("/guide/modules", {data:[{},{path:"\u002Fvi\u002Fguide\u002Fmodules",section:"guide",page:{attrs:{title:"Modules",description:"Modules are Nuxt.js extensions which can extend its core functionality and add endless integrations."},body:"\u003Cblockquote\u003E\n\u003Cp\u003EModules are Nuxt.js extensions which can extend its core functionality and add endless integrations.\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Ch2 id=\"introduction\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#introduction\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EIntroduction\u003C\u002Fh2\u003E\u003Cp\u003EWhile developing production-grade applications with Nuxt, you&#39;ll soon discover that the framework&#39;s core\nfunctionality is not enough. Nuxt can be extended with configuration options and plugins,\nbut maintaining these customizations across multiple projects is tedious, repetitive and time-consuming.\nOn the other hand, supporting every project&#39;s needs out of the box would make Nuxt very complex and hard to use.\u003C\u002Fp\u003E\n\u003Cp\u003EThis is one of the reasons why Nuxt provides a higher-order module system that makes it easy to extend the core.\nModules are simply \u003Cstrong\u003Efunctions\u003C\u002Fstrong\u003E that are called sequentially when booting Nuxt.\nThe framework waits for each module to finish before continuing.\nIn this way, modules can customize almost any aspect of Nuxt.\nThanks to Nuxt&#39;s modular design (based on webpack&#39;s \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fwebpack\u002Ftapable\"\u003ETapable\u003C\u002Fa\u003E),\nmodules can easily register hooks for certain entry points like the builder initialization.\nModules can also override templates, configure webpack loaders, add CSS libraries, and perform many other useful tasks.\u003C\u002Fp\u003E\n\u003Cp\u003EBest of all, Nuxt modules can be incorporated into npm packages.\nThis makes them easy to reuse across projects and to share with the Nuxt community,\nhelping create an ecosystem of high-quality Nuxt add-ons.\u003C\u002Fp\u003E\n\u003Cp\u003EModules are great if you:\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003EAre a member of an \u003Cstrong\u003Eagile team\u003C\u002Fstrong\u003E that needs to quickly bootstrap new projects.\u003C\u002Fli\u003E\n\u003Cli\u003EAre tired of \u003Cstrong\u003Ere-inventing\u003C\u002Fstrong\u003E the wheel for common tasks like integrating Google Analytics.\u003C\u002Fli\u003E\n\u003Cli\u003EAre a lovely \u003Cstrong\u003EOpen Source\u003C\u002Fstrong\u003E enthusiast who would like to easily \u003Cstrong\u003Eshare\u003C\u002Fstrong\u003E your work with the community.\u003C\u002Fli\u003E\n\u003Cli\u003EAre a member of an \u003Cstrong\u003Eenterprise\u003C\u002Fstrong\u003E company that values \u003Cstrong\u003Equality\u003C\u002Fstrong\u003E and \u003Cstrong\u003Ereusability\u003C\u002Fstrong\u003E.\u003C\u002Fli\u003E\n\u003Cli\u003EAre often up against short deadlines and don&#39;t have time to dig into the details of every new library or integration.\u003C\u002Fli\u003E\n\u003Cli\u003EAre tired of dealing with breaking changes to low-level interfaces, and need things that \u003Cstrong\u003Ejust workâ„¢\u003C\u002Fstrong\u003E.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Ch2 id=\"list-of-nuxt-js-modules\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#list-of-nuxt-js-modules\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EList of Nuxt.js modules\u003C\u002Fh2\u003E\u003Cp\u003EThe Nuxt.js team offers \u003Cstrong\u003Eofficial\u003C\u002Fstrong\u003E modules:\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fhttp.nuxtjs.org\"\u003E@nuxt\u002Fhttp\u003C\u002Fa\u003E: Light and universal way to make HTTP requests, based on \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fsindresorhus\u002Fky-universal\"\u003Eky-universal\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fcontent.nuxtjs.org\"\u003E@nuxt\u002Fcontent\u003C\u002Fa\u003E: Write in a content\u002F directory and fetch your Markdown, JSON, YAML and CSV files through a MongoDB like API\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Faxios.nuxtjs.org\"\u003E@nuxtjs\u002Faxios\u003C\u002Fa\u003E: Secure and Easy Axios integration with Nuxt.js to make HTTP requests\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fpwa.nuxtjs.org\"\u003E@nuxtjs\u002Fpwa\u003C\u002Fa\u003E: Supercharge Nuxt with a heavily tested, updated and stable PWA solution\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fauth.nuxtjs.org\"\u003E@nuxtjs\u002Fauth\u003C\u002Fa\u003E: Authentication module for Nuxt.js, offering different schemes and strategies\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003EA list of Nuxt.js modules made by the community is available on \u003Ca href=\"https:\u002F\u002Fawesomejs.dev\u002Ffor\u002Fnuxt\u002F\"\u003Ehttps:\u002F\u002Fawesomejs.dev\u002Ffor\u002Fnuxt\u002F\u003C\u002Fa\u003E and \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Ftopics\u002Fnuxt-module\"\u003Ehttps:\u002F\u002Fgithub.com\u002Ftopics\u002Fnuxt-module\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003Ch2 id=\"write-a-basic-module\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#write-a-basic-module\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EWrite a basic Module\u003C\u002Fh2\u003E\u003Cp\u003EAs already mentioned modules are just simple functions. They can be packaged as npm modules or directly included in project source code.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003Emodules\u002Fsimple.js\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-function\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title\"\u003ESimpleModule\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-params\"\u003EmoduleOptions\u003C\u002Fspan\u003E) \u003C\u002Fspan\u003E{\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Write your code here\u003C\u002Fspan\u003E\n}\n\n\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F REQUIRED if publishing the module as npm package\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F module.exports.meta = require('.\u002Fpackage.json')\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003Cstrong\u003E\u003Ccode\u003EmoduleOptions\u003C\u002Fcode\u003E\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp\u003EThis is the object passed using \u003Ccode\u003Emodules\u003C\u002Fcode\u003E array by user we can use it to customize it&#39;s behavior.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003E\u003Ccode\u003Ethis.options\u003C\u002Fcode\u003E\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp\u003EYou can directly access Nuxt options using this reference. This is the content of the user&#39;s \u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003E with all default options assigned to. It can be used for shared options between modules.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003E\u003Ccode\u003Ethis.nuxt\u003C\u002Fcode\u003E\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp\u003EThis is a reference to current Nuxt instance. Refer to \u003Ca href=\"\u002Fapi\u002Finternals-nuxt\"\u003ENuxt class docs for available methods\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003E\u003Ccode\u003Ethis\u003C\u002Fcode\u003E\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp\u003EContext of modules. Please look into the \u003Ca href=\"\u002Fapi\u002Finternals-module-container\"\u003EModuleContainer\u003C\u002Fa\u003E class docs for available methods.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003E\u003Ccode\u003Emodule.exports.meta\u003C\u002Fcode\u003E\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp\u003EThis line is \u003Cstrong\u003Erequired\u003C\u002Fstrong\u003E if you are publishing module as an npm package. Nuxt internally uses meta to work better with your package.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003Enuxt.config.js\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003Emodules\u003C\u002Fspan\u003E: [\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Simple usage\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-string\"\u003E'~\u002Fmodules\u002Fsimple'\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Passing options directly\u003C\u002Fspan\u003E\n      [\u003Cspan class=\"hljs-string\"\u003E'~\u002Fmodules\u002Fsimple'\u003C\u002Fspan\u003E, { \u003Cspan class=\"hljs-attr\"\u003Etoken\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E'123'\u003C\u002Fspan\u003E }]\n  ]\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EWe then tell Nuxt to load some specific modules for a project with optional parameters as options.\nPlease refer to \u003Ca href=\"\u002Fapi\u002Fconfiguration-modules\"\u003Emodules configuration\u003C\u002Fa\u003E docs for more info!\u003C\u002Fp\u003E\n\u003Ch2 id=\"async-modules\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#async-modules\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EAsync Modules\u003C\u002Fh2\u003E\u003Cp\u003ENot all modules will do everything synchronous. For example you may want to develop a module which needs fetching some API or doing async IO. For this, Nuxt supports async modules which can return a Promise or call a callback.\u003C\u002Fp\u003E\n\u003Ch2 id=\"build-only-modules\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#build-only-modules\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EBuild-only Modules\u003C\u002Fh2\u003E\u003Cp\u003EUsually, modules are only required during development and build time. Using \u003Ccode\u003EbuildModules\u003C\u002Fcode\u003E helps to make production startup faster and also significantly decreasing \u003Ccode\u003Enode_modules\u003C\u002Fcode\u003E size for production deployments. If you are a module author, It is highly recommended to suggest users installing your package as a \u003Ccode\u003EdevDependency\u003C\u002Fcode\u003E and use \u003Ccode\u003EbuildModules\u003C\u002Fcode\u003E instead of \u003Ccode\u003Emodules\u003C\u002Fcode\u003E for \u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\n\u003Cp\u003EYour module is a \u003Ccode\u003EbuildModule\u003C\u002Fcode\u003E unless:\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003EIt is providing a serverMiddleware\u003C\u002Fli\u003E\n\u003Cli\u003EIt has to register a Node.js runtime hook (Like sentry)\u003C\u002Fli\u003E\n\u003Cli\u003EIt is affecting vue-renderer behavior or using a hook from \u003Ccode\u003Eserver:\u003C\u002Fcode\u003E or \u003Ccode\u003Evue-renderer:\u003C\u002Fcode\u003E namespace\u003C\u002Fli\u003E\n\u003Cli\u003EAnything else that is outside of webpack scope (Hint: plugins and templates are compiled and are in webpack scope)\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cdiv class=\"Alert Alert--orange\"\u003E\n\n\u003Cp\u003E\u003Cb\u003ENOTE:\u003C\u002Fb\u003E If you are going to offer using \u003Ccode\u003EbuildModules\u003C\u002Fcode\u003E please mention that this feature is only available since Nuxt \u003Cb\u003Ev2.9\u003C\u002Fb\u003E. Older users should upgrade Nuxt or use the \u003Ccode\u003Emodules\u003C\u002Fcode\u003E section.\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\n\u003Ch3 id=\"use-async-await\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#use-async-await\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EUse async\u002Fawait\u003C\u002Fh3\u003E\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E fse \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E'fs-extra'\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Easync\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-function\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title\"\u003EasyncModule\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-params\"\u003E\u003C\u002Fspan\u003E) \u003C\u002Fspan\u003E{\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F You can do async works here using `async`\u002F`await`\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E pages = \u003Cspan class=\"hljs-keyword\"\u003Eawait\u003C\u002Fspan\u003E fse.readJson(\u003Cspan class=\"hljs-string\"\u003E'.\u002Fpages.json'\u003C\u002Fspan\u003E)\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"return-a-promise\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#return-a-promise\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EReturn a Promise\u003C\u002Fh3\u003E\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E axios \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E'axios'\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-function\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title\"\u003EasyncModule\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-params\"\u003E\u003C\u002Fspan\u003E) \u003C\u002Fspan\u003E{\n  \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E axios.get(\u003Cspan class=\"hljs-string\"\u003E'https:\u002F\u002Fjsonplaceholder.typicode.com\u002Fusers'\u003C\u002Fspan\u003E)\n    .then(\u003Cspan class=\"hljs-function\"\u003E\u003Cspan class=\"hljs-params\"\u003Eres\u003C\u002Fspan\u003E =&gt;\u003C\u002Fspan\u003E res.data.map(\u003Cspan class=\"hljs-function\"\u003E\u003Cspan class=\"hljs-params\"\u003Euser\u003C\u002Fspan\u003E =&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E'\u002Fusers\u002F'\u003C\u002Fspan\u003E + user.username))\n    .then(\u003Cspan class=\"hljs-function\"\u003E(\u003Cspan class=\"hljs-params\"\u003Eroutes\u003C\u002Fspan\u003E) =&gt;\u003C\u002Fspan\u003E {\n      \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Do something by extending Nuxt routes\u003C\u002Fspan\u003E\n    })\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch2 id=\"common-snippets\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#common-snippets\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ECommon Snippets\u003C\u002Fh2\u003E\u003Ch3 id=\"top-level-options\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#top-level-options\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ETop level options\u003C\u002Fh3\u003E\u003Cp\u003ESometimes it is more convenient if we can use top level options while registering modules in \u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003E.\nThis allows us to combine multiple option sources.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003Enuxt.config.js\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003Emodules\u003C\u002Fspan\u003E: [\n    [\u003Cspan class=\"hljs-string\"\u003E'@nuxtjs\u002Faxios'\u003C\u002Fspan\u003E, { \u003Cspan class=\"hljs-attr\"\u003EanotherOption\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-literal\"\u003Etrue\u003C\u002Fspan\u003E }]\n  ],\n\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F axios module is aware of this by using `this.options.axios`\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-attr\"\u003Eaxios\u003C\u002Fspan\u003E: {\n    option1,\n    option2\n  }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003Cstrong\u003Emodule.js\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-function\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-params\"\u003EmoduleOptions\u003C\u002Fspan\u003E) \u003C\u002Fspan\u003E{\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F `options` will contain option1, option2 and anotherOption\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E options = \u003Cspan class=\"hljs-built_in\"\u003EObject\u003C\u002Fspan\u003E.assign({}, \u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.options.axios, moduleOptions)\n\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F ...\u003C\u002Fspan\u003E\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"provide-plugins\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#provide-plugins\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EProvide plugins\u003C\u002Fh3\u003E\u003Cp\u003EIt is common that modules provide one or more plugins when added.\nFor example \u003Ca href=\"https:\u002F\u002Fbootstrap-vue.js.org\"\u003Ebootstrap-vue\u003C\u002Fa\u003E module would require to register itself into Vue.\nIn such situations we can use the \u003Ccode\u003Ethis.addPlugin\u003C\u002Fcode\u003E helper.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003Eplugin.js\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E Vue \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E'vue'\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E BootstrapVue \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E'bootstrap-vue\u002Fdist\u002Fbootstrap-vue.esm'\u003C\u002Fspan\u003E\n\nVue.use(BootstrapVue)\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003Cstrong\u003Emodule.js\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E path \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E'path'\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-function\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title\"\u003EnuxtBootstrapVue\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-params\"\u003EmoduleOptions\u003C\u002Fspan\u003E) \u003C\u002Fspan\u003E{\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Register `plugin.js` template\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.addPlugin(path.resolve(__dirname, \u003Cspan class=\"hljs-string\"\u003E'plugin.js'\u003C\u002Fspan\u003E))\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"template-plugins\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#template-plugins\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ETemplate plugins\u003C\u002Fh3\u003E\u003Cp\u003ERegistered templates and plugins can leverage \u003Ca href=\"https:\u002F\u002Flodash.com\u002Fdocs\u002F4.17.4#template\"\u003Elodash templates\u003C\u002Fa\u003E to conditionally change registered plugins output.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003Eplugin.js\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Set Google Analytics UA\u003C\u002Fspan\u003E\nga(\u003Cspan class=\"hljs-string\"\u003E'create'\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-string\"\u003E'&lt;%= options.ua %&gt;'\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-string\"\u003E'auto'\u003C\u002Fspan\u003E)\n\n&lt;% \u003Cspan class=\"hljs-keyword\"\u003Eif\u003C\u002Fspan\u003E (options.debug) { %&gt;\n\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Dev only code\u003C\u002Fspan\u003E\n&lt;% } %&gt;\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003Cstrong\u003Emodule.js\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E path \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E'path'\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-function\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title\"\u003EnuxtBootstrapVue\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-params\"\u003EmoduleOptions\u003C\u002Fspan\u003E) \u003C\u002Fspan\u003E{\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Register `plugin.js` template\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.addPlugin({\n    \u003Cspan class=\"hljs-attr\"\u003Esrc\u003C\u002Fspan\u003E: path.resolve(__dirname, \u003Cspan class=\"hljs-string\"\u003E'plugin.js'\u003C\u002Fspan\u003E),\n    \u003Cspan class=\"hljs-attr\"\u003Eoptions\u003C\u002Fspan\u003E: {\n      \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Nuxt will replace `options.ua` with `123` when copying plugin to project\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-attr\"\u003Eua\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E123\u003C\u002Fspan\u003E,\n\n      \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F conditional parts with dev will be stripped from plugin code on production builds\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-attr\"\u003Edebug\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.options.dev\n    }\n  })\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"add-a-css-library\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#add-a-css-library\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EAdd a CSS library\u003C\u002Fh3\u003E\u003Cp\u003EIf your module will provide a CSS library, make sure to perform a check if the user already included the library to avoid duplicates, and add \u003Cstrong\u003Ean option to disable\u003C\u002Fstrong\u003E the CSS library in the module.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003Emodule.js\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-function\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-params\"\u003EmoduleOptions\u003C\u002Fspan\u003E) \u003C\u002Fspan\u003E{\n  \u003Cspan class=\"hljs-keyword\"\u003Eif\u003C\u002Fspan\u003E (moduleOptions.fontAwesome !== \u003Cspan class=\"hljs-literal\"\u003Efalse\u003C\u002Fspan\u003E) {\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Add Font Awesome\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.options.css.push(\u003Cspan class=\"hljs-string\"\u003E'font-awesome\u002Fcss\u002Ffont-awesome.css'\u003C\u002Fspan\u003E)\n  }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"emit-assets\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#emit-assets\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EEmit assets\u003C\u002Fh3\u003E\u003C!-- todo: up2date? --\u003E\n\n\u003Cp\u003EWe can register webpack plugins to emit assets during build.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003Emodule.js\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-function\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-params\"\u003EmoduleOptions\u003C\u002Fspan\u003E) \u003C\u002Fspan\u003E{\n  \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E info = \u003Cspan class=\"hljs-string\"\u003E'Built by awesome module - 1.3 alpha on '\u003C\u002Fspan\u003E + \u003Cspan class=\"hljs-built_in\"\u003EDate\u003C\u002Fspan\u003E.now()\n\n  \u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.options.build.plugins.push({\n    apply (compiler) {\n      compiler.plugin(\u003Cspan class=\"hljs-string\"\u003E'emit'\u003C\u002Fspan\u003E, (compilation, cb) =&gt; {\n        \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F This will generate `.nuxt\u002Fdist\u002Finfo.txt' with contents of info variable.\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Source can be buffer too\u003C\u002Fspan\u003E\n        compilation.assets[\u003Cspan class=\"hljs-string\"\u003E'info.txt'\u003C\u002Fspan\u003E] = { \u003Cspan class=\"hljs-attr\"\u003Esource\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-function\"\u003E\u003Cspan class=\"hljs-params\"\u003E()\u003C\u002Fspan\u003E =&gt;\u003C\u002Fspan\u003E info, \u003Cspan class=\"hljs-attr\"\u003Esize\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-function\"\u003E\u003Cspan class=\"hljs-params\"\u003E()\u003C\u002Fspan\u003E =&gt;\u003C\u002Fspan\u003E info.length }\n\n        cb()\n      })\n    }\n  })\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"register-custom-webpack-loaders\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#register-custom-webpack-loaders\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ERegister custom webpack loaders\u003C\u002Fh3\u003E\u003Cp\u003EWe can do the same as \u003Ccode\u003Ebuild.extend\u003C\u002Fcode\u003E in \u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003E using \u003Ccode\u003Ethis.extendBuild\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003Emodule.js\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-function\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-params\"\u003EmoduleOptions\u003C\u002Fspan\u003E) \u003C\u002Fspan\u003E{\n    \u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.extendBuild(\u003Cspan class=\"hljs-function\"\u003E(\u003Cspan class=\"hljs-params\"\u003Econfig, { isClient, isServer }\u003C\u002Fspan\u003E) =&gt;\u003C\u002Fspan\u003E {\n      \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F `.foo` Loader\u003C\u002Fspan\u003E\n      config.module.rules.push({\n        \u003Cspan class=\"hljs-attr\"\u003Etest\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-regexp\"\u003E\u002F\\.foo$\u002F\u003C\u002Fspan\u003E,\n        use: [...]\n      })\n\n      \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Customize existing loaders\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Refer to source code for Nuxt internals:\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F https:\u002F\u002Fgithub.com\u002Fnuxt\u002Fnuxt.js\u002Ftree\u002Fdev\u002Fpackages\u002Fbuilder\u002Fsrc\u002Fwebpack\u002Fbase.js\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E barLoader = config.module.rules.find(\u003Cspan class=\"hljs-function\"\u003E\u003Cspan class=\"hljs-params\"\u003Erule\u003C\u002Fspan\u003E =&gt;\u003C\u002Fspan\u003E rule.loader === \u003Cspan class=\"hljs-string\"\u003E'bar-loader'\u003C\u002Fspan\u003E)\n  })\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch2 id=\"run-tasks-on-specific-hooks\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#run-tasks-on-specific-hooks\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ERun Tasks on Specific hooks\u003C\u002Fh2\u003E\u003Cp\u003EYour module may need to do things only on specific conditions and not just during Nuxt initialization.\nWe can use the powerful hooks Nuxt.js system to do tasks on specific events (based on \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fjsless\u002Fhable\"\u003EHable\u003C\u002Fa\u003E).\nNuxt will wait for your function if it return a Promise or is defined as \u003Ccode\u003Easync\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\n\u003Cp\u003EHere are some basic examples:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-function\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title\"\u003EmyModule\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-params\"\u003E\u003C\u002Fspan\u003E) \u003C\u002Fspan\u003E{\n  \u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.nuxt.hook(\u003Cspan class=\"hljs-string\"\u003E'modules:done'\u003C\u002Fspan\u003E, (moduleContainer) =&gt; {\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F This will be called when all modules finished loading\u003C\u002Fspan\u003E\n  })\n\n  \u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.nuxt.hook(\u003Cspan class=\"hljs-string\"\u003E'render:before'\u003C\u002Fspan\u003E, (renderer) =&gt; {\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Called after the renderer was created\u003C\u002Fspan\u003E\n  })\n\n  \u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.nuxt.hook(\u003Cspan class=\"hljs-string\"\u003E'build:compile'\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-keyword\"\u003Easync\u003C\u002Fspan\u003E ({ name, compiler }) =&gt; {\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Called before the compiler (default: webpack) starts\u003C\u002Fspan\u003E\n  })\n\n  \u003Cspan class=\"hljs-keyword\"\u003Ethis\u003C\u002Fspan\u003E.nuxt.hook(\u003Cspan class=\"hljs-string\"\u003E'generate:before'\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-keyword\"\u003Easync\u003C\u002Fspan\u003E (generator) =&gt; {\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F This will be called before Nuxt generates your pages\u003C\u002Fspan\u003E\n  })\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch2 id=\"module-package-commands\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#module-package-commands\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EModule package commands\u003C\u002Fh2\u003E\u003Cp\u003E\u003Cstrong\u003EExperimental\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp\u003EStarting in \u003Ccode\u003Ev2.4.0\u003C\u002Fcode\u003E, you can add custom nuxt commands through a Nuxt module&#39;s package. To do so, you must follow the \u003Ccode\u003ENuxtCommand\u003C\u002Fcode\u003E API when defining your command. A simple example hypothetically placed in \u003Ccode\u003Emy-module\u002Fbin\u002Fcommand.js\u003C\u002Fcode\u003E looks like this:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-meta\"\u003E#!\u002Fusr\u002Fbin\u002Fenv node\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E consola = \u003Cspan class=\"hljs-built_in\"\u003Erequire\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E'consola'\u003C\u002Fspan\u003E)\n\u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E { NuxtCommand } = \u003Cspan class=\"hljs-built_in\"\u003Erequire\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E'@nuxt\u002Fcli'\u003C\u002Fspan\u003E)\n\nNuxtCommand.run({\n  \u003Cspan class=\"hljs-attr\"\u003Ename\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E'command'\u003C\u002Fspan\u003E,\n  \u003Cspan class=\"hljs-attr\"\u003Edescription\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E'My Module Command'\u003C\u002Fspan\u003E,\n  \u003Cspan class=\"hljs-attr\"\u003Eusage\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E'command &lt;foobar&gt;'\u003C\u002Fspan\u003E,\n  \u003Cspan class=\"hljs-attr\"\u003Eoptions\u003C\u002Fspan\u003E: {\n    \u003Cspan class=\"hljs-attr\"\u003Efoobar\u003C\u002Fspan\u003E: {\n      \u003Cspan class=\"hljs-attr\"\u003Ealias\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E'fb'\u003C\u002Fspan\u003E,\n      \u003Cspan class=\"hljs-attr\"\u003Etype\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E'string'\u003C\u002Fspan\u003E,\n      \u003Cspan class=\"hljs-attr\"\u003Edescription\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E'Simple test string'\u003C\u002Fspan\u003E\n    }\n  },\n  run (cmd) {\n    consola.info(cmd.argv)\n  }\n})\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EA few things of note here. First, notice the call to \u003Ccode\u003E\u002Fusr\u002Fbin\u002Fenv\u003C\u002Fcode\u003E to retrieve the Node executable. Also notice that ES module syntax can&#39;t be used for commands unless you manually incorporate \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fstandard-things\u002Fesm\"\u003E\u003Ccode\u003Eesm\u003C\u002Fcode\u003E\u003C\u002Fa\u003E into your code.\u003C\u002Fp\u003E\n\u003Cp\u003ENext, you&#39;ll notice how \u003Ccode\u003ENuxtCommand.run()\u003C\u002Fcode\u003E is used to specify the settings and behavior of the command. Options are defined in \u003Ccode\u003Eoptions\u003C\u002Fcode\u003E, which get parsed via \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fsubstack\u002Fminimist\"\u003E\u003Ccode\u003Eminimist\u003C\u002Fcode\u003E\u003C\u002Fa\u003E.\nOnce arguments are parsed, \u003Ccode\u003Erun()\u003C\u002Fcode\u003E is automatically called with the \u003Ccode\u003ENuxtCommand\u003C\u002Fcode\u003E instance as first parameter.\u003C\u002Fp\u003E\n\u003Cp\u003EIn the example above, \u003Ccode\u003Ecmd.argv\u003C\u002Fcode\u003E is used to retrieve parsed command-line arguments. There are more methods and properties in \u003Ccode\u003ENuxtCommand\u003C\u002Fcode\u003E -- documentation on them will be provided as this feature is further tested and improved.\u003C\u002Fp\u003E\n\u003Cp\u003ETo make your command recognizable by the Nuxt CLI, list it under the \u003Ccode\u003Ebin\u003C\u002Fcode\u003E section of your package.json, using the \u003Ccode\u003Enuxt-module\u003C\u002Fcode\u003E convention, where \u003Ccode\u003Emodule\u003C\u002Fcode\u003E relates to your package&#39;s name. With this central binary, you can use \u003Ccode\u003Eargv\u003C\u002Fcode\u003E to further parse more \u003Ccode\u003Esubcommands\u003C\u002Fcode\u003E for your command if you desire.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E{\n  \u003Cspan class=\"hljs-string\"\u003E\"bin\"\u003C\u002Fspan\u003E: {\n    \u003Cspan class=\"hljs-string\"\u003E\"nuxt-foobar\"\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E\".\u002Fbin\u002Fcommand.js\"\u003C\u002Fspan\u003E\n  }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EOnce your package is installed (via NPM or Yarn), you&#39;ll be able to execute \u003Ccode\u003Enuxt foobar ...\u003C\u002Fcode\u003E on the command-line.\u003C\u002Fp\u003E\n\u003Cdiv class=\"Alert\"\u003E\n\n\u003Cp\u003EThere are way more hooks and possibilities for modules. Please read the \u003Ca href=\"\u002Fapi\u002Finternals\"\u003ENuxt Internals\u003C\u002Fa\u003E to find out more about the nuxt-internal API.\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n"},contributors:[]}],fetch:[],mutations:[]});